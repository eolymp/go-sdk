// Code generated by protoc-gen-go-mcp. DO NOT EDIT.
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-go-mcp for more details.

package community

import (
	context "context"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
)

type _CreditServiceMCPServer interface {
	AddTool(name, desc string, confirm bool, namespaces []string, in, out proto.Message, handler func(context.Context, []byte) (any, error))
}

// RegisterCreditServiceMCPTools registers tools for CreditService
func RegisterCreditServiceMCPTools(mcp _CreditServiceMCPServer, srv CreditServiceClient) {
	mcp.AddTool("community.describe_balance", "Retrieve member balance", false, []string{"eolymp.community.Member"}, &DescribeBalanceInput{}, &DescribeBalanceOutput{}, _mcp_CreditService_DescribeBalance(srv))
	mcp.AddTool("community.grant_credit", "Grant credit to a member", true, []string{"eolymp.community.Member"}, &GrantCreditInput{}, &GrantCreditOutput{}, _mcp_CreditService_GrantCredit(srv))
	mcp.AddTool("community.cancel_credit", "Cancel credit grant by ID", true, []string{"eolymp.community.Member"}, &CancelCreditInput{}, &CancelCreditOutput{}, _mcp_CreditService_CancelCredit(srv))
	mcp.AddTool("community.list_credit_grants", "Find credit grants for a member by his ID", false, []string{"eolymp.community.Member"}, &ListCreditGrantsInput{}, &ListCreditGrantsOutput{}, _mcp_CreditService_ListCreditGrants(srv))
}

func _mcp_CreditService_DescribeBalance(srv CreditServiceClient) func(ctx context.Context, raw []byte) (any, error) {
	return func(ctx context.Context, raw []byte) (any, error) {
		in := &DescribeBalanceInput{}
		if err := protojson.Unmarshal(raw, in); err != nil {
			return nil, err
		}

		return srv.DescribeBalance(ctx, in)
	}
}
func _mcp_CreditService_GrantCredit(srv CreditServiceClient) func(ctx context.Context, raw []byte) (any, error) {
	return func(ctx context.Context, raw []byte) (any, error) {
		in := &GrantCreditInput{}
		if err := protojson.Unmarshal(raw, in); err != nil {
			return nil, err
		}

		return srv.GrantCredit(ctx, in)
	}
}
func _mcp_CreditService_CancelCredit(srv CreditServiceClient) func(ctx context.Context, raw []byte) (any, error) {
	return func(ctx context.Context, raw []byte) (any, error) {
		in := &CancelCreditInput{}
		if err := protojson.Unmarshal(raw, in); err != nil {
			return nil, err
		}

		return srv.CancelCredit(ctx, in)
	}
}
func _mcp_CreditService_ListCreditGrants(srv CreditServiceClient) func(ctx context.Context, raw []byte) (any, error) {
	return func(ctx context.Context, raw []byte) (any, error) {
		in := &ListCreditGrantsInput{}
		if err := protojson.Unmarshal(raw, in); err != nil {
			return nil, err
		}

		return srv.ListCreditGrants(ctx, in)
	}
}
