// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: eolymp/drive/drive.proto

package drive

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DescribeFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *DescribeFileInput) Reset() {
	*x = DescribeFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFileInput) ProtoMessage() {}

func (x *DescribeFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFileInput.ProtoReflect.Descriptor instead.
func (*DescribeFileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{0}
}

func (x *DescribeFileInput) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type DescribeFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *DescribeFileOutput) Reset() {
	*x = DescribeFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFileOutput) ProtoMessage() {}

func (x *DescribeFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFileOutput.ProtoReflect.Descriptor instead.
func (*DescribeFileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeFileOutput) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type ListFilesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListFilesInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListFilesInput) Reset() {
	*x = ListFilesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesInput) ProtoMessage() {}

func (x *ListFilesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesInput.ProtoReflect.Descriptor instead.
func (*ListFilesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{2}
}

func (x *ListFilesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListFilesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListFilesInput) GetFilters() *ListFilesInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListFilesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*File `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFilesOutput) Reset() {
	*x = ListFilesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesOutput) ProtoMessage() {}

func (x *ListFilesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesOutput.ProtoReflect.Descriptor instead.
func (*ListFilesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{3}
}

func (x *ListFilesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFilesOutput) GetItems() []*File {
	if x != nil {
		return x.Items
	}
	return nil
}

type UploadFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path           string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // file virtual path in the drive
	Type           string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // mime type for file
	Acl            File_Acl          `protobuf:"varint,3,opt,name=acl,proto3,enum=eolymp.drive.File_Acl" json:"acl,omitempty"`
	ChecksumSha256 string            `protobuf:"bytes,4,opt,name=checksum_sha256,json=checksumSha256,proto3" json:"checksum_sha256,omitempty"`                                                            // optionally, checksum to verify file after upload
	Attributes     map[string]string `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // additional key-value attributes for the file
	Data           []byte            `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`                                                                                                    // file content
}

func (x *UploadFileInput) Reset() {
	*x = UploadFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInput) ProtoMessage() {}

func (x *UploadFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInput.ProtoReflect.Descriptor instead.
func (*UploadFileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{4}
}

func (x *UploadFileInput) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UploadFileInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadFileInput) GetAcl() File_Acl {
	if x != nil {
		return x.Acl
	}
	return File_NONE
}

func (x *UploadFileInput) GetChecksumSha256() string {
	if x != nil {
		return x.ChecksumSha256
	}
	return ""
}

func (x *UploadFileInput) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *UploadFileInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId             string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileUrl            string `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	FileChecksumSha256 string `protobuf:"bytes,3,opt,name=file_checksum_sha256,json=fileChecksumSha256,proto3" json:"file_checksum_sha256,omitempty"`
}

func (x *UploadFileOutput) Reset() {
	*x = UploadFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileOutput) ProtoMessage() {}

func (x *UploadFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileOutput.ProtoReflect.Descriptor instead.
func (*UploadFileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileOutput) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadFileOutput) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *UploadFileOutput) GetFileChecksumSha256() string {
	if x != nil {
		return x.FileChecksumSha256
	}
	return ""
}

type UpdateFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	File   *File  `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *UpdateFileInput) Reset() {
	*x = UpdateFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileInput) ProtoMessage() {}

func (x *UpdateFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileInput.ProtoReflect.Descriptor instead.
func (*UpdateFileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateFileInput) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UpdateFileInput) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type UpdateFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFileOutput) Reset() {
	*x = UpdateFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileOutput) ProtoMessage() {}

func (x *UpdateFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileOutput.ProtoReflect.Descriptor instead.
func (*UpdateFileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{7}
}

type DeleteFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *DeleteFileInput) Reset() {
	*x = DeleteFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileInput) ProtoMessage() {}

func (x *DeleteFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileInput.ProtoReflect.Descriptor instead.
func (*DeleteFileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFileInput) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type DeleteFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFileOutput) Reset() {
	*x = DeleteFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileOutput) ProtoMessage() {}

func (x *DeleteFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileOutput.ProtoReflect.Descriptor instead.
func (*DeleteFileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{9}
}

type StartMultipartUploadInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type       string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Acl        File_Acl          `protobuf:"varint,3,opt,name=acl,proto3,enum=eolymp.drive.File_Acl" json:"acl,omitempty"`
	Attributes map[string]string `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StartMultipartUploadInput) Reset() {
	*x = StartMultipartUploadInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMultipartUploadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMultipartUploadInput) ProtoMessage() {}

func (x *StartMultipartUploadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMultipartUploadInput.ProtoReflect.Descriptor instead.
func (*StartMultipartUploadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{10}
}

func (x *StartMultipartUploadInput) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StartMultipartUploadInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StartMultipartUploadInput) GetAcl() File_Acl {
	if x != nil {
		return x.Acl
	}
	return File_NONE
}

func (x *StartMultipartUploadInput) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type StartMultipartUploadOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *StartMultipartUploadOutput) Reset() {
	*x = StartMultipartUploadOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMultipartUploadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMultipartUploadOutput) ProtoMessage() {}

func (x *StartMultipartUploadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMultipartUploadOutput.ProtoReflect.Descriptor instead.
func (*StartMultipartUploadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{11}
}

func (x *StartMultipartUploadOutput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type UploadPartInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId   string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	PartNumber uint32 `protobuf:"varint,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Data       []byte `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadPartInput) Reset() {
	*x = UploadPartInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPartInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartInput) ProtoMessage() {}

func (x *UploadPartInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartInput.ProtoReflect.Descriptor instead.
func (*UploadPartInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{12}
}

func (x *UploadPartInput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadPartInput) GetPartNumber() uint32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadPartOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etag string `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *UploadPartOutput) Reset() {
	*x = UploadPartOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartOutput) ProtoMessage() {}

func (x *UploadPartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartOutput.ProtoReflect.Descriptor instead.
func (*UploadPartOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{13}
}

func (x *UploadPartOutput) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CompleteMultipartUploadInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string                               `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Parts    []*CompleteMultipartUploadInput_Part `protobuf:"bytes,10,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *CompleteMultipartUploadInput) Reset() {
	*x = CompleteMultipartUploadInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultipartUploadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadInput) ProtoMessage() {}

func (x *CompleteMultipartUploadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadInput.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{14}
}

func (x *CompleteMultipartUploadInput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteMultipartUploadInput) GetParts() []*CompleteMultipartUploadInput_Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CompleteMultipartUploadOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId             string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileUrl            string `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	FileChecksumSha256 string `protobuf:"bytes,3,opt,name=file_checksum_sha256,json=fileChecksumSha256,proto3" json:"file_checksum_sha256,omitempty"`
}

func (x *CompleteMultipartUploadOutput) Reset() {
	*x = CompleteMultipartUploadOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultipartUploadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadOutput) ProtoMessage() {}

func (x *CompleteMultipartUploadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadOutput.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{15}
}

func (x *CompleteMultipartUploadOutput) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *CompleteMultipartUploadOutput) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *CompleteMultipartUploadOutput) GetFileChecksumSha256() string {
	if x != nil {
		return x.FileChecksumSha256
	}
	return ""
}

type ListFilesInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	Path           []*wellknown.ExpressionString    `protobuf:"bytes,3,rep,name=path,proto3" json:"path,omitempty"`
	Etag           []*wellknown.ExpressionEnum      `protobuf:"bytes,4,rep,name=etag,proto3" json:"etag,omitempty"`
	ChecksumSha256 []*wellknown.ExpressionEnum      `protobuf:"bytes,9,rep,name=checksum_sha256,json=checksumSha256,proto3" json:"checksum_sha256,omitempty"`
	Size           []*wellknown.ExpressionInt       `protobuf:"bytes,5,rep,name=size,proto3" json:"size,omitempty"`
	Type           []*wellknown.ExpressionEnum      `protobuf:"bytes,6,rep,name=type,proto3" json:"type,omitempty"`
	CreatedAt      []*wellknown.ExpressionTimestamp `protobuf:"bytes,7,rep,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      []*wellknown.ExpressionTimestamp `protobuf:"bytes,8,rep,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ListFilesInput_Filter) Reset() {
	*x = ListFilesInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesInput_Filter) ProtoMessage() {}

func (x *ListFilesInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesInput_Filter.ProtoReflect.Descriptor instead.
func (*ListFilesInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListFilesInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListFilesInput_Filter) GetPath() []*wellknown.ExpressionString {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ListFilesInput_Filter) GetEtag() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Etag
	}
	return nil
}

func (x *ListFilesInput_Filter) GetChecksumSha256() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.ChecksumSha256
	}
	return nil
}

func (x *ListFilesInput_Filter) GetSize() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *ListFilesInput_Filter) GetType() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListFilesInput_Filter) GetCreatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListFilesInput_Filter) GetUpdatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CompleteMultipartUploadInput_Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number         uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Etag           string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	ChecksumSha256 string `protobuf:"bytes,10,opt,name=checksum_sha256,json=checksumSha256,proto3" json:"checksum_sha256,omitempty"`
}

func (x *CompleteMultipartUploadInput_Part) Reset() {
	*x = CompleteMultipartUploadInput_Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_drive_drive_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultipartUploadInput_Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadInput_Part) ProtoMessage() {}

func (x *CompleteMultipartUploadInput_Part) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_drive_drive_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadInput_Part.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadInput_Part) Descriptor() ([]byte, []int) {
	return file_eolymp_drive_drive_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CompleteMultipartUploadInput_Part) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CompleteMultipartUploadInput_Part) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumSha256() string {
	if x != nil {
		return x.ChecksumSha256
	}
	return ""
}

var File_eolymp_drive_drive_proto protoreflect.FileDescriptor

var file_eolymp_drive_drive_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0xe6, 0x04, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x1a, 0xe8, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x49, 0x0a, 0x0f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x53,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x74, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x44, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x51, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xae, 0x02, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x61,
	0x63, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x6c,
	0x52, 0x03, 0x61, 0x63, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x4d,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x78, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0x52, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x2a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x12,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x03, 0x61,
	0x63, 0x6c, 0x12, 0x57, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x1a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x22, 0xdf, 0x01, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x1a, 0x5b, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x53, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x32, 0xb1, 0x09, 0x0a,
	0x05, 0x44, 0x72, 0x69, 0x76, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x35, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x14, 0x8a, 0xe3, 0x0a, 0x10, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x3a, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x08, 0x22, 0x06, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x0c,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x3f, 0xea, 0xe2, 0x0a, 0x0c, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0xf4,
	0x03, 0x82, 0xe3, 0x0a, 0x13, 0x8a, 0xe3, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a, 0x66,
	0x69, 0x6c, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x7e, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x34, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x13, 0x8a,
	0xe3, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x72, 0x65,
	0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x8c, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3f,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82,
	0xe3, 0x0a, 0x14, 0x8a, 0xe3, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a, 0x66, 0x69, 0x6c,
	0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x1a, 0x10, 0x2f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x8c, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3f, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3,
	0x0a, 0x14, 0x8a, 0xe3, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a, 0x66, 0x69, 0x6c, 0x65,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x2a, 0x10, 0x2f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa2,
	0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x37, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x14, 0x8a,
	0xe3, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x08, 0x2f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x43, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2,
	0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x14, 0x8a, 0xe3, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a,
	0x66, 0x69, 0x6c, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x22, 0x14, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb7, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2b,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x43, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x14,
	0x8a, 0xe3, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3a, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x14, 0x2f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x7d,
	0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_drive_drive_proto_rawDescOnce sync.Once
	file_eolymp_drive_drive_proto_rawDescData = file_eolymp_drive_drive_proto_rawDesc
)

func file_eolymp_drive_drive_proto_rawDescGZIP() []byte {
	file_eolymp_drive_drive_proto_rawDescOnce.Do(func() {
		file_eolymp_drive_drive_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_drive_drive_proto_rawDescData)
	})
	return file_eolymp_drive_drive_proto_rawDescData
}

var file_eolymp_drive_drive_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_eolymp_drive_drive_proto_goTypes = []interface{}{
	(*DescribeFileInput)(nil),                 // 0: eolymp.drive.DescribeFileInput
	(*DescribeFileOutput)(nil),                // 1: eolymp.drive.DescribeFileOutput
	(*ListFilesInput)(nil),                    // 2: eolymp.drive.ListFilesInput
	(*ListFilesOutput)(nil),                   // 3: eolymp.drive.ListFilesOutput
	(*UploadFileInput)(nil),                   // 4: eolymp.drive.UploadFileInput
	(*UploadFileOutput)(nil),                  // 5: eolymp.drive.UploadFileOutput
	(*UpdateFileInput)(nil),                   // 6: eolymp.drive.UpdateFileInput
	(*UpdateFileOutput)(nil),                  // 7: eolymp.drive.UpdateFileOutput
	(*DeleteFileInput)(nil),                   // 8: eolymp.drive.DeleteFileInput
	(*DeleteFileOutput)(nil),                  // 9: eolymp.drive.DeleteFileOutput
	(*StartMultipartUploadInput)(nil),         // 10: eolymp.drive.StartMultipartUploadInput
	(*StartMultipartUploadOutput)(nil),        // 11: eolymp.drive.StartMultipartUploadOutput
	(*UploadPartInput)(nil),                   // 12: eolymp.drive.UploadPartInput
	(*UploadPartOutput)(nil),                  // 13: eolymp.drive.UploadPartOutput
	(*CompleteMultipartUploadInput)(nil),      // 14: eolymp.drive.CompleteMultipartUploadInput
	(*CompleteMultipartUploadOutput)(nil),     // 15: eolymp.drive.CompleteMultipartUploadOutput
	(*ListFilesInput_Filter)(nil),             // 16: eolymp.drive.ListFilesInput.Filter
	nil,                                       // 17: eolymp.drive.UploadFileInput.AttributesEntry
	nil,                                       // 18: eolymp.drive.StartMultipartUploadInput.AttributesEntry
	(*CompleteMultipartUploadInput_Part)(nil), // 19: eolymp.drive.CompleteMultipartUploadInput.Part
	(*File)(nil),                              // 20: eolymp.drive.File
	(File_Acl)(0),                             // 21: eolymp.drive.File.Acl
	(*wellknown.ExpressionID)(nil),            // 22: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil),        // 23: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionEnum)(nil),          // 24: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionInt)(nil),           // 25: eolymp.wellknown.ExpressionInt
	(*wellknown.ExpressionTimestamp)(nil),     // 26: eolymp.wellknown.ExpressionTimestamp
}
var file_eolymp_drive_drive_proto_depIdxs = []int32{
	20, // 0: eolymp.drive.DescribeFileOutput.file:type_name -> eolymp.drive.File
	16, // 1: eolymp.drive.ListFilesInput.filters:type_name -> eolymp.drive.ListFilesInput.Filter
	20, // 2: eolymp.drive.ListFilesOutput.items:type_name -> eolymp.drive.File
	21, // 3: eolymp.drive.UploadFileInput.acl:type_name -> eolymp.drive.File.Acl
	17, // 4: eolymp.drive.UploadFileInput.attributes:type_name -> eolymp.drive.UploadFileInput.AttributesEntry
	20, // 5: eolymp.drive.UpdateFileInput.file:type_name -> eolymp.drive.File
	21, // 6: eolymp.drive.StartMultipartUploadInput.acl:type_name -> eolymp.drive.File.Acl
	18, // 7: eolymp.drive.StartMultipartUploadInput.attributes:type_name -> eolymp.drive.StartMultipartUploadInput.AttributesEntry
	19, // 8: eolymp.drive.CompleteMultipartUploadInput.parts:type_name -> eolymp.drive.CompleteMultipartUploadInput.Part
	22, // 9: eolymp.drive.ListFilesInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	23, // 10: eolymp.drive.ListFilesInput.Filter.path:type_name -> eolymp.wellknown.ExpressionString
	24, // 11: eolymp.drive.ListFilesInput.Filter.etag:type_name -> eolymp.wellknown.ExpressionEnum
	24, // 12: eolymp.drive.ListFilesInput.Filter.checksum_sha256:type_name -> eolymp.wellknown.ExpressionEnum
	25, // 13: eolymp.drive.ListFilesInput.Filter.size:type_name -> eolymp.wellknown.ExpressionInt
	24, // 14: eolymp.drive.ListFilesInput.Filter.type:type_name -> eolymp.wellknown.ExpressionEnum
	26, // 15: eolymp.drive.ListFilesInput.Filter.created_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	26, // 16: eolymp.drive.ListFilesInput.Filter.updated_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	4,  // 17: eolymp.drive.Drive.UploadFile:input_type -> eolymp.drive.UploadFileInput
	0,  // 18: eolymp.drive.Drive.DescribeFile:input_type -> eolymp.drive.DescribeFileInput
	2,  // 19: eolymp.drive.Drive.ListFiles:input_type -> eolymp.drive.ListFilesInput
	6,  // 20: eolymp.drive.Drive.UpdateFile:input_type -> eolymp.drive.UpdateFileInput
	8,  // 21: eolymp.drive.Drive.DeleteFile:input_type -> eolymp.drive.DeleteFileInput
	10, // 22: eolymp.drive.Drive.StartMultipartUpload:input_type -> eolymp.drive.StartMultipartUploadInput
	12, // 23: eolymp.drive.Drive.UploadPart:input_type -> eolymp.drive.UploadPartInput
	14, // 24: eolymp.drive.Drive.CompleteMultipartUpload:input_type -> eolymp.drive.CompleteMultipartUploadInput
	5,  // 25: eolymp.drive.Drive.UploadFile:output_type -> eolymp.drive.UploadFileOutput
	1,  // 26: eolymp.drive.Drive.DescribeFile:output_type -> eolymp.drive.DescribeFileOutput
	3,  // 27: eolymp.drive.Drive.ListFiles:output_type -> eolymp.drive.ListFilesOutput
	7,  // 28: eolymp.drive.Drive.UpdateFile:output_type -> eolymp.drive.UpdateFileOutput
	9,  // 29: eolymp.drive.Drive.DeleteFile:output_type -> eolymp.drive.DeleteFileOutput
	11, // 30: eolymp.drive.Drive.StartMultipartUpload:output_type -> eolymp.drive.StartMultipartUploadOutput
	13, // 31: eolymp.drive.Drive.UploadPart:output_type -> eolymp.drive.UploadPartOutput
	15, // 32: eolymp.drive.Drive.CompleteMultipartUpload:output_type -> eolymp.drive.CompleteMultipartUploadOutput
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_eolymp_drive_drive_proto_init() }
func file_eolymp_drive_drive_proto_init() {
	if File_eolymp_drive_drive_proto != nil {
		return
	}
	file_eolymp_drive_file_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_drive_drive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMultipartUploadInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMultipartUploadOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPartInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPartOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteMultipartUploadInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteMultipartUploadOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_drive_drive_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteMultipartUploadInput_Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_drive_drive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_drive_drive_proto_goTypes,
		DependencyIndexes: file_eolymp_drive_drive_proto_depIdxs,
		MessageInfos:      file_eolymp_drive_drive_proto_msgTypes,
	}.Build()
	File_eolymp_drive_drive_proto = out.File
	file_eolymp_drive_drive_proto_rawDesc = nil
	file_eolymp_drive_drive_proto_goTypes = nil
	file_eolymp_drive_drive_proto_depIdxs = nil
}
