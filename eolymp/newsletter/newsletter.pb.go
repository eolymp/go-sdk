// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v4.24.4
// source: eolymp/newsletter/newsletter.proto

package newsletter

import (
	ecm "github.com/eolymp/go-sdk/eolymp/ecm"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Newsletter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Subject       string                 `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	Content       *ecm.Content           `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Newsletter) Reset() {
	*x = Newsletter{}
	mi := &file_eolymp_newsletter_newsletter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Newsletter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Newsletter) ProtoMessage() {}

func (x *Newsletter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_newsletter_newsletter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Newsletter.ProtoReflect.Descriptor instead.
func (*Newsletter) Descriptor() ([]byte, []int) {
	return file_eolymp_newsletter_newsletter_proto_rawDescGZIP(), []int{0}
}

func (x *Newsletter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Newsletter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Newsletter) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Newsletter) GetContent() *ecm.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

type Newsletter_Translation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale        string                 `protobuf:"bytes,102,opt,name=locale,proto3" json:"locale,omitempty"`
	Subject       string                 `protobuf:"bytes,103,opt,name=subject,proto3" json:"subject,omitempty"`
	Content       *ecm.Content           `protobuf:"bytes,104,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Newsletter_Translation) Reset() {
	*x = Newsletter_Translation{}
	mi := &file_eolymp_newsletter_newsletter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Newsletter_Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Newsletter_Translation) ProtoMessage() {}

func (x *Newsletter_Translation) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_newsletter_newsletter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Newsletter_Translation.ProtoReflect.Descriptor instead.
func (*Newsletter_Translation) Descriptor() ([]byte, []int) {
	return file_eolymp_newsletter_newsletter_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Newsletter_Translation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Newsletter_Translation) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Newsletter_Translation) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Newsletter_Translation) GetContent() *ecm.Content {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_eolymp_newsletter_newsletter_proto protoreflect.FileDescriptor

var file_eolymp_newsletter_newsletter_proto_rawDesc = []byte{
	0x0a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6e, 0x65, 0x77,
	0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x1a, 0x18, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x65, 0x63, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x65, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x7e, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x65, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x3b, 0x6e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_newsletter_newsletter_proto_rawDescOnce sync.Once
	file_eolymp_newsletter_newsletter_proto_rawDescData = file_eolymp_newsletter_newsletter_proto_rawDesc
)

func file_eolymp_newsletter_newsletter_proto_rawDescGZIP() []byte {
	file_eolymp_newsletter_newsletter_proto_rawDescOnce.Do(func() {
		file_eolymp_newsletter_newsletter_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_newsletter_newsletter_proto_rawDescData)
	})
	return file_eolymp_newsletter_newsletter_proto_rawDescData
}

var file_eolymp_newsletter_newsletter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eolymp_newsletter_newsletter_proto_goTypes = []any{
	(*Newsletter)(nil),             // 0: eolymp.newsletter.Newsletter
	(*Newsletter_Translation)(nil), // 1: eolymp.newsletter.Newsletter.Translation
	(*timestamppb.Timestamp)(nil),  // 2: google.protobuf.Timestamp
	(*ecm.Content)(nil),            // 3: eolymp.ecm.Content
}
var file_eolymp_newsletter_newsletter_proto_depIdxs = []int32{
	2, // 0: eolymp.newsletter.Newsletter.created_at:type_name -> google.protobuf.Timestamp
	3, // 1: eolymp.newsletter.Newsletter.content:type_name -> eolymp.ecm.Content
	3, // 2: eolymp.newsletter.Newsletter.Translation.content:type_name -> eolymp.ecm.Content
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_eolymp_newsletter_newsletter_proto_init() }
func file_eolymp_newsletter_newsletter_proto_init() {
	if File_eolymp_newsletter_newsletter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_newsletter_newsletter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_newsletter_newsletter_proto_goTypes,
		DependencyIndexes: file_eolymp_newsletter_newsletter_proto_depIdxs,
		MessageInfos:      file_eolymp_newsletter_newsletter_proto_msgTypes,
	}.Build()
	File_eolymp_newsletter_newsletter_proto = out.File
	file_eolymp_newsletter_newsletter_proto_rawDesc = nil
	file_eolymp_newsletter_newsletter_proto_goTypes = nil
	file_eolymp_newsletter_newsletter_proto_depIdxs = nil
}
