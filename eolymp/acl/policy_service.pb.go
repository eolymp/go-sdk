// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: eolymp/acl/policy_service.proto

package acl

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePolicyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *CreatePolicyInput) Reset() {
	*x = CreatePolicyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePolicyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyInput) ProtoMessage() {}

func (x *CreatePolicyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyInput.ProtoReflect.Descriptor instead.
func (*CreatePolicyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePolicyInput) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type CreatePolicyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *CreatePolicyOutput) Reset() {
	*x = CreatePolicyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePolicyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyOutput) ProtoMessage() {}

func (x *CreatePolicyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyOutput.ProtoReflect.Descriptor instead.
func (*CreatePolicyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePolicyOutput) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type UpdatePolicyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string  `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Policy   *Policy `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *UpdatePolicyInput) Reset() {
	*x = UpdatePolicyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePolicyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyInput) ProtoMessage() {}

func (x *UpdatePolicyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyInput.ProtoReflect.Descriptor instead.
func (*UpdatePolicyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePolicyInput) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *UpdatePolicyInput) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UpdatePolicyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePolicyOutput) Reset() {
	*x = UpdatePolicyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePolicyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyOutput) ProtoMessage() {}

func (x *UpdatePolicyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyOutput.ProtoReflect.Descriptor instead.
func (*UpdatePolicyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{3}
}

type DeletePolicyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *DeletePolicyInput) Reset() {
	*x = DeletePolicyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePolicyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyInput) ProtoMessage() {}

func (x *DeletePolicyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyInput.ProtoReflect.Descriptor instead.
func (*DeletePolicyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePolicyInput) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type DeletePolicyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePolicyOutput) Reset() {
	*x = DeletePolicyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePolicyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyOutput) ProtoMessage() {}

func (x *DeletePolicyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyOutput.ProtoReflect.Descriptor instead.
func (*DeletePolicyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{5}
}

type DescribePolicyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *DescribePolicyInput) Reset() {
	*x = DescribePolicyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePolicyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePolicyInput) ProtoMessage() {}

func (x *DescribePolicyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePolicyInput.ProtoReflect.Descriptor instead.
func (*DescribePolicyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribePolicyInput) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type DescribePolicyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *DescribePolicyOutput) Reset() {
	*x = DescribePolicyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePolicyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePolicyOutput) ProtoMessage() {}

func (x *DescribePolicyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePolicyOutput.ProtoReflect.Descriptor instead.
func (*DescribePolicyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribePolicyOutput) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListPoliciesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  int32                     `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size    int32                     `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Filters *ListPoliciesInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListPoliciesInput) Reset() {
	*x = ListPoliciesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesInput) ProtoMessage() {}

func (x *ListPoliciesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesInput.ProtoReflect.Descriptor instead.
func (*ListPoliciesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListPoliciesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPoliciesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListPoliciesInput) GetFilters() *ListPoliciesInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListPoliciesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Policy `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPoliciesOutput) Reset() {
	*x = ListPoliciesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesOutput) ProtoMessage() {}

func (x *ListPoliciesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesOutput.ProtoReflect.Descriptor instead.
func (*ListPoliciesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListPoliciesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPoliciesOutput) GetItems() []*Policy {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListPoliciesInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    string                        `protobuf:"bytes,10,opt,name=query,proto3" json:"query,omitempty"`
	Id       []*wellknown.ExpressionID     `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Subject  []*wellknown.ExpressionID     `protobuf:"bytes,2,rep,name=subject,proto3" json:"subject,omitempty"`
	Name     []*wellknown.ExpressionString `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	Resource []*wellknown.ExpressionEnum   `protobuf:"bytes,4,rep,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ListPoliciesInput_Filter) Reset() {
	*x = ListPoliciesInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_acl_policy_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesInput_Filter) ProtoMessage() {}

func (x *ListPoliciesInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_acl_policy_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesInput_Filter.ProtoReflect.Descriptor instead.
func (*ListPoliciesInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_acl_policy_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListPoliciesInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListPoliciesInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListPoliciesInput_Filter) GetSubject() []*wellknown.ExpressionID {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *ListPoliciesInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListPoliciesInput_Filter) GetResource() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Resource
	}
	return nil
}

var File_eolymp_acl_policy_service_proto protoreflect.FileDescriptor

var file_eolymp_acl_policy_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x63, 0x6c, 0x2f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x1a, 0x17, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x63, 0x6c, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x31, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64,
	0x22, 0x5c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x14,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x30, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x32, 0x0a, 0x13,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64,
	0x22, 0x42, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x80, 0x03, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xfe, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xef, 0x04,
	0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x20,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x7b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x2c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x15, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x2f, 0x7b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7b, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2c, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x2c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a,
	0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6f,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x20, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x42,
	0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x63, 0x6c, 0x3b, 0x61, 0x63, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_eolymp_acl_policy_service_proto_rawDescOnce sync.Once
	file_eolymp_acl_policy_service_proto_rawDescData = file_eolymp_acl_policy_service_proto_rawDesc
)

func file_eolymp_acl_policy_service_proto_rawDescGZIP() []byte {
	file_eolymp_acl_policy_service_proto_rawDescOnce.Do(func() {
		file_eolymp_acl_policy_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_acl_policy_service_proto_rawDescData)
	})
	return file_eolymp_acl_policy_service_proto_rawDescData
}

var file_eolymp_acl_policy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_eolymp_acl_policy_service_proto_goTypes = []any{
	(*CreatePolicyInput)(nil),          // 0: eolymp.acl.CreatePolicyInput
	(*CreatePolicyOutput)(nil),         // 1: eolymp.acl.CreatePolicyOutput
	(*UpdatePolicyInput)(nil),          // 2: eolymp.acl.UpdatePolicyInput
	(*UpdatePolicyOutput)(nil),         // 3: eolymp.acl.UpdatePolicyOutput
	(*DeletePolicyInput)(nil),          // 4: eolymp.acl.DeletePolicyInput
	(*DeletePolicyOutput)(nil),         // 5: eolymp.acl.DeletePolicyOutput
	(*DescribePolicyInput)(nil),        // 6: eolymp.acl.DescribePolicyInput
	(*DescribePolicyOutput)(nil),       // 7: eolymp.acl.DescribePolicyOutput
	(*ListPoliciesInput)(nil),          // 8: eolymp.acl.ListPoliciesInput
	(*ListPoliciesOutput)(nil),         // 9: eolymp.acl.ListPoliciesOutput
	(*ListPoliciesInput_Filter)(nil),   // 10: eolymp.acl.ListPoliciesInput.Filter
	(*Policy)(nil),                     // 11: eolymp.acl.Policy
	(*wellknown.ExpressionID)(nil),     // 12: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil), // 13: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionEnum)(nil),   // 14: eolymp.wellknown.ExpressionEnum
}
var file_eolymp_acl_policy_service_proto_depIdxs = []int32{
	11, // 0: eolymp.acl.CreatePolicyInput.policy:type_name -> eolymp.acl.Policy
	11, // 1: eolymp.acl.UpdatePolicyInput.policy:type_name -> eolymp.acl.Policy
	11, // 2: eolymp.acl.DescribePolicyOutput.policy:type_name -> eolymp.acl.Policy
	10, // 3: eolymp.acl.ListPoliciesInput.filters:type_name -> eolymp.acl.ListPoliciesInput.Filter
	11, // 4: eolymp.acl.ListPoliciesOutput.items:type_name -> eolymp.acl.Policy
	12, // 5: eolymp.acl.ListPoliciesInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	12, // 6: eolymp.acl.ListPoliciesInput.Filter.subject:type_name -> eolymp.wellknown.ExpressionID
	13, // 7: eolymp.acl.ListPoliciesInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	14, // 8: eolymp.acl.ListPoliciesInput.Filter.resource:type_name -> eolymp.wellknown.ExpressionEnum
	0,  // 9: eolymp.acl.PolicyService.CreatePolicy:input_type -> eolymp.acl.CreatePolicyInput
	2,  // 10: eolymp.acl.PolicyService.UpdatePolicy:input_type -> eolymp.acl.UpdatePolicyInput
	4,  // 11: eolymp.acl.PolicyService.DeletePolicy:input_type -> eolymp.acl.DeletePolicyInput
	6,  // 12: eolymp.acl.PolicyService.DescribePolicy:input_type -> eolymp.acl.DescribePolicyInput
	8,  // 13: eolymp.acl.PolicyService.ListPolicies:input_type -> eolymp.acl.ListPoliciesInput
	1,  // 14: eolymp.acl.PolicyService.CreatePolicy:output_type -> eolymp.acl.CreatePolicyOutput
	3,  // 15: eolymp.acl.PolicyService.UpdatePolicy:output_type -> eolymp.acl.UpdatePolicyOutput
	5,  // 16: eolymp.acl.PolicyService.DeletePolicy:output_type -> eolymp.acl.DeletePolicyOutput
	7,  // 17: eolymp.acl.PolicyService.DescribePolicy:output_type -> eolymp.acl.DescribePolicyOutput
	9,  // 18: eolymp.acl.PolicyService.ListPolicies:output_type -> eolymp.acl.ListPoliciesOutput
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_eolymp_acl_policy_service_proto_init() }
func file_eolymp_acl_policy_service_proto_init() {
	if File_eolymp_acl_policy_service_proto != nil {
		return
	}
	file_eolymp_acl_policy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_acl_policy_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePolicyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePolicyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePolicyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePolicyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePolicyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePolicyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DescribePolicyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DescribePolicyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListPoliciesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListPoliciesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_acl_policy_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListPoliciesInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_acl_policy_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_acl_policy_service_proto_goTypes,
		DependencyIndexes: file_eolymp_acl_policy_service_proto_depIdxs,
		MessageInfos:      file_eolymp_acl_policy_service_proto_msgTypes,
	}.Build()
	File_eolymp_acl_policy_service_proto = out.File
	file_eolymp_acl_policy_service_proto_rawDesc = nil
	file_eolymp_acl_policy_service_proto_goTypes = nil
	file_eolymp_acl_policy_service_proto_depIdxs = nil
}
