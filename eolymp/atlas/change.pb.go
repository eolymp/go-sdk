// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: eolymp/atlas/change.proto

package atlas

import (
	executor "github.com/eolymp/go-sdk/eolymp/executor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IpAddress string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserId    string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProblemId string                 `protobuf:"bytes,5,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	// Types that are assignable to Payload:
	//	*Change_CreateProblem_
	//	*Change_UpdateProblem_
	//	*Change_UpdateVerifier_
	//	*Change_UpdateInteractor_
	//	*Change_DeleteProblem_
	//	*Change_CreateStatement_
	//	*Change_UpdateStatement_
	//	*Change_DeleteStatement_
	//	*Change_CreateTestset_
	//	*Change_UpdateTestset_
	//	*Change_DeleteTestset_
	//	*Change_CreateTest_
	//	*Change_UpdateTest_
	//	*Change_DeleteTest_
	//	*Change_CreateTemplate_
	//	*Change_UpdateTemplate_
	//	*Change_DeleteTemplate_
	//	*Change_CreateAttachment_
	//	*Change_UpdateAttachment_
	//	*Change_DeleteAttachment_
	//	*Change_GrantPermission_
	//	*Change_RevokePermission_
	Payload isChange_Payload `protobuf_oneof:"payload"`
}

func (x *Change) Reset() {
	*x = Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0}
}

func (x *Change) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Change) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Change) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Change) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Change) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (m *Change) GetPayload() isChange_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Change) GetCreateProblem() *Change_CreateProblem {
	if x, ok := x.GetPayload().(*Change_CreateProblem_); ok {
		return x.CreateProblem
	}
	return nil
}

func (x *Change) GetUpdateProblem() *Change_UpdateProblem {
	if x, ok := x.GetPayload().(*Change_UpdateProblem_); ok {
		return x.UpdateProblem
	}
	return nil
}

func (x *Change) GetUpdateVerifier() *Change_UpdateVerifier {
	if x, ok := x.GetPayload().(*Change_UpdateVerifier_); ok {
		return x.UpdateVerifier
	}
	return nil
}

func (x *Change) GetUpdateInteractor() *Change_UpdateInteractor {
	if x, ok := x.GetPayload().(*Change_UpdateInteractor_); ok {
		return x.UpdateInteractor
	}
	return nil
}

func (x *Change) GetDeleteProblem() *Change_DeleteProblem {
	if x, ok := x.GetPayload().(*Change_DeleteProblem_); ok {
		return x.DeleteProblem
	}
	return nil
}

func (x *Change) GetCreateStatement() *Change_CreateStatement {
	if x, ok := x.GetPayload().(*Change_CreateStatement_); ok {
		return x.CreateStatement
	}
	return nil
}

func (x *Change) GetUpdateStatement() *Change_UpdateStatement {
	if x, ok := x.GetPayload().(*Change_UpdateStatement_); ok {
		return x.UpdateStatement
	}
	return nil
}

func (x *Change) GetDeleteStatement() *Change_DeleteStatement {
	if x, ok := x.GetPayload().(*Change_DeleteStatement_); ok {
		return x.DeleteStatement
	}
	return nil
}

func (x *Change) GetCreateTestset() *Change_CreateTestset {
	if x, ok := x.GetPayload().(*Change_CreateTestset_); ok {
		return x.CreateTestset
	}
	return nil
}

func (x *Change) GetUpdateTestset() *Change_UpdateTestset {
	if x, ok := x.GetPayload().(*Change_UpdateTestset_); ok {
		return x.UpdateTestset
	}
	return nil
}

func (x *Change) GetDeleteTestset() *Change_DeleteTestset {
	if x, ok := x.GetPayload().(*Change_DeleteTestset_); ok {
		return x.DeleteTestset
	}
	return nil
}

func (x *Change) GetCreateTest() *Change_CreateTest {
	if x, ok := x.GetPayload().(*Change_CreateTest_); ok {
		return x.CreateTest
	}
	return nil
}

func (x *Change) GetUpdateTest() *Change_UpdateTest {
	if x, ok := x.GetPayload().(*Change_UpdateTest_); ok {
		return x.UpdateTest
	}
	return nil
}

func (x *Change) GetDeleteTest() *Change_DeleteTest {
	if x, ok := x.GetPayload().(*Change_DeleteTest_); ok {
		return x.DeleteTest
	}
	return nil
}

func (x *Change) GetCreateTemplate() *Change_CreateTemplate {
	if x, ok := x.GetPayload().(*Change_CreateTemplate_); ok {
		return x.CreateTemplate
	}
	return nil
}

func (x *Change) GetUpdateTemplate() *Change_UpdateTemplate {
	if x, ok := x.GetPayload().(*Change_UpdateTemplate_); ok {
		return x.UpdateTemplate
	}
	return nil
}

func (x *Change) GetDeleteTemplate() *Change_DeleteTemplate {
	if x, ok := x.GetPayload().(*Change_DeleteTemplate_); ok {
		return x.DeleteTemplate
	}
	return nil
}

func (x *Change) GetCreateAttachment() *Change_CreateAttachment {
	if x, ok := x.GetPayload().(*Change_CreateAttachment_); ok {
		return x.CreateAttachment
	}
	return nil
}

func (x *Change) GetUpdateAttachment() *Change_UpdateAttachment {
	if x, ok := x.GetPayload().(*Change_UpdateAttachment_); ok {
		return x.UpdateAttachment
	}
	return nil
}

func (x *Change) GetDeleteAttachment() *Change_DeleteAttachment {
	if x, ok := x.GetPayload().(*Change_DeleteAttachment_); ok {
		return x.DeleteAttachment
	}
	return nil
}

func (x *Change) GetGrantPermission() *Change_GrantPermission {
	if x, ok := x.GetPayload().(*Change_GrantPermission_); ok {
		return x.GrantPermission
	}
	return nil
}

func (x *Change) GetRevokePermission() *Change_RevokePermission {
	if x, ok := x.GetPayload().(*Change_RevokePermission_); ok {
		return x.RevokePermission
	}
	return nil
}

type isChange_Payload interface {
	isChange_Payload()
}

type Change_CreateProblem_ struct {
	CreateProblem *Change_CreateProblem `protobuf:"bytes,100,opt,name=create_problem,json=createProblem,proto3,oneof"`
}

type Change_UpdateProblem_ struct {
	UpdateProblem *Change_UpdateProblem `protobuf:"bytes,101,opt,name=update_problem,json=updateProblem,proto3,oneof"`
}

type Change_UpdateVerifier_ struct {
	UpdateVerifier *Change_UpdateVerifier `protobuf:"bytes,102,opt,name=update_verifier,json=updateVerifier,proto3,oneof"`
}

type Change_UpdateInteractor_ struct {
	UpdateInteractor *Change_UpdateInteractor `protobuf:"bytes,104,opt,name=update_interactor,json=updateInteractor,proto3,oneof"`
}

type Change_DeleteProblem_ struct {
	DeleteProblem *Change_DeleteProblem `protobuf:"bytes,105,opt,name=delete_problem,json=deleteProblem,proto3,oneof"`
}

type Change_CreateStatement_ struct {
	CreateStatement *Change_CreateStatement `protobuf:"bytes,110,opt,name=create_statement,json=createStatement,proto3,oneof"`
}

type Change_UpdateStatement_ struct {
	UpdateStatement *Change_UpdateStatement `protobuf:"bytes,111,opt,name=update_statement,json=updateStatement,proto3,oneof"`
}

type Change_DeleteStatement_ struct {
	DeleteStatement *Change_DeleteStatement `protobuf:"bytes,112,opt,name=delete_statement,json=deleteStatement,proto3,oneof"`
}

type Change_CreateTestset_ struct {
	CreateTestset *Change_CreateTestset `protobuf:"bytes,120,opt,name=create_testset,json=createTestset,proto3,oneof"`
}

type Change_UpdateTestset_ struct {
	UpdateTestset *Change_UpdateTestset `protobuf:"bytes,121,opt,name=update_testset,json=updateTestset,proto3,oneof"`
}

type Change_DeleteTestset_ struct {
	DeleteTestset *Change_DeleteTestset `protobuf:"bytes,122,opt,name=delete_testset,json=deleteTestset,proto3,oneof"`
}

type Change_CreateTest_ struct {
	CreateTest *Change_CreateTest `protobuf:"bytes,130,opt,name=create_test,json=createTest,proto3,oneof"`
}

type Change_UpdateTest_ struct {
	UpdateTest *Change_UpdateTest `protobuf:"bytes,131,opt,name=update_test,json=updateTest,proto3,oneof"`
}

type Change_DeleteTest_ struct {
	DeleteTest *Change_DeleteTest `protobuf:"bytes,132,opt,name=delete_test,json=deleteTest,proto3,oneof"`
}

type Change_CreateTemplate_ struct {
	CreateTemplate *Change_CreateTemplate `protobuf:"bytes,140,opt,name=create_template,json=createTemplate,proto3,oneof"`
}

type Change_UpdateTemplate_ struct {
	UpdateTemplate *Change_UpdateTemplate `protobuf:"bytes,141,opt,name=update_template,json=updateTemplate,proto3,oneof"`
}

type Change_DeleteTemplate_ struct {
	DeleteTemplate *Change_DeleteTemplate `protobuf:"bytes,142,opt,name=delete_template,json=deleteTemplate,proto3,oneof"`
}

type Change_CreateAttachment_ struct {
	CreateAttachment *Change_CreateAttachment `protobuf:"bytes,160,opt,name=create_attachment,json=createAttachment,proto3,oneof"`
}

type Change_UpdateAttachment_ struct {
	UpdateAttachment *Change_UpdateAttachment `protobuf:"bytes,161,opt,name=update_attachment,json=updateAttachment,proto3,oneof"`
}

type Change_DeleteAttachment_ struct {
	DeleteAttachment *Change_DeleteAttachment `protobuf:"bytes,162,opt,name=delete_attachment,json=deleteAttachment,proto3,oneof"`
}

type Change_GrantPermission_ struct {
	GrantPermission *Change_GrantPermission `protobuf:"bytes,150,opt,name=grant_permission,json=grantPermission,proto3,oneof"`
}

type Change_RevokePermission_ struct {
	RevokePermission *Change_RevokePermission `protobuf:"bytes,151,opt,name=revoke_permission,json=revokePermission,proto3,oneof"`
}

func (*Change_CreateProblem_) isChange_Payload() {}

func (*Change_UpdateProblem_) isChange_Payload() {}

func (*Change_UpdateVerifier_) isChange_Payload() {}

func (*Change_UpdateInteractor_) isChange_Payload() {}

func (*Change_DeleteProblem_) isChange_Payload() {}

func (*Change_CreateStatement_) isChange_Payload() {}

func (*Change_UpdateStatement_) isChange_Payload() {}

func (*Change_DeleteStatement_) isChange_Payload() {}

func (*Change_CreateTestset_) isChange_Payload() {}

func (*Change_UpdateTestset_) isChange_Payload() {}

func (*Change_DeleteTestset_) isChange_Payload() {}

func (*Change_CreateTest_) isChange_Payload() {}

func (*Change_UpdateTest_) isChange_Payload() {}

func (*Change_DeleteTest_) isChange_Payload() {}

func (*Change_CreateTemplate_) isChange_Payload() {}

func (*Change_UpdateTemplate_) isChange_Payload() {}

func (*Change_DeleteTemplate_) isChange_Payload() {}

func (*Change_CreateAttachment_) isChange_Payload() {}

func (*Change_UpdateAttachment_) isChange_Payload() {}

func (*Change_DeleteAttachment_) isChange_Payload() {}

func (*Change_GrantPermission_) isChange_Payload() {}

func (*Change_RevokePermission_) isChange_Payload() {}

type Change_CreateProblem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Problem `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_CreateProblem) Reset() {
	*x = Change_CreateProblem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_CreateProblem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_CreateProblem) ProtoMessage() {}

func (x *Change_CreateProblem) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_CreateProblem.ProtoReflect.Descriptor instead.
func (*Change_CreateProblem) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Change_CreateProblem) GetAfter() *Problem {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateProblem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Problem `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Problem `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateProblem) Reset() {
	*x = Change_UpdateProblem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateProblem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateProblem) ProtoMessage() {}

func (x *Change_UpdateProblem) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateProblem.ProtoReflect.Descriptor instead.
func (*Change_UpdateProblem) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Change_UpdateProblem) GetBefore() *Problem {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateProblem) GetAfter() *Problem {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateVerifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *executor.Verifier `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *executor.Verifier `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateVerifier) Reset() {
	*x = Change_UpdateVerifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateVerifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateVerifier) ProtoMessage() {}

func (x *Change_UpdateVerifier) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateVerifier.ProtoReflect.Descriptor instead.
func (*Change_UpdateVerifier) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Change_UpdateVerifier) GetBefore() *executor.Verifier {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateVerifier) GetAfter() *executor.Verifier {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateInteractor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *executor.Interactor `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *executor.Interactor `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateInteractor) Reset() {
	*x = Change_UpdateInteractor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateInteractor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateInteractor) ProtoMessage() {}

func (x *Change_UpdateInteractor) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateInteractor.ProtoReflect.Descriptor instead.
func (*Change_UpdateInteractor) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Change_UpdateInteractor) GetBefore() *executor.Interactor {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateInteractor) GetAfter() *executor.Interactor {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_DeleteProblem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Problem `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_DeleteProblem) Reset() {
	*x = Change_DeleteProblem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_DeleteProblem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_DeleteProblem) ProtoMessage() {}

func (x *Change_DeleteProblem) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_DeleteProblem.ProtoReflect.Descriptor instead.
func (*Change_DeleteProblem) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Change_DeleteProblem) GetBefore() *Problem {
	if x != nil {
		return x.Before
	}
	return nil
}

type Change_CreateStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Statement `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_CreateStatement) Reset() {
	*x = Change_CreateStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_CreateStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_CreateStatement) ProtoMessage() {}

func (x *Change_CreateStatement) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_CreateStatement.ProtoReflect.Descriptor instead.
func (*Change_CreateStatement) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Change_CreateStatement) GetAfter() *Statement {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Statement `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Statement `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateStatement) Reset() {
	*x = Change_UpdateStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateStatement) ProtoMessage() {}

func (x *Change_UpdateStatement) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateStatement.ProtoReflect.Descriptor instead.
func (*Change_UpdateStatement) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Change_UpdateStatement) GetBefore() *Statement {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateStatement) GetAfter() *Statement {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_DeleteStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Statement `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_DeleteStatement) Reset() {
	*x = Change_DeleteStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_DeleteStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_DeleteStatement) ProtoMessage() {}

func (x *Change_DeleteStatement) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_DeleteStatement.ProtoReflect.Descriptor instead.
func (*Change_DeleteStatement) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Change_DeleteStatement) GetBefore() *Statement {
	if x != nil {
		return x.Before
	}
	return nil
}

type Change_CreateTestset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Testset `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_CreateTestset) Reset() {
	*x = Change_CreateTestset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_CreateTestset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_CreateTestset) ProtoMessage() {}

func (x *Change_CreateTestset) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_CreateTestset.ProtoReflect.Descriptor instead.
func (*Change_CreateTestset) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Change_CreateTestset) GetAfter() *Testset {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateTestset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Testset `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Testset `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateTestset) Reset() {
	*x = Change_UpdateTestset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateTestset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateTestset) ProtoMessage() {}

func (x *Change_UpdateTestset) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateTestset.ProtoReflect.Descriptor instead.
func (*Change_UpdateTestset) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Change_UpdateTestset) GetBefore() *Testset {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateTestset) GetAfter() *Testset {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_DeleteTestset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Testset `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_DeleteTestset) Reset() {
	*x = Change_DeleteTestset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_DeleteTestset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_DeleteTestset) ProtoMessage() {}

func (x *Change_DeleteTestset) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_DeleteTestset.ProtoReflect.Descriptor instead.
func (*Change_DeleteTestset) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Change_DeleteTestset) GetBefore() *Testset {
	if x != nil {
		return x.Before
	}
	return nil
}

type Change_CreateTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Test `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_CreateTest) Reset() {
	*x = Change_CreateTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_CreateTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_CreateTest) ProtoMessage() {}

func (x *Change_CreateTest) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_CreateTest.ProtoReflect.Descriptor instead.
func (*Change_CreateTest) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Change_CreateTest) GetAfter() *Test {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Test `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Test `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateTest) Reset() {
	*x = Change_UpdateTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateTest) ProtoMessage() {}

func (x *Change_UpdateTest) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateTest.ProtoReflect.Descriptor instead.
func (*Change_UpdateTest) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Change_UpdateTest) GetBefore() *Test {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateTest) GetAfter() *Test {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_DeleteTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Test `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_DeleteTest) Reset() {
	*x = Change_DeleteTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_DeleteTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_DeleteTest) ProtoMessage() {}

func (x *Change_DeleteTest) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_DeleteTest.ProtoReflect.Descriptor instead.
func (*Change_DeleteTest) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Change_DeleteTest) GetBefore() *Test {
	if x != nil {
		return x.Before
	}
	return nil
}

type Change_CreateTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Template `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_CreateTemplate) Reset() {
	*x = Change_CreateTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_CreateTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_CreateTemplate) ProtoMessage() {}

func (x *Change_CreateTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_CreateTemplate.ProtoReflect.Descriptor instead.
func (*Change_CreateTemplate) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Change_CreateTemplate) GetAfter() *Template {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Template `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Template `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateTemplate) Reset() {
	*x = Change_UpdateTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateTemplate) ProtoMessage() {}

func (x *Change_UpdateTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateTemplate.ProtoReflect.Descriptor instead.
func (*Change_UpdateTemplate) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Change_UpdateTemplate) GetBefore() *Template {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateTemplate) GetAfter() *Template {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_DeleteTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Template `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_DeleteTemplate) Reset() {
	*x = Change_DeleteTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_DeleteTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_DeleteTemplate) ProtoMessage() {}

func (x *Change_DeleteTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_DeleteTemplate.ProtoReflect.Descriptor instead.
func (*Change_DeleteTemplate) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Change_DeleteTemplate) GetBefore() *Template {
	if x != nil {
		return x.Before
	}
	return nil
}

type Change_CreateAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Attachment `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_CreateAttachment) Reset() {
	*x = Change_CreateAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_CreateAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_CreateAttachment) ProtoMessage() {}

func (x *Change_CreateAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_CreateAttachment.ProtoReflect.Descriptor instead.
func (*Change_CreateAttachment) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Change_CreateAttachment) GetAfter() *Attachment {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_UpdateAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Attachment `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Attachment `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_UpdateAttachment) Reset() {
	*x = Change_UpdateAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_UpdateAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_UpdateAttachment) ProtoMessage() {}

func (x *Change_UpdateAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_UpdateAttachment.ProtoReflect.Descriptor instead.
func (*Change_UpdateAttachment) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Change_UpdateAttachment) GetBefore() *Attachment {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *Change_UpdateAttachment) GetAfter() *Attachment {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_DeleteAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Attachment `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_DeleteAttachment) Reset() {
	*x = Change_DeleteAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_DeleteAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_DeleteAttachment) ProtoMessage() {}

func (x *Change_DeleteAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_DeleteAttachment.ProtoReflect.Descriptor instead.
func (*Change_DeleteAttachment) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Change_DeleteAttachment) GetBefore() *Attachment {
	if x != nil {
		return x.Before
	}
	return nil
}

type Change_GrantPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After *Permission `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *Change_GrantPermission) Reset() {
	*x = Change_GrantPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_GrantPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_GrantPermission) ProtoMessage() {}

func (x *Change_GrantPermission) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_GrantPermission.ProtoReflect.Descriptor instead.
func (*Change_GrantPermission) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 20}
}

func (x *Change_GrantPermission) GetAfter() *Permission {
	if x != nil {
		return x.After
	}
	return nil
}

type Change_RevokePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Permission `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *Change_RevokePermission) Reset() {
	*x = Change_RevokePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_change_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change_RevokePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change_RevokePermission) ProtoMessage() {}

func (x *Change_RevokePermission) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_change_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change_RevokePermission.ProtoReflect.Descriptor instead.
func (*Change_RevokePermission) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_change_proto_rawDescGZIP(), []int{0, 21}
}

func (x *Change_RevokePermission) GetBefore() *Permission {
	if x != nil {
		return x.Before
	}
	return nil
}

var File_eolymp_atlas_change_proto protoreflect.FileDescriptor

var file_eolymp_atlas_change_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x1d, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x4b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x4e, 0x0a, 0x0f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x11,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x51, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12,
	0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x82,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x4f, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x4f, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x55, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xa1, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x55, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x11, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x10, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x3c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a,
	0x6b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x2d, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x74, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x1a, 0x7a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x3e,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x2d, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x40,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x1a, 0x71, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x1a, 0x42, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x3c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x6b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x06, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x1a, 0x3e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x1a, 0x36, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x62, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x38,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x3e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x6e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x40, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x42, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x74,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x1a, 0x44, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x41, 0x0a, 0x0f, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x1a, 0x44, 0x0a,
	0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x2d,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3b, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_atlas_change_proto_rawDescOnce sync.Once
	file_eolymp_atlas_change_proto_rawDescData = file_eolymp_atlas_change_proto_rawDesc
)

func file_eolymp_atlas_change_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_change_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_change_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_atlas_change_proto_rawDescData)
	})
	return file_eolymp_atlas_change_proto_rawDescData
}

var file_eolymp_atlas_change_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_eolymp_atlas_change_proto_goTypes = []interface{}{
	(*Change)(nil),                  // 0: eolymp.atlas.Change
	(*Change_CreateProblem)(nil),    // 1: eolymp.atlas.Change.CreateProblem
	(*Change_UpdateProblem)(nil),    // 2: eolymp.atlas.Change.UpdateProblem
	(*Change_UpdateVerifier)(nil),   // 3: eolymp.atlas.Change.UpdateVerifier
	(*Change_UpdateInteractor)(nil), // 4: eolymp.atlas.Change.UpdateInteractor
	(*Change_DeleteProblem)(nil),    // 5: eolymp.atlas.Change.DeleteProblem
	(*Change_CreateStatement)(nil),  // 6: eolymp.atlas.Change.CreateStatement
	(*Change_UpdateStatement)(nil),  // 7: eolymp.atlas.Change.UpdateStatement
	(*Change_DeleteStatement)(nil),  // 8: eolymp.atlas.Change.DeleteStatement
	(*Change_CreateTestset)(nil),    // 9: eolymp.atlas.Change.CreateTestset
	(*Change_UpdateTestset)(nil),    // 10: eolymp.atlas.Change.UpdateTestset
	(*Change_DeleteTestset)(nil),    // 11: eolymp.atlas.Change.DeleteTestset
	(*Change_CreateTest)(nil),       // 12: eolymp.atlas.Change.CreateTest
	(*Change_UpdateTest)(nil),       // 13: eolymp.atlas.Change.UpdateTest
	(*Change_DeleteTest)(nil),       // 14: eolymp.atlas.Change.DeleteTest
	(*Change_CreateTemplate)(nil),   // 15: eolymp.atlas.Change.CreateTemplate
	(*Change_UpdateTemplate)(nil),   // 16: eolymp.atlas.Change.UpdateTemplate
	(*Change_DeleteTemplate)(nil),   // 17: eolymp.atlas.Change.DeleteTemplate
	(*Change_CreateAttachment)(nil), // 18: eolymp.atlas.Change.CreateAttachment
	(*Change_UpdateAttachment)(nil), // 19: eolymp.atlas.Change.UpdateAttachment
	(*Change_DeleteAttachment)(nil), // 20: eolymp.atlas.Change.DeleteAttachment
	(*Change_GrantPermission)(nil),  // 21: eolymp.atlas.Change.GrantPermission
	(*Change_RevokePermission)(nil), // 22: eolymp.atlas.Change.RevokePermission
	(*timestamppb.Timestamp)(nil),   // 23: google.protobuf.Timestamp
	(*Problem)(nil),                 // 24: eolymp.atlas.Problem
	(*executor.Verifier)(nil),       // 25: eolymp.executor.Verifier
	(*executor.Interactor)(nil),     // 26: eolymp.executor.Interactor
	(*Statement)(nil),               // 27: eolymp.atlas.Statement
	(*Testset)(nil),                 // 28: eolymp.atlas.Testset
	(*Test)(nil),                    // 29: eolymp.atlas.Test
	(*Template)(nil),                // 30: eolymp.atlas.Template
	(*Attachment)(nil),              // 31: eolymp.atlas.Attachment
	(*Permission)(nil),              // 32: eolymp.atlas.Permission
}
var file_eolymp_atlas_change_proto_depIdxs = []int32{
	23, // 0: eolymp.atlas.Change.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 1: eolymp.atlas.Change.create_problem:type_name -> eolymp.atlas.Change.CreateProblem
	2,  // 2: eolymp.atlas.Change.update_problem:type_name -> eolymp.atlas.Change.UpdateProblem
	3,  // 3: eolymp.atlas.Change.update_verifier:type_name -> eolymp.atlas.Change.UpdateVerifier
	4,  // 4: eolymp.atlas.Change.update_interactor:type_name -> eolymp.atlas.Change.UpdateInteractor
	5,  // 5: eolymp.atlas.Change.delete_problem:type_name -> eolymp.atlas.Change.DeleteProblem
	6,  // 6: eolymp.atlas.Change.create_statement:type_name -> eolymp.atlas.Change.CreateStatement
	7,  // 7: eolymp.atlas.Change.update_statement:type_name -> eolymp.atlas.Change.UpdateStatement
	8,  // 8: eolymp.atlas.Change.delete_statement:type_name -> eolymp.atlas.Change.DeleteStatement
	9,  // 9: eolymp.atlas.Change.create_testset:type_name -> eolymp.atlas.Change.CreateTestset
	10, // 10: eolymp.atlas.Change.update_testset:type_name -> eolymp.atlas.Change.UpdateTestset
	11, // 11: eolymp.atlas.Change.delete_testset:type_name -> eolymp.atlas.Change.DeleteTestset
	12, // 12: eolymp.atlas.Change.create_test:type_name -> eolymp.atlas.Change.CreateTest
	13, // 13: eolymp.atlas.Change.update_test:type_name -> eolymp.atlas.Change.UpdateTest
	14, // 14: eolymp.atlas.Change.delete_test:type_name -> eolymp.atlas.Change.DeleteTest
	15, // 15: eolymp.atlas.Change.create_template:type_name -> eolymp.atlas.Change.CreateTemplate
	16, // 16: eolymp.atlas.Change.update_template:type_name -> eolymp.atlas.Change.UpdateTemplate
	17, // 17: eolymp.atlas.Change.delete_template:type_name -> eolymp.atlas.Change.DeleteTemplate
	18, // 18: eolymp.atlas.Change.create_attachment:type_name -> eolymp.atlas.Change.CreateAttachment
	19, // 19: eolymp.atlas.Change.update_attachment:type_name -> eolymp.atlas.Change.UpdateAttachment
	20, // 20: eolymp.atlas.Change.delete_attachment:type_name -> eolymp.atlas.Change.DeleteAttachment
	21, // 21: eolymp.atlas.Change.grant_permission:type_name -> eolymp.atlas.Change.GrantPermission
	22, // 22: eolymp.atlas.Change.revoke_permission:type_name -> eolymp.atlas.Change.RevokePermission
	24, // 23: eolymp.atlas.Change.CreateProblem.after:type_name -> eolymp.atlas.Problem
	24, // 24: eolymp.atlas.Change.UpdateProblem.before:type_name -> eolymp.atlas.Problem
	24, // 25: eolymp.atlas.Change.UpdateProblem.after:type_name -> eolymp.atlas.Problem
	25, // 26: eolymp.atlas.Change.UpdateVerifier.before:type_name -> eolymp.executor.Verifier
	25, // 27: eolymp.atlas.Change.UpdateVerifier.after:type_name -> eolymp.executor.Verifier
	26, // 28: eolymp.atlas.Change.UpdateInteractor.before:type_name -> eolymp.executor.Interactor
	26, // 29: eolymp.atlas.Change.UpdateInteractor.after:type_name -> eolymp.executor.Interactor
	24, // 30: eolymp.atlas.Change.DeleteProblem.before:type_name -> eolymp.atlas.Problem
	27, // 31: eolymp.atlas.Change.CreateStatement.after:type_name -> eolymp.atlas.Statement
	27, // 32: eolymp.atlas.Change.UpdateStatement.before:type_name -> eolymp.atlas.Statement
	27, // 33: eolymp.atlas.Change.UpdateStatement.after:type_name -> eolymp.atlas.Statement
	27, // 34: eolymp.atlas.Change.DeleteStatement.before:type_name -> eolymp.atlas.Statement
	28, // 35: eolymp.atlas.Change.CreateTestset.after:type_name -> eolymp.atlas.Testset
	28, // 36: eolymp.atlas.Change.UpdateTestset.before:type_name -> eolymp.atlas.Testset
	28, // 37: eolymp.atlas.Change.UpdateTestset.after:type_name -> eolymp.atlas.Testset
	28, // 38: eolymp.atlas.Change.DeleteTestset.before:type_name -> eolymp.atlas.Testset
	29, // 39: eolymp.atlas.Change.CreateTest.after:type_name -> eolymp.atlas.Test
	29, // 40: eolymp.atlas.Change.UpdateTest.before:type_name -> eolymp.atlas.Test
	29, // 41: eolymp.atlas.Change.UpdateTest.after:type_name -> eolymp.atlas.Test
	29, // 42: eolymp.atlas.Change.DeleteTest.before:type_name -> eolymp.atlas.Test
	30, // 43: eolymp.atlas.Change.CreateTemplate.after:type_name -> eolymp.atlas.Template
	30, // 44: eolymp.atlas.Change.UpdateTemplate.before:type_name -> eolymp.atlas.Template
	30, // 45: eolymp.atlas.Change.UpdateTemplate.after:type_name -> eolymp.atlas.Template
	30, // 46: eolymp.atlas.Change.DeleteTemplate.before:type_name -> eolymp.atlas.Template
	31, // 47: eolymp.atlas.Change.CreateAttachment.after:type_name -> eolymp.atlas.Attachment
	31, // 48: eolymp.atlas.Change.UpdateAttachment.before:type_name -> eolymp.atlas.Attachment
	31, // 49: eolymp.atlas.Change.UpdateAttachment.after:type_name -> eolymp.atlas.Attachment
	31, // 50: eolymp.atlas.Change.DeleteAttachment.before:type_name -> eolymp.atlas.Attachment
	32, // 51: eolymp.atlas.Change.GrantPermission.after:type_name -> eolymp.atlas.Permission
	32, // 52: eolymp.atlas.Change.RevokePermission.before:type_name -> eolymp.atlas.Permission
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_change_proto_init() }
func file_eolymp_atlas_change_proto_init() {
	if File_eolymp_atlas_change_proto != nil {
		return
	}
	file_eolymp_atlas_attachment_proto_init()
	file_eolymp_atlas_permission_proto_init()
	file_eolymp_atlas_problem_proto_init()
	file_eolymp_atlas_statement_proto_init()
	file_eolymp_atlas_template_proto_init()
	file_eolymp_atlas_test_proto_init()
	file_eolymp_atlas_testset_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_atlas_change_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_CreateProblem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateProblem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateVerifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateInteractor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_DeleteProblem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_CreateStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_DeleteStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_CreateTestset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateTestset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_DeleteTestset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_CreateTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_DeleteTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_CreateTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_DeleteTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_CreateAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_UpdateAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_DeleteAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_GrantPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_change_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change_RevokePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eolymp_atlas_change_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Change_CreateProblem_)(nil),
		(*Change_UpdateProblem_)(nil),
		(*Change_UpdateVerifier_)(nil),
		(*Change_UpdateInteractor_)(nil),
		(*Change_DeleteProblem_)(nil),
		(*Change_CreateStatement_)(nil),
		(*Change_UpdateStatement_)(nil),
		(*Change_DeleteStatement_)(nil),
		(*Change_CreateTestset_)(nil),
		(*Change_UpdateTestset_)(nil),
		(*Change_DeleteTestset_)(nil),
		(*Change_CreateTest_)(nil),
		(*Change_UpdateTest_)(nil),
		(*Change_DeleteTest_)(nil),
		(*Change_CreateTemplate_)(nil),
		(*Change_UpdateTemplate_)(nil),
		(*Change_DeleteTemplate_)(nil),
		(*Change_CreateAttachment_)(nil),
		(*Change_UpdateAttachment_)(nil),
		(*Change_DeleteAttachment_)(nil),
		(*Change_GrantPermission_)(nil),
		(*Change_RevokePermission_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_atlas_change_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_atlas_change_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_change_proto_depIdxs,
		MessageInfos:      file_eolymp_atlas_change_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_change_proto = out.File
	file_eolymp_atlas_change_proto_rawDesc = nil
	file_eolymp_atlas_change_proto_goTypes = nil
	file_eolymp_atlas_change_proto_depIdxs = nil
}
