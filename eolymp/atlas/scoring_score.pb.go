// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/atlas/scoring_score.proto

package atlas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Score for a problem
type Score struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                             // unique identifier
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // user
	MemberId      string                 `protobuf:"bytes,7,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` // member
	SolvedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=solved_at,json=solvedAt,proto3" json:"solved_at,omitempty"` // time when submission was created
	Score         float32                `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`                     // score from 0 (none of the tests are passing) to 1 (all tests are passing)
	Attempts      uint32                 `protobuf:"varint,8,opt,name=attempts,proto3" json:"attempts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Score) Reset() {
	*x = Score{}
	mi := &file_eolymp_atlas_scoring_score_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_scoring_score_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_scoring_score_proto_rawDescGZIP(), []int{0}
}

func (x *Score) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Score) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Score) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *Score) GetSolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SolvedAt
	}
	return nil
}

func (x *Score) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Score) GetAttempts() uint32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

var File_eolymp_atlas_scoring_score_proto protoreflect.FileDescriptor

const file_eolymp_atlas_scoring_score_proto_rawDesc = "" +
	"\n" +
	" eolymp/atlas/scoring_score.proto\x12\feolymp.atlas\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb8\x01\n" +
	"\x05Score\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1b\n" +
	"\tmember_id\x18\a \x01(\tR\bmemberId\x127\n" +
	"\tsolved_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bsolvedAt\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x02R\x05score\x12\x1a\n" +
	"\battempts\x18\b \x01(\rR\battemptsB-Z+github.com/eolymp/go-sdk/eolymp/atlas;atlasb\x06proto3"

var (
	file_eolymp_atlas_scoring_score_proto_rawDescOnce sync.Once
	file_eolymp_atlas_scoring_score_proto_rawDescData []byte
)

func file_eolymp_atlas_scoring_score_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_scoring_score_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_scoring_score_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_scoring_score_proto_rawDesc), len(file_eolymp_atlas_scoring_score_proto_rawDesc)))
	})
	return file_eolymp_atlas_scoring_score_proto_rawDescData
}

var file_eolymp_atlas_scoring_score_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eolymp_atlas_scoring_score_proto_goTypes = []any{
	(*Score)(nil),                 // 0: eolymp.atlas.Score
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_eolymp_atlas_scoring_score_proto_depIdxs = []int32{
	1, // 0: eolymp.atlas.Score.solved_at:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_scoring_score_proto_init() }
func file_eolymp_atlas_scoring_score_proto_init() {
	if File_eolymp_atlas_scoring_score_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_scoring_score_proto_rawDesc), len(file_eolymp_atlas_scoring_score_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_atlas_scoring_score_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_scoring_score_proto_depIdxs,
		MessageInfos:      file_eolymp_atlas_scoring_score_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_scoring_score_proto = out.File
	file_eolymp_atlas_scoring_score_proto_goTypes = nil
	file_eolymp_atlas_scoring_score_proto_depIdxs = nil
}
