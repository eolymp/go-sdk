// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.18.1
// source: eolymp/atlas/submission_graph_service.proto

package atlas

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SubmissionGraphService_ListSubmissionValues_FullMethodName = "/eolymp.atlas.SubmissionGraphService/ListSubmissionValues"
)

// SubmissionGraphServiceClient is the client API for SubmissionGraphService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SubmissionGraphServiceClient interface {
	ListSubmissionValues(ctx context.Context, in *ListSubmissionValuesInput, opts ...grpc.CallOption) (*ListSubmissionValuesOutput, error)
}

type submissionGraphServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSubmissionGraphServiceClient(cc grpc.ClientConnInterface) SubmissionGraphServiceClient {
	return &submissionGraphServiceClient{cc}
}

func (c *submissionGraphServiceClient) ListSubmissionValues(ctx context.Context, in *ListSubmissionValuesInput, opts ...grpc.CallOption) (*ListSubmissionValuesOutput, error) {
	out := new(ListSubmissionValuesOutput)
	err := c.cc.Invoke(ctx, SubmissionGraphService_ListSubmissionValues_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubmissionGraphServiceServer is the server API for SubmissionGraphService service.
// All implementations should embed UnimplementedSubmissionGraphServiceServer
// for forward compatibility
type SubmissionGraphServiceServer interface {
	ListSubmissionValues(context.Context, *ListSubmissionValuesInput) (*ListSubmissionValuesOutput, error)
}

// UnimplementedSubmissionGraphServiceServer should be embedded to have forward compatible implementations.
type UnimplementedSubmissionGraphServiceServer struct {
}

func (UnimplementedSubmissionGraphServiceServer) ListSubmissionValues(context.Context, *ListSubmissionValuesInput) (*ListSubmissionValuesOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubmissionValues not implemented")
}

// UnsafeSubmissionGraphServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SubmissionGraphServiceServer will
// result in compilation errors.
type UnsafeSubmissionGraphServiceServer interface {
	mustEmbedUnimplementedSubmissionGraphServiceServer()
}

func RegisterSubmissionGraphServiceServer(s grpc.ServiceRegistrar, srv SubmissionGraphServiceServer) {
	s.RegisterService(&SubmissionGraphService_ServiceDesc, srv)
}

func _SubmissionGraphService_ListSubmissionValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSubmissionValuesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubmissionGraphServiceServer).ListSubmissionValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SubmissionGraphService_ListSubmissionValues_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubmissionGraphServiceServer).ListSubmissionValues(ctx, req.(*ListSubmissionValuesInput))
	}
	return interceptor(ctx, in, info, handler)
}

// SubmissionGraphService_ServiceDesc is the grpc.ServiceDesc for SubmissionGraphService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SubmissionGraphService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eolymp.atlas.SubmissionGraphService",
	HandlerType: (*SubmissionGraphServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListSubmissionValues",
			Handler:    _SubmissionGraphService_ListSubmissionValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eolymp/atlas/submission_graph_service.proto",
}
