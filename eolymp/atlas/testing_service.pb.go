// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/atlas/testing_service.proto

package atlas

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateTestInput_Patch int32

const (
	UpdateTestInput_ALL            UpdateTestInput_Patch = 0
	UpdateTestInput_EXAMPLE        UpdateTestInput_Patch = 1
	UpdateTestInput_INACTIVE       UpdateTestInput_Patch = 2
	UpdateTestInput_SCORE          UpdateTestInput_Patch = 3
	UpdateTestInput_INPUT          UpdateTestInput_Patch = 4
	UpdateTestInput_ANSWER         UpdateTestInput_Patch = 5
	UpdateTestInput_INDEX          UpdateTestInput_Patch = 8
	UpdateTestInput_SECRET         UpdateTestInput_Patch = 9
	UpdateTestInput_EXAMPLE_INPUT  UpdateTestInput_Patch = 6
	UpdateTestInput_EXAMPLE_ANSWER UpdateTestInput_Patch = 7
)

// Enum value maps for UpdateTestInput_Patch.
var (
	UpdateTestInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "EXAMPLE",
		2: "INACTIVE",
		3: "SCORE",
		4: "INPUT",
		5: "ANSWER",
		8: "INDEX",
		9: "SECRET",
		6: "EXAMPLE_INPUT",
		7: "EXAMPLE_ANSWER",
	}
	UpdateTestInput_Patch_value = map[string]int32{
		"ALL":            0,
		"EXAMPLE":        1,
		"INACTIVE":       2,
		"SCORE":          3,
		"INPUT":          4,
		"ANSWER":         5,
		"INDEX":          8,
		"SECRET":         9,
		"EXAMPLE_INPUT":  6,
		"EXAMPLE_ANSWER": 7,
	}
)

func (x UpdateTestInput_Patch) Enum() *UpdateTestInput_Patch {
	p := new(UpdateTestInput_Patch)
	*p = x
	return p
}

func (x UpdateTestInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTestInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_atlas_testing_service_proto_enumTypes[0].Descriptor()
}

func (UpdateTestInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_atlas_testing_service_proto_enumTypes[0]
}

func (x UpdateTestInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTestInput_Patch.Descriptor instead.
func (UpdateTestInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{41, 0}
}

type TestingConfigChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *TestingConfig         `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *TestingConfig         `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestingConfigChangedEvent) Reset() {
	*x = TestingConfigChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestingConfigChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingConfigChangedEvent) ProtoMessage() {}

func (x *TestingConfigChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingConfigChangedEvent.ProtoReflect.Descriptor instead.
func (*TestingConfigChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestingConfigChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *TestingConfigChangedEvent) GetBefore() *TestingConfig {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *TestingConfigChangedEvent) GetAfter() *TestingConfig {
	if x != nil {
		return x.After
	}
	return nil
}

type InteractorChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *Interactor            `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Interactor            `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractorChangedEvent) Reset() {
	*x = InteractorChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractorChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractorChangedEvent) ProtoMessage() {}

func (x *InteractorChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractorChangedEvent.ProtoReflect.Descriptor instead.
func (*InteractorChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{1}
}

func (x *InteractorChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *InteractorChangedEvent) GetBefore() *Interactor {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *InteractorChangedEvent) GetAfter() *Interactor {
	if x != nil {
		return x.After
	}
	return nil
}

type CheckerChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *Checker               `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Checker               `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckerChangedEvent) Reset() {
	*x = CheckerChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckerChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerChangedEvent) ProtoMessage() {}

func (x *CheckerChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerChangedEvent.ProtoReflect.Descriptor instead.
func (*CheckerChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{2}
}

func (x *CheckerChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CheckerChangedEvent) GetBefore() *Checker {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *CheckerChangedEvent) GetAfter() *Checker {
	if x != nil {
		return x.After
	}
	return nil
}

type ValidatorChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *Validator             `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Validator             `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatorChangedEvent) Reset() {
	*x = ValidatorChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorChangedEvent) ProtoMessage() {}

func (x *ValidatorChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorChangedEvent.ProtoReflect.Descriptor instead.
func (*ValidatorChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{3}
}

func (x *ValidatorChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *ValidatorChangedEvent) GetBefore() *Validator {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ValidatorChangedEvent) GetAfter() *Validator {
	if x != nil {
		return x.After
	}
	return nil
}

type TestsetChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *Testset               `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Testset               `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestsetChangedEvent) Reset() {
	*x = TestsetChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestsetChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestsetChangedEvent) ProtoMessage() {}

func (x *TestsetChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestsetChangedEvent.ProtoReflect.Descriptor instead.
func (*TestsetChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{4}
}

func (x *TestsetChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *TestsetChangedEvent) GetBefore() *Testset {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *TestsetChangedEvent) GetAfter() *Testset {
	if x != nil {
		return x.After
	}
	return nil
}

type TestChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *Test                  `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Test                  `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestChangedEvent) Reset() {
	*x = TestChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestChangedEvent) ProtoMessage() {}

func (x *TestChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestChangedEvent.ProtoReflect.Descriptor instead.
func (*TestChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{5}
}

func (x *TestChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *TestChangedEvent) GetBefore() *Test {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *TestChangedEvent) GetAfter() *Test {
	if x != nil {
		return x.After
	}
	return nil
}

type TestBatchChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        []*Test                `protobuf:"bytes,2,rep,name=before,proto3" json:"before,omitempty"`
	After         []*Test                `protobuf:"bytes,3,rep,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestBatchChangedEvent) Reset() {
	*x = TestBatchChangedEvent{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestBatchChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestBatchChangedEvent) ProtoMessage() {}

func (x *TestBatchChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestBatchChangedEvent.ProtoReflect.Descriptor instead.
func (*TestBatchChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{6}
}

func (x *TestBatchChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *TestBatchChangedEvent) GetBefore() []*Test {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *TestBatchChangedEvent) GetAfter() []*Test {
	if x != nil {
		return x.After
	}
	return nil
}

type UpdateTestingConfigInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *TestingConfig         `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestingConfigInput) Reset() {
	*x = UpdateTestingConfigInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestingConfigInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestingConfigInput) ProtoMessage() {}

func (x *UpdateTestingConfigInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestingConfigInput.ProtoReflect.Descriptor instead.
func (*UpdateTestingConfigInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTestingConfigInput) GetConfig() *TestingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateTestingConfigOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestingConfigOutput) Reset() {
	*x = UpdateTestingConfigOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestingConfigOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestingConfigOutput) ProtoMessage() {}

func (x *UpdateTestingConfigOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestingConfigOutput.ProtoReflect.Descriptor instead.
func (*UpdateTestingConfigOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{8}
}

type DescribeTestingConfigInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTestingConfigInput) Reset() {
	*x = DescribeTestingConfigInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTestingConfigInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestingConfigInput) ProtoMessage() {}

func (x *DescribeTestingConfigInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestingConfigInput.ProtoReflect.Descriptor instead.
func (*DescribeTestingConfigInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeTestingConfigInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DescribeTestingConfigOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *TestingConfig         `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTestingConfigOutput) Reset() {
	*x = DescribeTestingConfigOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTestingConfigOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestingConfigOutput) ProtoMessage() {}

func (x *DescribeTestingConfigOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestingConfigOutput.ProtoReflect.Descriptor instead.
func (*DescribeTestingConfigOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeTestingConfigOutput) GetConfig() *TestingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateCheckerInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Checker       *Checker               `protobuf:"bytes,2,opt,name=checker,proto3" json:"checker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCheckerInput) Reset() {
	*x = UpdateCheckerInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCheckerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckerInput) ProtoMessage() {}

func (x *UpdateCheckerInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckerInput.ProtoReflect.Descriptor instead.
func (*UpdateCheckerInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCheckerInput) GetChecker() *Checker {
	if x != nil {
		return x.Checker
	}
	return nil
}

type UpdateCheckerOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCheckerOutput) Reset() {
	*x = UpdateCheckerOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCheckerOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckerOutput) ProtoMessage() {}

func (x *UpdateCheckerOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckerOutput.ProtoReflect.Descriptor instead.
func (*UpdateCheckerOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{12}
}

type DescribeCheckerInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeCheckerInput) Reset() {
	*x = DescribeCheckerInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeCheckerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCheckerInput) ProtoMessage() {}

func (x *DescribeCheckerInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCheckerInput.ProtoReflect.Descriptor instead.
func (*DescribeCheckerInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{13}
}

func (x *DescribeCheckerInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DescribeCheckerOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Checker       *Checker               `protobuf:"bytes,1,opt,name=checker,proto3" json:"checker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeCheckerOutput) Reset() {
	*x = DescribeCheckerOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeCheckerOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCheckerOutput) ProtoMessage() {}

func (x *DescribeCheckerOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCheckerOutput.ProtoReflect.Descriptor instead.
func (*DescribeCheckerOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeCheckerOutput) GetChecker() *Checker {
	if x != nil {
		return x.Checker
	}
	return nil
}

type UpdateInteractorInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interactor    *Interactor            `protobuf:"bytes,2,opt,name=interactor,proto3" json:"interactor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInteractorInput) Reset() {
	*x = UpdateInteractorInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInteractorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInteractorInput) ProtoMessage() {}

func (x *UpdateInteractorInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInteractorInput.ProtoReflect.Descriptor instead.
func (*UpdateInteractorInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateInteractorInput) GetInteractor() *Interactor {
	if x != nil {
		return x.Interactor
	}
	return nil
}

type UpdateInteractorOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInteractorOutput) Reset() {
	*x = UpdateInteractorOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInteractorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInteractorOutput) ProtoMessage() {}

func (x *UpdateInteractorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInteractorOutput.ProtoReflect.Descriptor instead.
func (*UpdateInteractorOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{16}
}

type DescribeInteractorInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeInteractorInput) Reset() {
	*x = DescribeInteractorInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeInteractorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeInteractorInput) ProtoMessage() {}

func (x *DescribeInteractorInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeInteractorInput.ProtoReflect.Descriptor instead.
func (*DescribeInteractorInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{17}
}

func (x *DescribeInteractorInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DescribeInteractorOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interactor    *Interactor            `protobuf:"bytes,1,opt,name=interactor,proto3" json:"interactor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeInteractorOutput) Reset() {
	*x = DescribeInteractorOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeInteractorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeInteractorOutput) ProtoMessage() {}

func (x *DescribeInteractorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeInteractorOutput.ProtoReflect.Descriptor instead.
func (*DescribeInteractorOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{18}
}

func (x *DescribeInteractorOutput) GetInteractor() *Interactor {
	if x != nil {
		return x.Interactor
	}
	return nil
}

type UpdateValidatorInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Validator     *Validator             `protobuf:"bytes,2,opt,name=validator,proto3" json:"validator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateValidatorInput) Reset() {
	*x = UpdateValidatorInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateValidatorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateValidatorInput) ProtoMessage() {}

func (x *UpdateValidatorInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateValidatorInput.ProtoReflect.Descriptor instead.
func (*UpdateValidatorInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateValidatorInput) GetValidator() *Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

type UpdateValidatorOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateValidatorOutput) Reset() {
	*x = UpdateValidatorOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateValidatorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateValidatorOutput) ProtoMessage() {}

func (x *UpdateValidatorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateValidatorOutput.ProtoReflect.Descriptor instead.
func (*UpdateValidatorOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{20}
}

type DescribeValidatorInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeValidatorInput) Reset() {
	*x = DescribeValidatorInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeValidatorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeValidatorInput) ProtoMessage() {}

func (x *DescribeValidatorInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeValidatorInput.ProtoReflect.Descriptor instead.
func (*DescribeValidatorInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{21}
}

func (x *DescribeValidatorInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DescribeValidatorOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Validator     *Validator             `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeValidatorOutput) Reset() {
	*x = DescribeValidatorOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeValidatorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeValidatorOutput) ProtoMessage() {}

func (x *DescribeValidatorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeValidatorOutput.ProtoReflect.Descriptor instead.
func (*DescribeValidatorOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeValidatorOutput) GetValidator() *Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

type ListTestsetsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int32                  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32                  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTestsetsInput) Reset() {
	*x = ListTestsetsInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTestsetsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsetsInput) ProtoMessage() {}

func (x *ListTestsetsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsetsInput.ProtoReflect.Descriptor instead.
func (*ListTestsetsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListTestsetsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTestsetsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTestsetsInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ListTestsetsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Testset             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTestsetsOutput) Reset() {
	*x = ListTestsetsOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTestsetsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsetsOutput) ProtoMessage() {}

func (x *ListTestsetsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsetsOutput.ProtoReflect.Descriptor instead.
func (*ListTestsetsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListTestsetsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTestsetsOutput) GetItems() []*Testset {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeTestsetInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTestsetInput) Reset() {
	*x = DescribeTestsetInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestsetInput) ProtoMessage() {}

func (x *DescribeTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestsetInput.ProtoReflect.Descriptor instead.
func (*DescribeTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeTestsetInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *DescribeTestsetInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DescribeTestsetOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Testset       *Testset               `protobuf:"bytes,1,opt,name=testset,proto3" json:"testset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTestsetOutput) Reset() {
	*x = DescribeTestsetOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestsetOutput) ProtoMessage() {}

func (x *DescribeTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestsetOutput.ProtoReflect.Descriptor instead.
func (*DescribeTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{26}
}

func (x *DescribeTestsetOutput) GetTestset() *Testset {
	if x != nil {
		return x.Testset
	}
	return nil
}

type CreateTestsetInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Testset       *Testset               `protobuf:"bytes,2,opt,name=testset,proto3" json:"testset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestsetInput) Reset() {
	*x = CreateTestsetInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestsetInput) ProtoMessage() {}

func (x *CreateTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestsetInput.ProtoReflect.Descriptor instead.
func (*CreateTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{27}
}

func (x *CreateTestsetInput) GetTestset() *Testset {
	if x != nil {
		return x.Testset
	}
	return nil
}

type CreateTestsetOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestsetOutput) Reset() {
	*x = CreateTestsetOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestsetOutput) ProtoMessage() {}

func (x *CreateTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestsetOutput.ProtoReflect.Descriptor instead.
func (*CreateTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{28}
}

func (x *CreateTestsetOutput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateTestsetInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Testset       *Testset               `protobuf:"bytes,3,opt,name=testset,proto3" json:"testset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestsetInput) Reset() {
	*x = UpdateTestsetInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestsetInput) ProtoMessage() {}

func (x *UpdateTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestsetInput.ProtoReflect.Descriptor instead.
func (*UpdateTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateTestsetInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *UpdateTestsetInput) GetTestset() *Testset {
	if x != nil {
		return x.Testset
	}
	return nil
}

type UpdateTestsetOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestsetOutput) Reset() {
	*x = UpdateTestsetOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestsetOutput) ProtoMessage() {}

func (x *UpdateTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestsetOutput.ProtoReflect.Descriptor instead.
func (*UpdateTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{30}
}

type DeleteTestsetInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestsetInput) Reset() {
	*x = DeleteTestsetInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestsetInput) ProtoMessage() {}

func (x *DeleteTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestsetInput.ProtoReflect.Descriptor instead.
func (*DeleteTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteTestsetInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

type DeleteTestsetOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestsetOutput) Reset() {
	*x = DeleteTestsetOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestsetOutput) ProtoMessage() {}

func (x *DeleteTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestsetOutput.ProtoReflect.Descriptor instead.
func (*DeleteTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{32}
}

type ListExamplesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExamplesInput) Reset() {
	*x = ListExamplesInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExamplesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExamplesInput) ProtoMessage() {}

func (x *ListExamplesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExamplesInput.ProtoReflect.Descriptor instead.
func (*ListExamplesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{33}
}

func (x *ListExamplesInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ListExamplesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Examples      []*Test                `protobuf:"bytes,2,rep,name=examples,proto3" json:"examples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExamplesOutput) Reset() {
	*x = ListExamplesOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExamplesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExamplesOutput) ProtoMessage() {}

func (x *ListExamplesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExamplesOutput.ProtoReflect.Descriptor instead.
func (*ListExamplesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{34}
}

func (x *ListExamplesOutput) GetExamples() []*Test {
	if x != nil {
		return x.Examples
	}
	return nil
}

type ListTestsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTestsInput) Reset() {
	*x = ListTestsInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTestsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsInput) ProtoMessage() {}

func (x *ListTestsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsInput.ProtoReflect.Descriptor instead.
func (*ListTestsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{35}
}

func (x *ListTestsInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *ListTestsInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ListTestsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Test                `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTestsOutput) Reset() {
	*x = ListTestsOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTestsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsOutput) ProtoMessage() {}

func (x *ListTestsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsOutput.ProtoReflect.Descriptor instead.
func (*ListTestsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{36}
}

func (x *ListTestsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTestsOutput) GetItems() []*Test {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeTestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	TestId        string                 `protobuf:"bytes,3,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTestInput) Reset() {
	*x = DescribeTestInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestInput) ProtoMessage() {}

func (x *DescribeTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestInput.ProtoReflect.Descriptor instead.
func (*DescribeTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{37}
}

func (x *DescribeTestInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *DescribeTestInput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *DescribeTestInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DescribeTestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Test          *Test                  `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTestOutput) Reset() {
	*x = DescribeTestOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestOutput) ProtoMessage() {}

func (x *DescribeTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestOutput.ProtoReflect.Descriptor instead.
func (*DescribeTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{38}
}

func (x *DescribeTestOutput) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

type CreateTestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Test          *Test                  `protobuf:"bytes,3,opt,name=test,proto3" json:"test,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestInput) Reset() {
	*x = CreateTestInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestInput) ProtoMessage() {}

func (x *CreateTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestInput.ProtoReflect.Descriptor instead.
func (*CreateTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{39}
}

func (x *CreateTestInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *CreateTestInput) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

type CreateTestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        string                 `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestOutput) Reset() {
	*x = CreateTestOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestOutput) ProtoMessage() {}

func (x *CreateTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestOutput.ProtoReflect.Descriptor instead.
func (*CreateTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{40}
}

func (x *CreateTestOutput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

type UpdateTestInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// specify list of fields to update, if empty all fields are updated
	Patch         []UpdateTestInput_Patch `protobuf:"varint,5,rep,packed,name=patch,proto3,enum=eolymp.atlas.UpdateTestInput_Patch" json:"patch,omitempty"`
	TestsetId     string                  `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	TestId        string                  `protobuf:"bytes,3,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Test          *Test                   `protobuf:"bytes,4,opt,name=test,proto3" json:"test,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestInput) Reset() {
	*x = UpdateTestInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestInput) ProtoMessage() {}

func (x *UpdateTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestInput.ProtoReflect.Descriptor instead.
func (*UpdateTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateTestInput) GetPatch() []UpdateTestInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateTestInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *UpdateTestInput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *UpdateTestInput) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

type UpdateTestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestOutput) Reset() {
	*x = UpdateTestOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestOutput) ProtoMessage() {}

func (x *UpdateTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestOutput.ProtoReflect.Descriptor instead.
func (*UpdateTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{42}
}

type DeleteTestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestsetId     string                 `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	TestId        string                 `protobuf:"bytes,3,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestInput) Reset() {
	*x = DeleteTestInput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestInput) ProtoMessage() {}

func (x *DeleteTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestInput.ProtoReflect.Descriptor instead.
func (*DeleteTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteTestInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *DeleteTestInput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

type DeleteTestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestOutput) Reset() {
	*x = DeleteTestOutput{}
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestOutput) ProtoMessage() {}

func (x *DeleteTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestOutput.ProtoReflect.Descriptor instead.
func (*DeleteTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_service_proto_rawDescGZIP(), []int{44}
}

var File_eolymp_atlas_testing_service_proto protoreflect.FileDescriptor

const file_eolymp_atlas_testing_service_proto_rawDesc = "" +
	"\n" +
	"\"eolymp/atlas/testing_service.proto\x12\feolymp.atlas\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\"eolymp/atlas/testing_checker.proto\x1a!eolymp/atlas/testing_config.proto\x1a%eolymp/atlas/testing_interactor.proto\x1a\x1feolymp/atlas/testing_test.proto\x1a\"eolymp/atlas/testing_testset.proto\x1a$eolymp/atlas/testing_validator.proto\"\xa2\x01\n" +
	"\x19TestingConfigChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x123\n" +
	"\x06before\x18\x02 \x01(\v2\x1b.eolymp.atlas.TestingConfigR\x06before\x121\n" +
	"\x05after\x18\x03 \x01(\v2\x1b.eolymp.atlas.TestingConfigR\x05after\"\x99\x01\n" +
	"\x16InteractorChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x120\n" +
	"\x06before\x18\x02 \x01(\v2\x18.eolymp.atlas.InteractorR\x06before\x12.\n" +
	"\x05after\x18\x03 \x01(\v2\x18.eolymp.atlas.InteractorR\x05after\"\x90\x01\n" +
	"\x13CheckerChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12-\n" +
	"\x06before\x18\x02 \x01(\v2\x15.eolymp.atlas.CheckerR\x06before\x12+\n" +
	"\x05after\x18\x03 \x01(\v2\x15.eolymp.atlas.CheckerR\x05after\"\x96\x01\n" +
	"\x15ValidatorChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12/\n" +
	"\x06before\x18\x02 \x01(\v2\x17.eolymp.atlas.ValidatorR\x06before\x12-\n" +
	"\x05after\x18\x03 \x01(\v2\x17.eolymp.atlas.ValidatorR\x05after\"\x90\x01\n" +
	"\x13TestsetChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12-\n" +
	"\x06before\x18\x02 \x01(\v2\x15.eolymp.atlas.TestsetR\x06before\x12+\n" +
	"\x05after\x18\x03 \x01(\v2\x15.eolymp.atlas.TestsetR\x05after\"\x87\x01\n" +
	"\x10TestChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12*\n" +
	"\x06before\x18\x02 \x01(\v2\x12.eolymp.atlas.TestR\x06before\x12(\n" +
	"\x05after\x18\x03 \x01(\v2\x12.eolymp.atlas.TestR\x05after\"\x8c\x01\n" +
	"\x15TestBatchChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12*\n" +
	"\x06before\x18\x02 \x03(\v2\x12.eolymp.atlas.TestR\x06before\x12(\n" +
	"\x05after\x18\x03 \x03(\v2\x12.eolymp.atlas.TestR\x05after\"O\n" +
	"\x18UpdateTestingConfigInput\x123\n" +
	"\x06config\x18\x02 \x01(\v2\x1b.eolymp.atlas.TestingConfigR\x06config\"\x1b\n" +
	"\x19UpdateTestingConfigOutput\"6\n" +
	"\x1aDescribeTestingConfigInput\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"R\n" +
	"\x1bDescribeTestingConfigOutput\x123\n" +
	"\x06config\x18\x02 \x01(\v2\x1b.eolymp.atlas.TestingConfigR\x06config\"E\n" +
	"\x12UpdateCheckerInput\x12/\n" +
	"\achecker\x18\x02 \x01(\v2\x15.eolymp.atlas.CheckerR\achecker\"\x15\n" +
	"\x13UpdateCheckerOutput\"0\n" +
	"\x14DescribeCheckerInput\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"H\n" +
	"\x15DescribeCheckerOutput\x12/\n" +
	"\achecker\x18\x01 \x01(\v2\x15.eolymp.atlas.CheckerR\achecker\"Q\n" +
	"\x15UpdateInteractorInput\x128\n" +
	"\n" +
	"interactor\x18\x02 \x01(\v2\x18.eolymp.atlas.InteractorR\n" +
	"interactor\"\x18\n" +
	"\x16UpdateInteractorOutput\"3\n" +
	"\x17DescribeInteractorInput\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"T\n" +
	"\x18DescribeInteractorOutput\x128\n" +
	"\n" +
	"interactor\x18\x01 \x01(\v2\x18.eolymp.atlas.InteractorR\n" +
	"interactor\"M\n" +
	"\x14UpdateValidatorInput\x125\n" +
	"\tvalidator\x18\x02 \x01(\v2\x17.eolymp.atlas.ValidatorR\tvalidator\"\x17\n" +
	"\x15UpdateValidatorOutput\"2\n" +
	"\x16DescribeValidatorInput\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"P\n" +
	"\x17DescribeValidatorOutput\x125\n" +
	"\tvalidator\x18\x01 \x01(\v2\x17.eolymp.atlas.ValidatorR\tvalidator\"Y\n" +
	"\x11ListTestsetsInput\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"W\n" +
	"\x12ListTestsetsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12+\n" +
	"\x05items\x18\x02 \x03(\v2\x15.eolymp.atlas.TestsetR\x05items\"O\n" +
	"\x14DescribeTestsetInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"H\n" +
	"\x15DescribeTestsetOutput\x12/\n" +
	"\atestset\x18\x01 \x01(\v2\x15.eolymp.atlas.TestsetR\atestset\"E\n" +
	"\x12CreateTestsetInput\x12/\n" +
	"\atestset\x18\x02 \x01(\v2\x15.eolymp.atlas.TestsetR\atestset\"%\n" +
	"\x13CreateTestsetOutput\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"d\n" +
	"\x12UpdateTestsetInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12/\n" +
	"\atestset\x18\x03 \x01(\v2\x15.eolymp.atlas.TestsetR\atestset\"\x15\n" +
	"\x13UpdateTestsetOutput\"3\n" +
	"\x12DeleteTestsetInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\"\x15\n" +
	"\x13DeleteTestsetOutput\"-\n" +
	"\x11ListExamplesInput\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"D\n" +
	"\x12ListExamplesOutput\x12.\n" +
	"\bexamples\x18\x02 \x03(\v2\x12.eolymp.atlas.TestR\bexamples\"I\n" +
	"\x0eListTestsInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"Q\n" +
	"\x0fListTestsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12(\n" +
	"\x05items\x18\x02 \x03(\v2\x12.eolymp.atlas.TestR\x05items\"e\n" +
	"\x11DescribeTestInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12\x17\n" +
	"\atest_id\x18\x03 \x01(\tR\x06testId\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"<\n" +
	"\x12DescribeTestOutput\x12&\n" +
	"\x04test\x18\x01 \x01(\v2\x12.eolymp.atlas.TestR\x04test\"X\n" +
	"\x0fCreateTestInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12&\n" +
	"\x04test\x18\x03 \x01(\v2\x12.eolymp.atlas.TestR\x04test\"+\n" +
	"\x10CreateTestOutput\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\tR\x06testId\"\xba\x02\n" +
	"\x0fUpdateTestInput\x129\n" +
	"\x05patch\x18\x05 \x03(\x0e2#.eolymp.atlas.UpdateTestInput.PatchR\x05patch\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12\x17\n" +
	"\atest_id\x18\x03 \x01(\tR\x06testId\x12&\n" +
	"\x04test\x18\x04 \x01(\v2\x12.eolymp.atlas.TestR\x04test\"\x8b\x01\n" +
	"\x05Patch\x12\a\n" +
	"\x03ALL\x10\x00\x12\v\n" +
	"\aEXAMPLE\x10\x01\x12\f\n" +
	"\bINACTIVE\x10\x02\x12\t\n" +
	"\x05SCORE\x10\x03\x12\t\n" +
	"\x05INPUT\x10\x04\x12\n" +
	"\n" +
	"\x06ANSWER\x10\x05\x12\t\n" +
	"\x05INDEX\x10\b\x12\n" +
	"\n" +
	"\x06SECRET\x10\t\x12\x11\n" +
	"\rEXAMPLE_INPUT\x10\x06\x12\x12\n" +
	"\x0eEXAMPLE_ANSWER\x10\a\"\x12\n" +
	"\x10UpdateTestOutput\"I\n" +
	"\x0fDeleteTestInput\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12\x17\n" +
	"\atest_id\x18\x03 \x01(\tR\x06testId\"\x12\n" +
	"\x10DeleteTestOutput2\xb4\x18\n" +
	"\x0eTestingService\x12\xa2\x01\n" +
	"\x13UpdateTestingConfig\x12&.eolymp.atlas.UpdateTestingConfigInput\x1a'.eolymp.atlas.UpdateTestingConfigOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\n" +
	"\x1a\b/testing\x12\xa8\x01\n" +
	"\x15DescribeTestingConfig\x12(.eolymp.atlas.DescribeTestingConfigInput\x1a).eolymp.atlas.DescribeTestingConfigOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/testing\x12\x90\x01\n" +
	"\rUpdateChecker\x12 .eolymp.atlas.UpdateCheckerInput\x1a!.eolymp.atlas.UpdateCheckerOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\n" +
	"\x1a\b/checker\x12\x96\x01\n" +
	"\x0fDescribeChecker\x12\".eolymp.atlas.DescribeCheckerInput\x1a#.eolymp.atlas.DescribeCheckerOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/checker\x12\x9c\x01\n" +
	"\x10UpdateInteractor\x12#.eolymp.atlas.UpdateInteractorInput\x1a$.eolymp.atlas.UpdateInteractorOutput\"=\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\r\x1a\v/interactor\x12\xa2\x01\n" +
	"\x12DescribeInteractor\x12%.eolymp.atlas.DescribeInteractorInput\x1a&.eolymp.atlas.DescribeInteractorOutput\"=\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\r\x12\v/interactor\x12\x98\x01\n" +
	"\x0fUpdateValidator\x12\".eolymp.atlas.UpdateValidatorInput\x1a#.eolymp.atlas.UpdateValidatorOutput\"<\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\f\x1a\n" +
	"/validator\x12\x9e\x01\n" +
	"\x11DescribeValidator\x12$.eolymp.atlas.DescribeValidatorInput\x1a%.eolymp.atlas.DescribeValidatorOutput\"<\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/validator\x12\x91\x01\n" +
	"\rCreateTestset\x12 .eolymp.atlas.CreateTestsetInput\x1a!.eolymp.atlas.CreateTestsetOutput\";\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\v\"\t/testsets\x12\x9e\x01\n" +
	"\rUpdateTestset\x12 .eolymp.atlas.UpdateTestsetInput\x1a!.eolymp.atlas.UpdateTestsetOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x18\x1a\x16/testsets/{testset_id}\x12\x9e\x01\n" +
	"\rDeleteTestset\x12 .eolymp.atlas.DeleteTestsetInput\x1a!.eolymp.atlas.DeleteTestsetOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x18*\x16/testsets/{testset_id}\x12\xa4\x01\n" +
	"\x0fDescribeTestset\x12\".eolymp.atlas.DescribeTestsetInput\x1a#.eolymp.atlas.DescribeTestsetOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x18\x12\x16/testsets/{testset_id}\x12\x8e\x01\n" +
	"\fListTestsets\x12\x1f.eolymp.atlas.ListTestsetsInput\x1a .eolymp.atlas.ListTestsetsOutput\";\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\v\x12\t/testsets\x12\xa6\x01\n" +
	"\n" +
	"CreateTest\x12\x1d.eolymp.atlas.CreateTestInput\x1a\x1e.eolymp.atlas.CreateTestOutput\"Y\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02(Z\b\"\x06/tests\"\x1c/testsets/{testset_id}/tests\x12\xba\x01\n" +
	"\n" +
	"UpdateTest\x12\x1d.eolymp.atlas.UpdateTestInput\x1a\x1e.eolymp.atlas.UpdateTestOutput\"m\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02<Z(\x1a&/testsets/{testset_id}/tests/{test_id}\x1a\x10/tests/{test_id}\x12\xba\x01\n" +
	"\n" +
	"DeleteTest\x12\x1d.eolymp.atlas.DeleteTestInput\x1a\x1e.eolymp.atlas.DeleteTestOutput\"m\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02<Z(*&/testsets/{testset_id}/tests/{test_id}*\x10/tests/{test_id}\x12\xbf\x01\n" +
	"\fDescribeTest\x12\x1f.eolymp.atlas.DescribeTestInput\x1a .eolymp.atlas.DescribeTestOutput\"l\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02<Z(\x12&/testsets/{testset_id}/tests/{test_id}\x12\x10/tests/{test_id}\x12\xa2\x01\n" +
	"\tListTests\x12\x1c.eolymp.atlas.ListTestsInput\x1a\x1d.eolymp.atlas.ListTestsOutput\"X\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02(Z\x1e\x12\x1c/testsets/{testset_id}/tests\x12\x06/tests\x12\x8d\x01\n" +
	"\fListExamples\x12\x1f.eolymp.atlas.ListExamplesInput\x1a .eolymp.atlas.ListExamplesOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02\v\x12\t/examplesB-Z+github.com/eolymp/go-sdk/eolymp/atlas;atlasb\x06proto3"

var (
	file_eolymp_atlas_testing_service_proto_rawDescOnce sync.Once
	file_eolymp_atlas_testing_service_proto_rawDescData []byte
)

func file_eolymp_atlas_testing_service_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_testing_service_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_testing_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_testing_service_proto_rawDesc), len(file_eolymp_atlas_testing_service_proto_rawDesc)))
	})
	return file_eolymp_atlas_testing_service_proto_rawDescData
}

var file_eolymp_atlas_testing_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_atlas_testing_service_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_eolymp_atlas_testing_service_proto_goTypes = []any{
	(UpdateTestInput_Patch)(0),          // 0: eolymp.atlas.UpdateTestInput.Patch
	(*TestingConfigChangedEvent)(nil),   // 1: eolymp.atlas.TestingConfigChangedEvent
	(*InteractorChangedEvent)(nil),      // 2: eolymp.atlas.InteractorChangedEvent
	(*CheckerChangedEvent)(nil),         // 3: eolymp.atlas.CheckerChangedEvent
	(*ValidatorChangedEvent)(nil),       // 4: eolymp.atlas.ValidatorChangedEvent
	(*TestsetChangedEvent)(nil),         // 5: eolymp.atlas.TestsetChangedEvent
	(*TestChangedEvent)(nil),            // 6: eolymp.atlas.TestChangedEvent
	(*TestBatchChangedEvent)(nil),       // 7: eolymp.atlas.TestBatchChangedEvent
	(*UpdateTestingConfigInput)(nil),    // 8: eolymp.atlas.UpdateTestingConfigInput
	(*UpdateTestingConfigOutput)(nil),   // 9: eolymp.atlas.UpdateTestingConfigOutput
	(*DescribeTestingConfigInput)(nil),  // 10: eolymp.atlas.DescribeTestingConfigInput
	(*DescribeTestingConfigOutput)(nil), // 11: eolymp.atlas.DescribeTestingConfigOutput
	(*UpdateCheckerInput)(nil),          // 12: eolymp.atlas.UpdateCheckerInput
	(*UpdateCheckerOutput)(nil),         // 13: eolymp.atlas.UpdateCheckerOutput
	(*DescribeCheckerInput)(nil),        // 14: eolymp.atlas.DescribeCheckerInput
	(*DescribeCheckerOutput)(nil),       // 15: eolymp.atlas.DescribeCheckerOutput
	(*UpdateInteractorInput)(nil),       // 16: eolymp.atlas.UpdateInteractorInput
	(*UpdateInteractorOutput)(nil),      // 17: eolymp.atlas.UpdateInteractorOutput
	(*DescribeInteractorInput)(nil),     // 18: eolymp.atlas.DescribeInteractorInput
	(*DescribeInteractorOutput)(nil),    // 19: eolymp.atlas.DescribeInteractorOutput
	(*UpdateValidatorInput)(nil),        // 20: eolymp.atlas.UpdateValidatorInput
	(*UpdateValidatorOutput)(nil),       // 21: eolymp.atlas.UpdateValidatorOutput
	(*DescribeValidatorInput)(nil),      // 22: eolymp.atlas.DescribeValidatorInput
	(*DescribeValidatorOutput)(nil),     // 23: eolymp.atlas.DescribeValidatorOutput
	(*ListTestsetsInput)(nil),           // 24: eolymp.atlas.ListTestsetsInput
	(*ListTestsetsOutput)(nil),          // 25: eolymp.atlas.ListTestsetsOutput
	(*DescribeTestsetInput)(nil),        // 26: eolymp.atlas.DescribeTestsetInput
	(*DescribeTestsetOutput)(nil),       // 27: eolymp.atlas.DescribeTestsetOutput
	(*CreateTestsetInput)(nil),          // 28: eolymp.atlas.CreateTestsetInput
	(*CreateTestsetOutput)(nil),         // 29: eolymp.atlas.CreateTestsetOutput
	(*UpdateTestsetInput)(nil),          // 30: eolymp.atlas.UpdateTestsetInput
	(*UpdateTestsetOutput)(nil),         // 31: eolymp.atlas.UpdateTestsetOutput
	(*DeleteTestsetInput)(nil),          // 32: eolymp.atlas.DeleteTestsetInput
	(*DeleteTestsetOutput)(nil),         // 33: eolymp.atlas.DeleteTestsetOutput
	(*ListExamplesInput)(nil),           // 34: eolymp.atlas.ListExamplesInput
	(*ListExamplesOutput)(nil),          // 35: eolymp.atlas.ListExamplesOutput
	(*ListTestsInput)(nil),              // 36: eolymp.atlas.ListTestsInput
	(*ListTestsOutput)(nil),             // 37: eolymp.atlas.ListTestsOutput
	(*DescribeTestInput)(nil),           // 38: eolymp.atlas.DescribeTestInput
	(*DescribeTestOutput)(nil),          // 39: eolymp.atlas.DescribeTestOutput
	(*CreateTestInput)(nil),             // 40: eolymp.atlas.CreateTestInput
	(*CreateTestOutput)(nil),            // 41: eolymp.atlas.CreateTestOutput
	(*UpdateTestInput)(nil),             // 42: eolymp.atlas.UpdateTestInput
	(*UpdateTestOutput)(nil),            // 43: eolymp.atlas.UpdateTestOutput
	(*DeleteTestInput)(nil),             // 44: eolymp.atlas.DeleteTestInput
	(*DeleteTestOutput)(nil),            // 45: eolymp.atlas.DeleteTestOutput
	(*TestingConfig)(nil),               // 46: eolymp.atlas.TestingConfig
	(*Interactor)(nil),                  // 47: eolymp.atlas.Interactor
	(*Checker)(nil),                     // 48: eolymp.atlas.Checker
	(*Validator)(nil),                   // 49: eolymp.atlas.Validator
	(*Testset)(nil),                     // 50: eolymp.atlas.Testset
	(*Test)(nil),                        // 51: eolymp.atlas.Test
}
var file_eolymp_atlas_testing_service_proto_depIdxs = []int32{
	46, // 0: eolymp.atlas.TestingConfigChangedEvent.before:type_name -> eolymp.atlas.TestingConfig
	46, // 1: eolymp.atlas.TestingConfigChangedEvent.after:type_name -> eolymp.atlas.TestingConfig
	47, // 2: eolymp.atlas.InteractorChangedEvent.before:type_name -> eolymp.atlas.Interactor
	47, // 3: eolymp.atlas.InteractorChangedEvent.after:type_name -> eolymp.atlas.Interactor
	48, // 4: eolymp.atlas.CheckerChangedEvent.before:type_name -> eolymp.atlas.Checker
	48, // 5: eolymp.atlas.CheckerChangedEvent.after:type_name -> eolymp.atlas.Checker
	49, // 6: eolymp.atlas.ValidatorChangedEvent.before:type_name -> eolymp.atlas.Validator
	49, // 7: eolymp.atlas.ValidatorChangedEvent.after:type_name -> eolymp.atlas.Validator
	50, // 8: eolymp.atlas.TestsetChangedEvent.before:type_name -> eolymp.atlas.Testset
	50, // 9: eolymp.atlas.TestsetChangedEvent.after:type_name -> eolymp.atlas.Testset
	51, // 10: eolymp.atlas.TestChangedEvent.before:type_name -> eolymp.atlas.Test
	51, // 11: eolymp.atlas.TestChangedEvent.after:type_name -> eolymp.atlas.Test
	51, // 12: eolymp.atlas.TestBatchChangedEvent.before:type_name -> eolymp.atlas.Test
	51, // 13: eolymp.atlas.TestBatchChangedEvent.after:type_name -> eolymp.atlas.Test
	46, // 14: eolymp.atlas.UpdateTestingConfigInput.config:type_name -> eolymp.atlas.TestingConfig
	46, // 15: eolymp.atlas.DescribeTestingConfigOutput.config:type_name -> eolymp.atlas.TestingConfig
	48, // 16: eolymp.atlas.UpdateCheckerInput.checker:type_name -> eolymp.atlas.Checker
	48, // 17: eolymp.atlas.DescribeCheckerOutput.checker:type_name -> eolymp.atlas.Checker
	47, // 18: eolymp.atlas.UpdateInteractorInput.interactor:type_name -> eolymp.atlas.Interactor
	47, // 19: eolymp.atlas.DescribeInteractorOutput.interactor:type_name -> eolymp.atlas.Interactor
	49, // 20: eolymp.atlas.UpdateValidatorInput.validator:type_name -> eolymp.atlas.Validator
	49, // 21: eolymp.atlas.DescribeValidatorOutput.validator:type_name -> eolymp.atlas.Validator
	50, // 22: eolymp.atlas.ListTestsetsOutput.items:type_name -> eolymp.atlas.Testset
	50, // 23: eolymp.atlas.DescribeTestsetOutput.testset:type_name -> eolymp.atlas.Testset
	50, // 24: eolymp.atlas.CreateTestsetInput.testset:type_name -> eolymp.atlas.Testset
	50, // 25: eolymp.atlas.UpdateTestsetInput.testset:type_name -> eolymp.atlas.Testset
	51, // 26: eolymp.atlas.ListExamplesOutput.examples:type_name -> eolymp.atlas.Test
	51, // 27: eolymp.atlas.ListTestsOutput.items:type_name -> eolymp.atlas.Test
	51, // 28: eolymp.atlas.DescribeTestOutput.test:type_name -> eolymp.atlas.Test
	51, // 29: eolymp.atlas.CreateTestInput.test:type_name -> eolymp.atlas.Test
	0,  // 30: eolymp.atlas.UpdateTestInput.patch:type_name -> eolymp.atlas.UpdateTestInput.Patch
	51, // 31: eolymp.atlas.UpdateTestInput.test:type_name -> eolymp.atlas.Test
	8,  // 32: eolymp.atlas.TestingService.UpdateTestingConfig:input_type -> eolymp.atlas.UpdateTestingConfigInput
	10, // 33: eolymp.atlas.TestingService.DescribeTestingConfig:input_type -> eolymp.atlas.DescribeTestingConfigInput
	12, // 34: eolymp.atlas.TestingService.UpdateChecker:input_type -> eolymp.atlas.UpdateCheckerInput
	14, // 35: eolymp.atlas.TestingService.DescribeChecker:input_type -> eolymp.atlas.DescribeCheckerInput
	16, // 36: eolymp.atlas.TestingService.UpdateInteractor:input_type -> eolymp.atlas.UpdateInteractorInput
	18, // 37: eolymp.atlas.TestingService.DescribeInteractor:input_type -> eolymp.atlas.DescribeInteractorInput
	20, // 38: eolymp.atlas.TestingService.UpdateValidator:input_type -> eolymp.atlas.UpdateValidatorInput
	22, // 39: eolymp.atlas.TestingService.DescribeValidator:input_type -> eolymp.atlas.DescribeValidatorInput
	28, // 40: eolymp.atlas.TestingService.CreateTestset:input_type -> eolymp.atlas.CreateTestsetInput
	30, // 41: eolymp.atlas.TestingService.UpdateTestset:input_type -> eolymp.atlas.UpdateTestsetInput
	32, // 42: eolymp.atlas.TestingService.DeleteTestset:input_type -> eolymp.atlas.DeleteTestsetInput
	26, // 43: eolymp.atlas.TestingService.DescribeTestset:input_type -> eolymp.atlas.DescribeTestsetInput
	24, // 44: eolymp.atlas.TestingService.ListTestsets:input_type -> eolymp.atlas.ListTestsetsInput
	40, // 45: eolymp.atlas.TestingService.CreateTest:input_type -> eolymp.atlas.CreateTestInput
	42, // 46: eolymp.atlas.TestingService.UpdateTest:input_type -> eolymp.atlas.UpdateTestInput
	44, // 47: eolymp.atlas.TestingService.DeleteTest:input_type -> eolymp.atlas.DeleteTestInput
	38, // 48: eolymp.atlas.TestingService.DescribeTest:input_type -> eolymp.atlas.DescribeTestInput
	36, // 49: eolymp.atlas.TestingService.ListTests:input_type -> eolymp.atlas.ListTestsInput
	34, // 50: eolymp.atlas.TestingService.ListExamples:input_type -> eolymp.atlas.ListExamplesInput
	9,  // 51: eolymp.atlas.TestingService.UpdateTestingConfig:output_type -> eolymp.atlas.UpdateTestingConfigOutput
	11, // 52: eolymp.atlas.TestingService.DescribeTestingConfig:output_type -> eolymp.atlas.DescribeTestingConfigOutput
	13, // 53: eolymp.atlas.TestingService.UpdateChecker:output_type -> eolymp.atlas.UpdateCheckerOutput
	15, // 54: eolymp.atlas.TestingService.DescribeChecker:output_type -> eolymp.atlas.DescribeCheckerOutput
	17, // 55: eolymp.atlas.TestingService.UpdateInteractor:output_type -> eolymp.atlas.UpdateInteractorOutput
	19, // 56: eolymp.atlas.TestingService.DescribeInteractor:output_type -> eolymp.atlas.DescribeInteractorOutput
	21, // 57: eolymp.atlas.TestingService.UpdateValidator:output_type -> eolymp.atlas.UpdateValidatorOutput
	23, // 58: eolymp.atlas.TestingService.DescribeValidator:output_type -> eolymp.atlas.DescribeValidatorOutput
	29, // 59: eolymp.atlas.TestingService.CreateTestset:output_type -> eolymp.atlas.CreateTestsetOutput
	31, // 60: eolymp.atlas.TestingService.UpdateTestset:output_type -> eolymp.atlas.UpdateTestsetOutput
	33, // 61: eolymp.atlas.TestingService.DeleteTestset:output_type -> eolymp.atlas.DeleteTestsetOutput
	27, // 62: eolymp.atlas.TestingService.DescribeTestset:output_type -> eolymp.atlas.DescribeTestsetOutput
	25, // 63: eolymp.atlas.TestingService.ListTestsets:output_type -> eolymp.atlas.ListTestsetsOutput
	41, // 64: eolymp.atlas.TestingService.CreateTest:output_type -> eolymp.atlas.CreateTestOutput
	43, // 65: eolymp.atlas.TestingService.UpdateTest:output_type -> eolymp.atlas.UpdateTestOutput
	45, // 66: eolymp.atlas.TestingService.DeleteTest:output_type -> eolymp.atlas.DeleteTestOutput
	39, // 67: eolymp.atlas.TestingService.DescribeTest:output_type -> eolymp.atlas.DescribeTestOutput
	37, // 68: eolymp.atlas.TestingService.ListTests:output_type -> eolymp.atlas.ListTestsOutput
	35, // 69: eolymp.atlas.TestingService.ListExamples:output_type -> eolymp.atlas.ListExamplesOutput
	51, // [51:70] is the sub-list for method output_type
	32, // [32:51] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_testing_service_proto_init() }
func file_eolymp_atlas_testing_service_proto_init() {
	if File_eolymp_atlas_testing_service_proto != nil {
		return
	}
	file_eolymp_atlas_testing_checker_proto_init()
	file_eolymp_atlas_testing_config_proto_init()
	file_eolymp_atlas_testing_interactor_proto_init()
	file_eolymp_atlas_testing_test_proto_init()
	file_eolymp_atlas_testing_testset_proto_init()
	file_eolymp_atlas_testing_validator_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_testing_service_proto_rawDesc), len(file_eolymp_atlas_testing_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_atlas_testing_service_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_testing_service_proto_depIdxs,
		EnumInfos:         file_eolymp_atlas_testing_service_proto_enumTypes,
		MessageInfos:      file_eolymp_atlas_testing_service_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_testing_service_proto = out.File
	file_eolymp_atlas_testing_service_proto_goTypes = nil
	file_eolymp_atlas_testing_service_proto_depIdxs = nil
}
