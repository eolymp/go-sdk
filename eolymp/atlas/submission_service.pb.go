// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: eolymp/atlas/submission_service.proto

package atlas

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmissionChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Before        *Submission            `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *Submission            `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionChangedEvent) Reset() {
	*x = SubmissionChangedEvent{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionChangedEvent) ProtoMessage() {}

func (x *SubmissionChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionChangedEvent.ProtoReflect.Descriptor instead.
func (*SubmissionChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubmissionChangedEvent) GetBefore() *Submission {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *SubmissionChangedEvent) GetAfter() *Submission {
	if x != nil {
		return x.After
	}
	return nil
}

type SubmissionCompleteEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"` // submission
	Update        bool                   `protobuf:"varint,2,opt,name=update,proto3" json:"update,omitempty"`        // true, if submission has been completed before, this flag is set when submission is being retested
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionCompleteEvent) Reset() {
	*x = SubmissionCompleteEvent{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionCompleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionCompleteEvent) ProtoMessage() {}

func (x *SubmissionCompleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionCompleteEvent.ProtoReflect.Descriptor instead.
func (*SubmissionCompleteEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubmissionCompleteEvent) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

func (x *SubmissionCompleteEvent) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type CreateSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Lang          string                 `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionInput) Reset() {
	*x = CreateSubmissionInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionInput) ProtoMessage() {}

func (x *CreateSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionInput.ProtoReflect.Descriptor instead.
func (*CreateSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSubmissionInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CreateSubmissionInput) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *CreateSubmissionInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type CreateSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionOutput) Reset() {
	*x = CreateSubmissionOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionOutput) ProtoMessage() {}

func (x *CreateSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionOutput.ProtoReflect.Descriptor instead.
func (*CreateSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubmissionOutput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type DescribeSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionInput) Reset() {
	*x = DescribeSubmissionInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionInput) ProtoMessage() {}

func (x *DescribeSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionInput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type DescribeSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	Extra         []Submission_Extra     `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Submission_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionOutput) Reset() {
	*x = DescribeSubmissionOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionOutput) ProtoMessage() {}

func (x *DescribeSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionOutput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeSubmissionOutput) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

func (x *DescribeSubmissionOutput) GetExtra() []Submission_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Extra         []Submission_Extra     `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Submission_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchSubmissionInput) Reset() {
	*x = WatchSubmissionInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSubmissionInput) ProtoMessage() {}

func (x *WatchSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSubmissionInput.ProtoReflect.Descriptor instead.
func (*WatchSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{6}
}

func (x *WatchSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *WatchSubmissionInput) GetExtra() []Submission_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchSubmissionOutput) Reset() {
	*x = WatchSubmissionOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSubmissionOutput) ProtoMessage() {}

func (x *WatchSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSubmissionOutput.ProtoReflect.Descriptor instead.
func (*WatchSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{7}
}

func (x *WatchSubmissionOutput) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type RetestSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Debug         bool                   `protobuf:"varint,3,opt,name=debug,proto3" json:"debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetestSubmissionInput) Reset() {
	*x = RetestSubmissionInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetestSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetestSubmissionInput) ProtoMessage() {}

func (x *RetestSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetestSubmissionInput.ProtoReflect.Descriptor instead.
func (*RetestSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{8}
}

func (x *RetestSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *RetestSubmissionInput) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type RetestSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetestSubmissionOutput) Reset() {
	*x = RetestSubmissionOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetestSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetestSubmissionOutput) ProtoMessage() {}

func (x *RetestSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetestSubmissionOutput.ProtoReflect.Descriptor instead.
func (*RetestSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{9}
}

type ListSubmissionsInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pagination
	After  string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Offset int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters       *ListSubmissionsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Extra         []Submission_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Submission_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsInput) Reset() {
	*x = ListSubmissionsInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsInput) ProtoMessage() {}

func (x *ListSubmissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsInput.ProtoReflect.Descriptor instead.
func (*ListSubmissionsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListSubmissionsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListSubmissionsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSubmissionsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSubmissionsInput) GetFilters() *ListSubmissionsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSubmissionsInput) GetExtra() []Submission_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListSubmissionsOutput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*Submission          `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string                 `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListSubmissionsOutput) Reset() {
	*x = ListSubmissionsOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsOutput) ProtoMessage() {}

func (x *ListSubmissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsOutput.ProtoReflect.Descriptor instead.
func (*ListSubmissionsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListSubmissionsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubmissionsOutput) GetItems() []*Submission {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListSubmissionsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type DescribeSubmissionUsageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeriodStart   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionUsageInput) Reset() {
	*x = DescribeSubmissionUsageInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionUsageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionUsageInput) ProtoMessage() {}

func (x *DescribeSubmissionUsageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionUsageInput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionUsageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeSubmissionUsageInput) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *DescribeSubmissionUsageInput) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

type DescribeSubmissionUsageOutput struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TotalSubmissions     uint32                 `protobuf:"varint,1,opt,name=total_submissions,json=totalSubmissions,proto3" json:"total_submissions,omitempty"`             // number of total number of submissions
	MonthlySubmissions   uint32                 `protobuf:"varint,2,opt,name=monthly_submissions,json=monthlySubmissions,proto3" json:"monthly_submissions,omitempty"`       // number of submissions this month
	MonthlyEvaluations   uint32                 `protobuf:"varint,3,opt,name=monthly_evaluations,json=monthlyEvaluations,proto3" json:"monthly_evaluations,omitempty"`       // number of evaluations this month
	AvailableEvaluations uint32                 `protobuf:"varint,4,opt,name=available_evaluations,json=availableEvaluations,proto3" json:"available_evaluations,omitempty"` // current evaluation limit in the space
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeSubmissionUsageOutput) Reset() {
	*x = DescribeSubmissionUsageOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionUsageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionUsageOutput) ProtoMessage() {}

func (x *DescribeSubmissionUsageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionUsageOutput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionUsageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{13}
}

func (x *DescribeSubmissionUsageOutput) GetTotalSubmissions() uint32 {
	if x != nil {
		return x.TotalSubmissions
	}
	return 0
}

func (x *DescribeSubmissionUsageOutput) GetMonthlySubmissions() uint32 {
	if x != nil {
		return x.MonthlySubmissions
	}
	return 0
}

func (x *DescribeSubmissionUsageOutput) GetMonthlyEvaluations() uint32 {
	if x != nil {
		return x.MonthlyEvaluations
	}
	return 0
}

func (x *DescribeSubmissionUsageOutput) GetAvailableEvaluations() uint32 {
	if x != nil {
		return x.AvailableEvaluations
	}
	return 0
}

type ListProblemTopInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemTopInput) Reset() {
	*x = ListProblemTopInput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemTopInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemTopInput) ProtoMessage() {}

func (x *ListProblemTopInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemTopInput.ProtoReflect.Descriptor instead.
func (*ListProblemTopInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListProblemTopInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListProblemTopOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Submission          `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemTopOutput) Reset() {
	*x = ListProblemTopOutput{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemTopOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemTopOutput) ProtoMessage() {}

func (x *ListProblemTopOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemTopOutput.ProtoReflect.Descriptor instead.
func (*ListProblemTopOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListProblemTopOutput) GetItems() []*Submission {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListSubmissionsInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	ProblemId     []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	UserId        []*wellknown.ExpressionID        `protobuf:"bytes,3,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MemberId      []*wellknown.ExpressionID        `protobuf:"bytes,9,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	SubmittedAt   []*wellknown.ExpressionTimestamp `protobuf:"bytes,4,rep,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Runtime       []*wellknown.ExpressionEnum      `protobuf:"bytes,5,rep,name=runtime,proto3" json:"runtime,omitempty"`
	Status        []*wellknown.ExpressionEnum      `protobuf:"bytes,6,rep,name=status,proto3" json:"status,omitempty"`
	Verdict       []*wellknown.ExpressionEnum      `protobuf:"bytes,10,rep,name=verdict,proto3" json:"verdict,omitempty"`
	Score         []*wellknown.ExpressionFloat     `protobuf:"bytes,7,rep,name=score,proto3" json:"score,omitempty"`
	Percentage    []*wellknown.ExpressionFloat     `protobuf:"bytes,8,rep,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsInput_Filter) Reset() {
	*x = ListSubmissionsInput_Filter{}
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsInput_Filter) ProtoMessage() {}

func (x *ListSubmissionsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_submission_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListSubmissionsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_submission_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ListSubmissionsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetProblemId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ProblemId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetUserId() []*wellknown.ExpressionID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetSubmittedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetRuntime() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetVerdict() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Verdict
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetScore() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetPercentage() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Percentage
	}
	return nil
}

var File_eolymp_atlas_submission_service_proto protoreflect.FileDescriptor

const file_eolymp_atlas_submission_service_proto_rawDesc = "" +
	"\n" +
	"%eolymp/atlas/submission_service.proto\x12\feolymp.atlas\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1deolymp/atlas/submission.proto\x1a!eolymp/wellknown/expression.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"z\n" +
	"\x16SubmissionChangedEvent\x120\n" +
	"\x06before\x18\x01 \x01(\v2\x18.eolymp.atlas.SubmissionR\x06before\x12.\n" +
	"\x05after\x18\x02 \x01(\v2\x18.eolymp.atlas.SubmissionR\x05after\"k\n" +
	"\x17SubmissionCompleteEvent\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.atlas.SubmissionR\n" +
	"submission\x12\x16\n" +
	"\x06update\x18\x02 \x01(\bR\x06update\"b\n" +
	"\x15CreateSubmissionInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x12\n" +
	"\x04lang\x18\x02 \x01(\tR\x04lang\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\"=\n" +
	"\x16CreateSubmissionOutput\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\">\n" +
	"\x17DescribeSubmissionInput\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\"\x8b\x01\n" +
	"\x18DescribeSubmissionOutput\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.atlas.SubmissionR\n" +
	"submission\x125\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1e.eolymp.atlas.Submission.ExtraR\x05extra\"r\n" +
	"\x14WatchSubmissionInput\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\x125\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1e.eolymp.atlas.Submission.ExtraR\x05extra\"Q\n" +
	"\x15WatchSubmissionOutput\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.atlas.SubmissionR\n" +
	"submission\"R\n" +
	"\x15RetestSubmissionInput\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\x12\x14\n" +
	"\x05debug\x18\x03 \x01(\bR\x05debug\"\x18\n" +
	"\x16RetestSubmissionOutput\"\xbc\x06\n" +
	"\x14ListSubmissionsInput\x12\x14\n" +
	"\x05after\x18\f \x01(\tR\x05after\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12C\n" +
	"\afilters\x18( \x01(\v2).eolymp.atlas.ListSubmissionsInput.FilterR\afilters\x125\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1e.eolymp.atlas.Submission.ExtraR\x05extra\x1a\xe5\x04\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\x01 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x12=\n" +
	"\n" +
	"problem_id\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\tproblemId\x127\n" +
	"\auser_id\x18\x03 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x06userId\x12;\n" +
	"\tmember_id\x18\t \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\bmemberId\x12H\n" +
	"\fsubmitted_at\x18\x04 \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\vsubmittedAt\x12:\n" +
	"\aruntime\x18\x05 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\aruntime\x128\n" +
	"\x06status\x18\x06 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\x12:\n" +
	"\averdict\x18\n" +
	" \x03(\v2 .eolymp.wellknown.ExpressionEnumR\averdict\x127\n" +
	"\x05score\x18\a \x03(\v2!.eolymp.wellknown.ExpressionFloatR\x05score\x12A\n" +
	"\n" +
	"percentage\x18\b \x03(\v2!.eolymp.wellknown.ExpressionFloatR\n" +
	"percentage\"\x87\x01\n" +
	"\x15ListSubmissionsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.eolymp.atlas.SubmissionR\x05items\x12(\n" +
	"\x10next_page_cursor\x18\x03 \x01(\tR\x0enextPageCursor\"\x98\x01\n" +
	"\x1cDescribeSubmissionUsageInput\x12=\n" +
	"\fperiod_start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vperiodStart\x129\n" +
	"\n" +
	"period_end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tperiodEnd\"\xe3\x01\n" +
	"\x1dDescribeSubmissionUsageOutput\x12+\n" +
	"\x11total_submissions\x18\x01 \x01(\rR\x10totalSubmissions\x12/\n" +
	"\x13monthly_submissions\x18\x02 \x01(\rR\x12monthlySubmissions\x12/\n" +
	"\x13monthly_evaluations\x18\x03 \x01(\rR\x12monthlyEvaluations\x123\n" +
	"\x15available_evaluations\x18\x04 \x01(\rR\x14availableEvaluations\"4\n" +
	"\x13ListProblemTopInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\"F\n" +
	"\x14ListProblemTopOutput\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.eolymp.atlas.SubmissionR\x05items2\x99\t\n" +
	"\x11SubmissionService\x12\xa0\x01\n" +
	"\x10CreateSubmission\x12#.eolymp.atlas.CreateSubmissionInput\x1a$.eolymp.atlas.CreateSubmissionOutput\"A\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x1a\x8a\xe3\n" +
	"\x16atlas:submission:write\x82\xd3\xe4\x93\x02\x0e\"\f/submissions\x12\xb7\x01\n" +
	"\x10RetestSubmission\x12#.eolymp.atlas.RetestSubmissionInput\x1a$.eolymp.atlas.RetestSubmissionOutput\"X\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x1a\x8a\xe3\n" +
	"\x16atlas:submission:write\x82\xd3\xe4\x93\x02%\"#/submissions/{submission_id}/retest\x12\xb5\x01\n" +
	"\x12DescribeSubmission\x12%.eolymp.atlas.DescribeSubmissionInput\x1a&.eolymp.atlas.DescribeSubmissionOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15atlas:submission:read\x82\xd3\xe4\x93\x02\x1e\x12\x1c/submissions/{submission_id}\x12{\n" +
	"\x0fWatchSubmission\x12\".eolymp.atlas.WatchSubmissionInput\x1a#.eolymp.atlas.WatchSubmissionOutput\"\x1d\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15atlas:submission:read0\x01\x12\x9c\x01\n" +
	"\x0fListSubmissions\x12\".eolymp.atlas.ListSubmissionsInput\x1a#.eolymp.atlas.ListSubmissionsOutput\"@\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15atlas:submission:read\x82\xd3\xe4\x93\x02\x0e\x12\f/submissions\x12\xba\x01\n" +
	"\x17DescribeSubmissionUsage\x12*.eolymp.atlas.DescribeSubmissionUsageInput\x1a+.eolymp.atlas.DescribeSubmissionUsageOutput\"F\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15atlas:submission:read\x82\xd3\xe4\x93\x02\x14\x12\x12/usage/submissions\x12\x95\x01\n" +
	"\x0eListProblemTop\x12!.eolymp.atlas.ListProblemTopInput\x1a\".eolymp.atlas.ListProblemTopOutput\"<\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02\x1c\x12\x1a/problems/{problem_id}/topB-Z+github.com/eolymp/go-sdk/eolymp/atlas;atlasb\x06proto3"

var (
	file_eolymp_atlas_submission_service_proto_rawDescOnce sync.Once
	file_eolymp_atlas_submission_service_proto_rawDescData []byte
)

func file_eolymp_atlas_submission_service_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_submission_service_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_submission_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_submission_service_proto_rawDesc), len(file_eolymp_atlas_submission_service_proto_rawDesc)))
	})
	return file_eolymp_atlas_submission_service_proto_rawDescData
}

var file_eolymp_atlas_submission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_eolymp_atlas_submission_service_proto_goTypes = []any{
	(*SubmissionChangedEvent)(nil),        // 0: eolymp.atlas.SubmissionChangedEvent
	(*SubmissionCompleteEvent)(nil),       // 1: eolymp.atlas.SubmissionCompleteEvent
	(*CreateSubmissionInput)(nil),         // 2: eolymp.atlas.CreateSubmissionInput
	(*CreateSubmissionOutput)(nil),        // 3: eolymp.atlas.CreateSubmissionOutput
	(*DescribeSubmissionInput)(nil),       // 4: eolymp.atlas.DescribeSubmissionInput
	(*DescribeSubmissionOutput)(nil),      // 5: eolymp.atlas.DescribeSubmissionOutput
	(*WatchSubmissionInput)(nil),          // 6: eolymp.atlas.WatchSubmissionInput
	(*WatchSubmissionOutput)(nil),         // 7: eolymp.atlas.WatchSubmissionOutput
	(*RetestSubmissionInput)(nil),         // 8: eolymp.atlas.RetestSubmissionInput
	(*RetestSubmissionOutput)(nil),        // 9: eolymp.atlas.RetestSubmissionOutput
	(*ListSubmissionsInput)(nil),          // 10: eolymp.atlas.ListSubmissionsInput
	(*ListSubmissionsOutput)(nil),         // 11: eolymp.atlas.ListSubmissionsOutput
	(*DescribeSubmissionUsageInput)(nil),  // 12: eolymp.atlas.DescribeSubmissionUsageInput
	(*DescribeSubmissionUsageOutput)(nil), // 13: eolymp.atlas.DescribeSubmissionUsageOutput
	(*ListProblemTopInput)(nil),           // 14: eolymp.atlas.ListProblemTopInput
	(*ListProblemTopOutput)(nil),          // 15: eolymp.atlas.ListProblemTopOutput
	(*ListSubmissionsInput_Filter)(nil),   // 16: eolymp.atlas.ListSubmissionsInput.Filter
	(*Submission)(nil),                    // 17: eolymp.atlas.Submission
	(Submission_Extra)(0),                 // 18: eolymp.atlas.Submission.Extra
	(*timestamppb.Timestamp)(nil),         // 19: google.protobuf.Timestamp
	(*wellknown.ExpressionID)(nil),        // 20: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionTimestamp)(nil), // 21: eolymp.wellknown.ExpressionTimestamp
	(*wellknown.ExpressionEnum)(nil),      // 22: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionFloat)(nil),     // 23: eolymp.wellknown.ExpressionFloat
}
var file_eolymp_atlas_submission_service_proto_depIdxs = []int32{
	17, // 0: eolymp.atlas.SubmissionChangedEvent.before:type_name -> eolymp.atlas.Submission
	17, // 1: eolymp.atlas.SubmissionChangedEvent.after:type_name -> eolymp.atlas.Submission
	17, // 2: eolymp.atlas.SubmissionCompleteEvent.submission:type_name -> eolymp.atlas.Submission
	17, // 3: eolymp.atlas.DescribeSubmissionOutput.submission:type_name -> eolymp.atlas.Submission
	18, // 4: eolymp.atlas.DescribeSubmissionOutput.extra:type_name -> eolymp.atlas.Submission.Extra
	18, // 5: eolymp.atlas.WatchSubmissionInput.extra:type_name -> eolymp.atlas.Submission.Extra
	17, // 6: eolymp.atlas.WatchSubmissionOutput.submission:type_name -> eolymp.atlas.Submission
	16, // 7: eolymp.atlas.ListSubmissionsInput.filters:type_name -> eolymp.atlas.ListSubmissionsInput.Filter
	18, // 8: eolymp.atlas.ListSubmissionsInput.extra:type_name -> eolymp.atlas.Submission.Extra
	17, // 9: eolymp.atlas.ListSubmissionsOutput.items:type_name -> eolymp.atlas.Submission
	19, // 10: eolymp.atlas.DescribeSubmissionUsageInput.period_start:type_name -> google.protobuf.Timestamp
	19, // 11: eolymp.atlas.DescribeSubmissionUsageInput.period_end:type_name -> google.protobuf.Timestamp
	17, // 12: eolymp.atlas.ListProblemTopOutput.items:type_name -> eolymp.atlas.Submission
	20, // 13: eolymp.atlas.ListSubmissionsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	20, // 14: eolymp.atlas.ListSubmissionsInput.Filter.problem_id:type_name -> eolymp.wellknown.ExpressionID
	20, // 15: eolymp.atlas.ListSubmissionsInput.Filter.user_id:type_name -> eolymp.wellknown.ExpressionID
	20, // 16: eolymp.atlas.ListSubmissionsInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	21, // 17: eolymp.atlas.ListSubmissionsInput.Filter.submitted_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	22, // 18: eolymp.atlas.ListSubmissionsInput.Filter.runtime:type_name -> eolymp.wellknown.ExpressionEnum
	22, // 19: eolymp.atlas.ListSubmissionsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	22, // 20: eolymp.atlas.ListSubmissionsInput.Filter.verdict:type_name -> eolymp.wellknown.ExpressionEnum
	23, // 21: eolymp.atlas.ListSubmissionsInput.Filter.score:type_name -> eolymp.wellknown.ExpressionFloat
	23, // 22: eolymp.atlas.ListSubmissionsInput.Filter.percentage:type_name -> eolymp.wellknown.ExpressionFloat
	2,  // 23: eolymp.atlas.SubmissionService.CreateSubmission:input_type -> eolymp.atlas.CreateSubmissionInput
	8,  // 24: eolymp.atlas.SubmissionService.RetestSubmission:input_type -> eolymp.atlas.RetestSubmissionInput
	4,  // 25: eolymp.atlas.SubmissionService.DescribeSubmission:input_type -> eolymp.atlas.DescribeSubmissionInput
	6,  // 26: eolymp.atlas.SubmissionService.WatchSubmission:input_type -> eolymp.atlas.WatchSubmissionInput
	10, // 27: eolymp.atlas.SubmissionService.ListSubmissions:input_type -> eolymp.atlas.ListSubmissionsInput
	12, // 28: eolymp.atlas.SubmissionService.DescribeSubmissionUsage:input_type -> eolymp.atlas.DescribeSubmissionUsageInput
	14, // 29: eolymp.atlas.SubmissionService.ListProblemTop:input_type -> eolymp.atlas.ListProblemTopInput
	3,  // 30: eolymp.atlas.SubmissionService.CreateSubmission:output_type -> eolymp.atlas.CreateSubmissionOutput
	9,  // 31: eolymp.atlas.SubmissionService.RetestSubmission:output_type -> eolymp.atlas.RetestSubmissionOutput
	5,  // 32: eolymp.atlas.SubmissionService.DescribeSubmission:output_type -> eolymp.atlas.DescribeSubmissionOutput
	7,  // 33: eolymp.atlas.SubmissionService.WatchSubmission:output_type -> eolymp.atlas.WatchSubmissionOutput
	11, // 34: eolymp.atlas.SubmissionService.ListSubmissions:output_type -> eolymp.atlas.ListSubmissionsOutput
	13, // 35: eolymp.atlas.SubmissionService.DescribeSubmissionUsage:output_type -> eolymp.atlas.DescribeSubmissionUsageOutput
	15, // 36: eolymp.atlas.SubmissionService.ListProblemTop:output_type -> eolymp.atlas.ListProblemTopOutput
	30, // [30:37] is the sub-list for method output_type
	23, // [23:30] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_submission_service_proto_init() }
func file_eolymp_atlas_submission_service_proto_init() {
	if File_eolymp_atlas_submission_service_proto != nil {
		return
	}
	file_eolymp_atlas_submission_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_submission_service_proto_rawDesc), len(file_eolymp_atlas_submission_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_atlas_submission_service_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_submission_service_proto_depIdxs,
		MessageInfos:      file_eolymp_atlas_submission_service_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_submission_service_proto = out.File
	file_eolymp_atlas_submission_service_proto_goTypes = nil
	file_eolymp_atlas_submission_service_proto_depIdxs = nil
}
