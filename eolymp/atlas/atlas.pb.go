// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.2
// source: eolymp/atlas/atlas.proto

package atlas

import (
	_ "github.com/eolymp/contracts/go/eolymp/annotations"
	executor "github.com/eolymp/contracts/go/eolymp/executor"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListProblemsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListProblemsInput) Reset() {
	*x = ListProblemsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProblemsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsInput) ProtoMessage() {}

func (x *ListProblemsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsInput.ProtoReflect.Descriptor instead.
func (*ListProblemsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{0}
}

func (x *ListProblemsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListProblemsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListProblemsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Problem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListProblemsOutput) Reset() {
	*x = ListProblemsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProblemsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsOutput) ProtoMessage() {}

func (x *ListProblemsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsOutput.ProtoReflect.Descriptor instead.
func (*ListProblemsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{1}
}

func (x *ListProblemsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProblemsOutput) GetItems() []*Problem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateProblemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
}

func (x *CreateProblemInput) Reset() {
	*x = CreateProblemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemInput) ProtoMessage() {}

func (x *CreateProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemInput.ProtoReflect.Descriptor instead.
func (*CreateProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{2}
}

func (x *CreateProblemInput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type CreateProblemOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *CreateProblemOutput) Reset() {
	*x = CreateProblemOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemOutput) ProtoMessage() {}

func (x *CreateProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemOutput.ProtoReflect.Descriptor instead.
func (*CreateProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{3}
}

func (x *CreateProblemOutput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DeleteProblemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *DeleteProblemInput) Reset() {
	*x = DeleteProblemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemInput) ProtoMessage() {}

func (x *DeleteProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemInput.ProtoReflect.Descriptor instead.
func (*DeleteProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DeleteProblemOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProblemOutput) Reset() {
	*x = DeleteProblemOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemOutput) ProtoMessage() {}

func (x *DeleteProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemOutput.ProtoReflect.Descriptor instead.
func (*DeleteProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{5}
}

type DescribeProblemInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *DescribeProblemInput) Reset() {
	*x = DescribeProblemInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProblemInput) ProtoMessage() {}

func (x *DescribeProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProblemInput.ProtoReflect.Descriptor instead.
func (*DescribeProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DescribeProblemOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
}

func (x *DescribeProblemOutput) Reset() {
	*x = DescribeProblemOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProblemOutput) ProtoMessage() {}

func (x *DescribeProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProblemOutput.ProtoReflect.Descriptor instead.
func (*DescribeProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeProblemOutput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type ListStatementsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *ListStatementsInput) Reset() {
	*x = ListStatementsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStatementsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatementsInput) ProtoMessage() {}

func (x *ListStatementsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatementsInput.ProtoReflect.Descriptor instead.
func (*ListStatementsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{8}
}

func (x *ListStatementsInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListStatementsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Statement `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListStatementsOutput) Reset() {
	*x = ListStatementsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStatementsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatementsOutput) ProtoMessage() {}

func (x *ListStatementsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatementsOutput.ProtoReflect.Descriptor instead.
func (*ListStatementsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{9}
}

func (x *ListStatementsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStatementsOutput) GetItems() []*Statement {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeStatementInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatementId string `protobuf:"bytes,1,opt,name=statement_id,json=statementId,proto3" json:"statement_id,omitempty"`
}

func (x *DescribeStatementInput) Reset() {
	*x = DescribeStatementInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeStatementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeStatementInput) ProtoMessage() {}

func (x *DescribeStatementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeStatementInput.ProtoReflect.Descriptor instead.
func (*DescribeStatementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeStatementInput) GetStatementId() string {
	if x != nil {
		return x.StatementId
	}
	return ""
}

type DescribeStatementOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statement *Statement `protobuf:"bytes,1,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *DescribeStatementOutput) Reset() {
	*x = DescribeStatementOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeStatementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeStatementOutput) ProtoMessage() {}

func (x *DescribeStatementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeStatementOutput.ProtoReflect.Descriptor instead.
func (*DescribeStatementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeStatementOutput) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type CreateStatementInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string     `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Statement *Statement `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *CreateStatementInput) Reset() {
	*x = CreateStatementInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatementInput) ProtoMessage() {}

func (x *CreateStatementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatementInput.ProtoReflect.Descriptor instead.
func (*CreateStatementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{12}
}

func (x *CreateStatementInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CreateStatementInput) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type CreateStatementOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateStatementOutput) Reset() {
	*x = CreateStatementOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatementOutput) ProtoMessage() {}

func (x *CreateStatementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatementOutput.ProtoReflect.Descriptor instead.
func (*CreateStatementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{13}
}

func (x *CreateStatementOutput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateStatementInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatementId string     `protobuf:"bytes,1,opt,name=statement_id,json=statementId,proto3" json:"statement_id,omitempty"`
	Statement   *Statement `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *UpdateStatementInput) Reset() {
	*x = UpdateStatementInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatementInput) ProtoMessage() {}

func (x *UpdateStatementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatementInput.ProtoReflect.Descriptor instead.
func (*UpdateStatementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateStatementInput) GetStatementId() string {
	if x != nil {
		return x.StatementId
	}
	return ""
}

func (x *UpdateStatementInput) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type UpdateStatementOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatementOutput) Reset() {
	*x = UpdateStatementOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatementOutput) ProtoMessage() {}

func (x *UpdateStatementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatementOutput.ProtoReflect.Descriptor instead.
func (*UpdateStatementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{15}
}

type DeleteStatementInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatementId string `protobuf:"bytes,1,opt,name=statement_id,json=statementId,proto3" json:"statement_id,omitempty"`
}

func (x *DeleteStatementInput) Reset() {
	*x = DeleteStatementInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStatementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStatementInput) ProtoMessage() {}

func (x *DeleteStatementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStatementInput.ProtoReflect.Descriptor instead.
func (*DeleteStatementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteStatementInput) GetStatementId() string {
	if x != nil {
		return x.StatementId
	}
	return ""
}

type DeleteStatementOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStatementOutput) Reset() {
	*x = DeleteStatementOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStatementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStatementOutput) ProtoMessage() {}

func (x *DeleteStatementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStatementOutput.ProtoReflect.Descriptor instead.
func (*DeleteStatementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{17}
}

type UpdateVerifierInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string             `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Verifier  *executor.Verifier `protobuf:"bytes,2,opt,name=verifier,proto3" json:"verifier,omitempty"`
}

func (x *UpdateVerifierInput) Reset() {
	*x = UpdateVerifierInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerifierInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerifierInput) ProtoMessage() {}

func (x *UpdateVerifierInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerifierInput.ProtoReflect.Descriptor instead.
func (*UpdateVerifierInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateVerifierInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *UpdateVerifierInput) GetVerifier() *executor.Verifier {
	if x != nil {
		return x.Verifier
	}
	return nil
}

type UpdateVerifierOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateVerifierOutput) Reset() {
	*x = UpdateVerifierOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerifierOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerifierOutput) ProtoMessage() {}

func (x *UpdateVerifierOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerifierOutput.ProtoReflect.Descriptor instead.
func (*UpdateVerifierOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{19}
}

type DescribeVerifierInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *DescribeVerifierInput) Reset() {
	*x = DescribeVerifierInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVerifierInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVerifierInput) ProtoMessage() {}

func (x *DescribeVerifierInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVerifierInput.ProtoReflect.Descriptor instead.
func (*DescribeVerifierInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeVerifierInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DescribeVerifierOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verifier *executor.Verifier `protobuf:"bytes,1,opt,name=verifier,proto3" json:"verifier,omitempty"`
}

func (x *DescribeVerifierOutput) Reset() {
	*x = DescribeVerifierOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVerifierOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVerifierOutput) ProtoMessage() {}

func (x *DescribeVerifierOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVerifierOutput.ProtoReflect.Descriptor instead.
func (*DescribeVerifierOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{21}
}

func (x *DescribeVerifierOutput) GetVerifier() *executor.Verifier {
	if x != nil {
		return x.Verifier
	}
	return nil
}

type UpdateInteractorInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId  string               `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Interactor *executor.Interactor `protobuf:"bytes,2,opt,name=interactor,proto3" json:"interactor,omitempty"`
}

func (x *UpdateInteractorInput) Reset() {
	*x = UpdateInteractorInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInteractorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInteractorInput) ProtoMessage() {}

func (x *UpdateInteractorInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInteractorInput.ProtoReflect.Descriptor instead.
func (*UpdateInteractorInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateInteractorInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *UpdateInteractorInput) GetInteractor() *executor.Interactor {
	if x != nil {
		return x.Interactor
	}
	return nil
}

type UpdateInteractorOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInteractorOutput) Reset() {
	*x = UpdateInteractorOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInteractorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInteractorOutput) ProtoMessage() {}

func (x *UpdateInteractorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInteractorOutput.ProtoReflect.Descriptor instead.
func (*UpdateInteractorOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{23}
}

type DescribeInteractorInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *DescribeInteractorInput) Reset() {
	*x = DescribeInteractorInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeInteractorInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeInteractorInput) ProtoMessage() {}

func (x *DescribeInteractorInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeInteractorInput.ProtoReflect.Descriptor instead.
func (*DescribeInteractorInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{24}
}

func (x *DescribeInteractorInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DescribeInteractorOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interactor *executor.Interactor `protobuf:"bytes,1,opt,name=interactor,proto3" json:"interactor,omitempty"`
}

func (x *DescribeInteractorOutput) Reset() {
	*x = DescribeInteractorOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeInteractorOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeInteractorOutput) ProtoMessage() {}

func (x *DescribeInteractorOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeInteractorOutput.ProtoReflect.Descriptor instead.
func (*DescribeInteractorOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeInteractorOutput) GetInteractor() *executor.Interactor {
	if x != nil {
		return x.Interactor
	}
	return nil
}

type ListTestsetsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *ListTestsetsInput) Reset() {
	*x = ListTestsetsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestsetsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsetsInput) ProtoMessage() {}

func (x *ListTestsetsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsetsInput.ProtoReflect.Descriptor instead.
func (*ListTestsetsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{26}
}

func (x *ListTestsetsInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListTestsetsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Testset `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTestsetsOutput) Reset() {
	*x = ListTestsetsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestsetsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsetsOutput) ProtoMessage() {}

func (x *ListTestsetsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsetsOutput.ProtoReflect.Descriptor instead.
func (*ListTestsetsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{27}
}

func (x *ListTestsetsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTestsetsOutput) GetItems() []*Testset {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeTestsetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestsetId string `protobuf:"bytes,1,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
}

func (x *DescribeTestsetInput) Reset() {
	*x = DescribeTestsetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestsetInput) ProtoMessage() {}

func (x *DescribeTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestsetInput.ProtoReflect.Descriptor instead.
func (*DescribeTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{28}
}

func (x *DescribeTestsetInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

type DescribeTestsetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Testset *Testset `protobuf:"bytes,1,opt,name=testset,proto3" json:"testset,omitempty"`
}

func (x *DescribeTestsetOutput) Reset() {
	*x = DescribeTestsetOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestsetOutput) ProtoMessage() {}

func (x *DescribeTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestsetOutput.ProtoReflect.Descriptor instead.
func (*DescribeTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{29}
}

func (x *DescribeTestsetOutput) GetTestset() *Testset {
	if x != nil {
		return x.Testset
	}
	return nil
}

type CreateTestsetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string   `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Testset   *Testset `protobuf:"bytes,2,opt,name=testset,proto3" json:"testset,omitempty"`
}

func (x *CreateTestsetInput) Reset() {
	*x = CreateTestsetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestsetInput) ProtoMessage() {}

func (x *CreateTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestsetInput.ProtoReflect.Descriptor instead.
func (*CreateTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{30}
}

func (x *CreateTestsetInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CreateTestsetInput) GetTestset() *Testset {
	if x != nil {
		return x.Testset
	}
	return nil
}

type CreateTestsetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTestsetOutput) Reset() {
	*x = CreateTestsetOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestsetOutput) ProtoMessage() {}

func (x *CreateTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestsetOutput.ProtoReflect.Descriptor instead.
func (*CreateTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{31}
}

func (x *CreateTestsetOutput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateTestsetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestsetId string   `protobuf:"bytes,1,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Testset   *Testset `protobuf:"bytes,2,opt,name=testset,proto3" json:"testset,omitempty"`
}

func (x *UpdateTestsetInput) Reset() {
	*x = UpdateTestsetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestsetInput) ProtoMessage() {}

func (x *UpdateTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestsetInput.ProtoReflect.Descriptor instead.
func (*UpdateTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateTestsetInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *UpdateTestsetInput) GetTestset() *Testset {
	if x != nil {
		return x.Testset
	}
	return nil
}

type UpdateTestsetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTestsetOutput) Reset() {
	*x = UpdateTestsetOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestsetOutput) ProtoMessage() {}

func (x *UpdateTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestsetOutput.ProtoReflect.Descriptor instead.
func (*UpdateTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{33}
}

type DeleteTestsetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestsetId string `protobuf:"bytes,1,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
}

func (x *DeleteTestsetInput) Reset() {
	*x = DeleteTestsetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestsetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestsetInput) ProtoMessage() {}

func (x *DeleteTestsetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestsetInput.ProtoReflect.Descriptor instead.
func (*DeleteTestsetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteTestsetInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

type DeleteTestsetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTestsetOutput) Reset() {
	*x = DeleteTestsetOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestsetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestsetOutput) ProtoMessage() {}

func (x *DeleteTestsetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestsetOutput.ProtoReflect.Descriptor instead.
func (*DeleteTestsetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{35}
}

type ListExamplesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *ListExamplesInput) Reset() {
	*x = ListExamplesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExamplesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExamplesInput) ProtoMessage() {}

func (x *ListExamplesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExamplesInput.ProtoReflect.Descriptor instead.
func (*ListExamplesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{36}
}

func (x *ListExamplesInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListExamplesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examples []*Test `protobuf:"bytes,2,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *ListExamplesOutput) Reset() {
	*x = ListExamplesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExamplesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExamplesOutput) ProtoMessage() {}

func (x *ListExamplesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExamplesOutput.ProtoReflect.Descriptor instead.
func (*ListExamplesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{37}
}

func (x *ListExamplesOutput) GetExamples() []*Test {
	if x != nil {
		return x.Examples
	}
	return nil
}

type ListTestsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestsetId string `protobuf:"bytes,1,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
}

func (x *ListTestsInput) Reset() {
	*x = ListTestsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsInput) ProtoMessage() {}

func (x *ListTestsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsInput.ProtoReflect.Descriptor instead.
func (*ListTestsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{38}
}

func (x *ListTestsInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

type ListTestsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Test `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTestsOutput) Reset() {
	*x = ListTestsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTestsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTestsOutput) ProtoMessage() {}

func (x *ListTestsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTestsOutput.ProtoReflect.Descriptor instead.
func (*ListTestsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{39}
}

func (x *ListTestsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTestsOutput) GetItems() []*Test {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeTestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId string `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
}

func (x *DescribeTestInput) Reset() {
	*x = DescribeTestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestInput) ProtoMessage() {}

func (x *DescribeTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestInput.ProtoReflect.Descriptor instead.
func (*DescribeTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{40}
}

func (x *DescribeTestInput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

type DescribeTestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Test *Test `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *DescribeTestOutput) Reset() {
	*x = DescribeTestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTestOutput) ProtoMessage() {}

func (x *DescribeTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTestOutput.ProtoReflect.Descriptor instead.
func (*DescribeTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{41}
}

func (x *DescribeTestOutput) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

type CreateTestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestsetId string `protobuf:"bytes,1,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Test      *Test  `protobuf:"bytes,2,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *CreateTestInput) Reset() {
	*x = CreateTestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestInput) ProtoMessage() {}

func (x *CreateTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestInput.ProtoReflect.Descriptor instead.
func (*CreateTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{42}
}

func (x *CreateTestInput) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *CreateTestInput) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

type CreateTestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTestOutput) Reset() {
	*x = CreateTestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestOutput) ProtoMessage() {}

func (x *CreateTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestOutput.ProtoReflect.Descriptor instead.
func (*CreateTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{43}
}

func (x *CreateTestOutput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateTestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId string `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Test   *Test  `protobuf:"bytes,2,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *UpdateTestInput) Reset() {
	*x = UpdateTestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestInput) ProtoMessage() {}

func (x *UpdateTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestInput.ProtoReflect.Descriptor instead.
func (*UpdateTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateTestInput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *UpdateTestInput) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

type UpdateTestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTestOutput) Reset() {
	*x = UpdateTestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestOutput) ProtoMessage() {}

func (x *UpdateTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestOutput.ProtoReflect.Descriptor instead.
func (*UpdateTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{45}
}

type DeleteTestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId string `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
}

func (x *DeleteTestInput) Reset() {
	*x = DeleteTestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestInput) ProtoMessage() {}

func (x *DeleteTestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestInput.ProtoReflect.Descriptor instead.
func (*DeleteTestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteTestInput) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

type DeleteTestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTestOutput) Reset() {
	*x = DeleteTestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestOutput) ProtoMessage() {}

func (x *DeleteTestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestOutput.ProtoReflect.Descriptor instead.
func (*DeleteTestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{47}
}

type ListPermissionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *ListPermissionsInput) Reset() {
	*x = ListPermissionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsInput) ProtoMessage() {}

func (x *ListPermissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsInput.ProtoReflect.Descriptor instead.
func (*ListPermissionsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{48}
}

func (x *ListPermissionsInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListPermissionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Permission `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPermissionsOutput) Reset() {
	*x = ListPermissionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsOutput) ProtoMessage() {}

func (x *ListPermissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsOutput.ProtoReflect.Descriptor instead.
func (*ListPermissionsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{49}
}

func (x *ListPermissionsOutput) GetItems() []*Permission {
	if x != nil {
		return x.Items
	}
	return nil
}

type GrantPermissionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId  string      `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Permission *Permission `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *GrantPermissionInput) Reset() {
	*x = GrantPermissionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantPermissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantPermissionInput) ProtoMessage() {}

func (x *GrantPermissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantPermissionInput.ProtoReflect.Descriptor instead.
func (*GrantPermissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{50}
}

func (x *GrantPermissionInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *GrantPermissionInput) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type GrantPermissionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GrantPermissionOutput) Reset() {
	*x = GrantPermissionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantPermissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantPermissionOutput) ProtoMessage() {}

func (x *GrantPermissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantPermissionOutput.ProtoReflect.Descriptor instead.
func (*GrantPermissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{51}
}

type RevokePermissionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RevokePermissionInput) Reset() {
	*x = RevokePermissionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokePermissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePermissionInput) ProtoMessage() {}

func (x *RevokePermissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePermissionInput.ProtoReflect.Descriptor instead.
func (*RevokePermissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{52}
}

func (x *RevokePermissionInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *RevokePermissionInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RevokePermissionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokePermissionOutput) Reset() {
	*x = RevokePermissionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokePermissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePermissionOutput) ProtoMessage() {}

func (x *RevokePermissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePermissionOutput.ProtoReflect.Descriptor instead.
func (*RevokePermissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{53}
}

type CreateCodeTemplateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string    `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Template  *Template `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *CreateCodeTemplateInput) Reset() {
	*x = CreateCodeTemplateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCodeTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCodeTemplateInput) ProtoMessage() {}

func (x *CreateCodeTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCodeTemplateInput.ProtoReflect.Descriptor instead.
func (*CreateCodeTemplateInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{54}
}

func (x *CreateCodeTemplateInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CreateCodeTemplateInput) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

type CreateCodeTemplateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
}

func (x *CreateCodeTemplateOutput) Reset() {
	*x = CreateCodeTemplateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCodeTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCodeTemplateOutput) ProtoMessage() {}

func (x *CreateCodeTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCodeTemplateOutput.ProtoReflect.Descriptor instead.
func (*CreateCodeTemplateOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{55}
}

func (x *CreateCodeTemplateOutput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type UpdateCodeTemplateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string    `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Template   *Template `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *UpdateCodeTemplateInput) Reset() {
	*x = UpdateCodeTemplateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCodeTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCodeTemplateInput) ProtoMessage() {}

func (x *UpdateCodeTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCodeTemplateInput.ProtoReflect.Descriptor instead.
func (*UpdateCodeTemplateInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateCodeTemplateInput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdateCodeTemplateInput) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

type UpdateCodeTemplateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCodeTemplateOutput) Reset() {
	*x = UpdateCodeTemplateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCodeTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCodeTemplateOutput) ProtoMessage() {}

func (x *UpdateCodeTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCodeTemplateOutput.ProtoReflect.Descriptor instead.
func (*UpdateCodeTemplateOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{57}
}

type DeleteCodeTemplateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
}

func (x *DeleteCodeTemplateInput) Reset() {
	*x = DeleteCodeTemplateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCodeTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCodeTemplateInput) ProtoMessage() {}

func (x *DeleteCodeTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCodeTemplateInput.ProtoReflect.Descriptor instead.
func (*DeleteCodeTemplateInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteCodeTemplateInput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type DeleteCodeTemplateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCodeTemplateOutput) Reset() {
	*x = DeleteCodeTemplateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCodeTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCodeTemplateOutput) ProtoMessage() {}

func (x *DeleteCodeTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCodeTemplateOutput.ProtoReflect.Descriptor instead.
func (*DeleteCodeTemplateOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{59}
}

type ListCodeTemplatesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId string `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *ListCodeTemplatesInput) Reset() {
	*x = ListCodeTemplatesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCodeTemplatesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCodeTemplatesInput) ProtoMessage() {}

func (x *ListCodeTemplatesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCodeTemplatesInput.ProtoReflect.Descriptor instead.
func (*ListCodeTemplatesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{60}
}

func (x *ListCodeTemplatesInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListCodeTemplatesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Template `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListCodeTemplatesOutput) Reset() {
	*x = ListCodeTemplatesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCodeTemplatesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCodeTemplatesOutput) ProtoMessage() {}

func (x *ListCodeTemplatesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCodeTemplatesOutput.ProtoReflect.Descriptor instead.
func (*ListCodeTemplatesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{61}
}

func (x *ListCodeTemplatesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCodeTemplatesOutput) GetItems() []*Template {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeCodeTemplateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
}

func (x *DescribeCodeTemplateInput) Reset() {
	*x = DescribeCodeTemplateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCodeTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCodeTemplateInput) ProtoMessage() {}

func (x *DescribeCodeTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCodeTemplateInput.ProtoReflect.Descriptor instead.
func (*DescribeCodeTemplateInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{62}
}

func (x *DescribeCodeTemplateInput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type DescribeCodeTemplateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template *Template `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *DescribeCodeTemplateOutput) Reset() {
	*x = DescribeCodeTemplateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_atlas_atlas_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCodeTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCodeTemplateOutput) ProtoMessage() {}

func (x *DescribeCodeTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_atlas_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCodeTemplateOutput.ProtoReflect.Descriptor instead.
func (*DescribeCodeTemplateOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_atlas_proto_rawDescGZIP(), []int{63}
}

func (x *DescribeCodeTemplateOutput) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

var File_eolymp_atlas_atlas_proto protoreflect.FileDescriptor

var file_eolymp_atlas_atlas_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x33, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x34, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x5b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x3b, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x17,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6c,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x27, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x39, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x6b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x36, 0x0a, 0x15, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x22, 0x4f, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0x73, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x38, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x18, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x32, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x07, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x22, 0x64, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52,
	0x07, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x64, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x52, 0x07, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x65, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x33, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x22, 0x2f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65,
	0x73, 0x74, 0x22, 0x58, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x52, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x74, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6f, 0x0a, 0x14, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x4f, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x6c, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x3a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x37, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x3c, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x50, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x32, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x32, 0xb4, 0x2d, 0x0a, 0x05, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x12, 0xa1,
	0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4b, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a,
	0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x10, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x3a, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x12, 0xa4, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0x82, 0xe3, 0x0a, 0x17, 0x8a,
	0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23,
	0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x2a, 0x1c, 0x2f, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x94, 0x01, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x41, 0x82,
	0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10,
	0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f,
	0x12, 0xb2, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x56, 0x82,
	0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x1c,
	0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x62, 0x07, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0xaa, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x57, 0x82, 0xe3, 0x0a, 0x16, 0x8a,
	0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41,
	0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2f, 0x12, 0xba, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x61, 0x82, 0xe3,
	0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x1a, 0x25,
	0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x3a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0xc0, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x61, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x31, 0x12, 0x25, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x62, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0xc4, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x65, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x35, 0x1a, 0x27, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x3a, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0xca, 0x01, 0x0a, 0x12, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x65, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x35, 0x12, 0x27, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0xc1, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x65, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x35, 0x1a, 0x28, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x3a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xb9, 0x01, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5d, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a,
	0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77,
	0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8,
	0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x20, 0x2f, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xae, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x52, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb2, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x59, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x12, 0xbe, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x5c, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d,
	0x12, 0x20, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x62, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xb7, 0x01,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12,
	0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x61, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74,
	0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x22, 0x26, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x3a, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0xad, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x57,
	0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27,
	0x1a, 0x1c, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x73, 0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0xa4, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e,
	0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x2a, 0x1c, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x73, 0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xab,
	0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x58, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x12, 0xb3, 0x01, 0x0a,
	0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x57, 0x82, 0xe3, 0x0a, 0x17, 0x8a,
	0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80,
	0x3f, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x1c, 0x2f, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x62, 0x07, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x12, 0xa7, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x5a, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x3a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x9b, 0x01, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0x82, 0xe3, 0x0a, 0x17,
	0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a, 0x16, 0x2f, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x95, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x48, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3,
	0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a,
	0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e,
	0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x54, 0x82,
	0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2,
	0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12,
	0x22, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x73,
	0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a,
	0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77,
	0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8,
	0xe2, 0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x16, 0x2f, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x62, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0xc5, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x69, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x3a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x77,
	0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8,
	0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x22, 0x28, 0x2f, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x3a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0xc6, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x67, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x2a, 0x32, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb8, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5c, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8,
	0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x62, 0x82, 0xe3, 0x0a, 0x17, 0x8a,
	0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23,
	0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x26, 0x2f, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x3a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xbf, 0x01,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x5a, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0xb5, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x50, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a,
	0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xba, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0x82, 0xe3, 0x0a, 0x16,
	0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0xc4, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x59, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x12, 0x1e, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x62, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3b, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_atlas_atlas_proto_rawDescOnce sync.Once
	file_eolymp_atlas_atlas_proto_rawDescData = file_eolymp_atlas_atlas_proto_rawDesc
)

func file_eolymp_atlas_atlas_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_atlas_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_atlas_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_atlas_atlas_proto_rawDescData)
	})
	return file_eolymp_atlas_atlas_proto_rawDescData
}

var file_eolymp_atlas_atlas_proto_msgTypes = make([]protoimpl.MessageInfo, 64)
var file_eolymp_atlas_atlas_proto_goTypes = []interface{}{
	(*ListProblemsInput)(nil),          // 0: eolymp.atlas.ListProblemsInput
	(*ListProblemsOutput)(nil),         // 1: eolymp.atlas.ListProblemsOutput
	(*CreateProblemInput)(nil),         // 2: eolymp.atlas.CreateProblemInput
	(*CreateProblemOutput)(nil),        // 3: eolymp.atlas.CreateProblemOutput
	(*DeleteProblemInput)(nil),         // 4: eolymp.atlas.DeleteProblemInput
	(*DeleteProblemOutput)(nil),        // 5: eolymp.atlas.DeleteProblemOutput
	(*DescribeProblemInput)(nil),       // 6: eolymp.atlas.DescribeProblemInput
	(*DescribeProblemOutput)(nil),      // 7: eolymp.atlas.DescribeProblemOutput
	(*ListStatementsInput)(nil),        // 8: eolymp.atlas.ListStatementsInput
	(*ListStatementsOutput)(nil),       // 9: eolymp.atlas.ListStatementsOutput
	(*DescribeStatementInput)(nil),     // 10: eolymp.atlas.DescribeStatementInput
	(*DescribeStatementOutput)(nil),    // 11: eolymp.atlas.DescribeStatementOutput
	(*CreateStatementInput)(nil),       // 12: eolymp.atlas.CreateStatementInput
	(*CreateStatementOutput)(nil),      // 13: eolymp.atlas.CreateStatementOutput
	(*UpdateStatementInput)(nil),       // 14: eolymp.atlas.UpdateStatementInput
	(*UpdateStatementOutput)(nil),      // 15: eolymp.atlas.UpdateStatementOutput
	(*DeleteStatementInput)(nil),       // 16: eolymp.atlas.DeleteStatementInput
	(*DeleteStatementOutput)(nil),      // 17: eolymp.atlas.DeleteStatementOutput
	(*UpdateVerifierInput)(nil),        // 18: eolymp.atlas.UpdateVerifierInput
	(*UpdateVerifierOutput)(nil),       // 19: eolymp.atlas.UpdateVerifierOutput
	(*DescribeVerifierInput)(nil),      // 20: eolymp.atlas.DescribeVerifierInput
	(*DescribeVerifierOutput)(nil),     // 21: eolymp.atlas.DescribeVerifierOutput
	(*UpdateInteractorInput)(nil),      // 22: eolymp.atlas.UpdateInteractorInput
	(*UpdateInteractorOutput)(nil),     // 23: eolymp.atlas.UpdateInteractorOutput
	(*DescribeInteractorInput)(nil),    // 24: eolymp.atlas.DescribeInteractorInput
	(*DescribeInteractorOutput)(nil),   // 25: eolymp.atlas.DescribeInteractorOutput
	(*ListTestsetsInput)(nil),          // 26: eolymp.atlas.ListTestsetsInput
	(*ListTestsetsOutput)(nil),         // 27: eolymp.atlas.ListTestsetsOutput
	(*DescribeTestsetInput)(nil),       // 28: eolymp.atlas.DescribeTestsetInput
	(*DescribeTestsetOutput)(nil),      // 29: eolymp.atlas.DescribeTestsetOutput
	(*CreateTestsetInput)(nil),         // 30: eolymp.atlas.CreateTestsetInput
	(*CreateTestsetOutput)(nil),        // 31: eolymp.atlas.CreateTestsetOutput
	(*UpdateTestsetInput)(nil),         // 32: eolymp.atlas.UpdateTestsetInput
	(*UpdateTestsetOutput)(nil),        // 33: eolymp.atlas.UpdateTestsetOutput
	(*DeleteTestsetInput)(nil),         // 34: eolymp.atlas.DeleteTestsetInput
	(*DeleteTestsetOutput)(nil),        // 35: eolymp.atlas.DeleteTestsetOutput
	(*ListExamplesInput)(nil),          // 36: eolymp.atlas.ListExamplesInput
	(*ListExamplesOutput)(nil),         // 37: eolymp.atlas.ListExamplesOutput
	(*ListTestsInput)(nil),             // 38: eolymp.atlas.ListTestsInput
	(*ListTestsOutput)(nil),            // 39: eolymp.atlas.ListTestsOutput
	(*DescribeTestInput)(nil),          // 40: eolymp.atlas.DescribeTestInput
	(*DescribeTestOutput)(nil),         // 41: eolymp.atlas.DescribeTestOutput
	(*CreateTestInput)(nil),            // 42: eolymp.atlas.CreateTestInput
	(*CreateTestOutput)(nil),           // 43: eolymp.atlas.CreateTestOutput
	(*UpdateTestInput)(nil),            // 44: eolymp.atlas.UpdateTestInput
	(*UpdateTestOutput)(nil),           // 45: eolymp.atlas.UpdateTestOutput
	(*DeleteTestInput)(nil),            // 46: eolymp.atlas.DeleteTestInput
	(*DeleteTestOutput)(nil),           // 47: eolymp.atlas.DeleteTestOutput
	(*ListPermissionsInput)(nil),       // 48: eolymp.atlas.ListPermissionsInput
	(*ListPermissionsOutput)(nil),      // 49: eolymp.atlas.ListPermissionsOutput
	(*GrantPermissionInput)(nil),       // 50: eolymp.atlas.GrantPermissionInput
	(*GrantPermissionOutput)(nil),      // 51: eolymp.atlas.GrantPermissionOutput
	(*RevokePermissionInput)(nil),      // 52: eolymp.atlas.RevokePermissionInput
	(*RevokePermissionOutput)(nil),     // 53: eolymp.atlas.RevokePermissionOutput
	(*CreateCodeTemplateInput)(nil),    // 54: eolymp.atlas.CreateCodeTemplateInput
	(*CreateCodeTemplateOutput)(nil),   // 55: eolymp.atlas.CreateCodeTemplateOutput
	(*UpdateCodeTemplateInput)(nil),    // 56: eolymp.atlas.UpdateCodeTemplateInput
	(*UpdateCodeTemplateOutput)(nil),   // 57: eolymp.atlas.UpdateCodeTemplateOutput
	(*DeleteCodeTemplateInput)(nil),    // 58: eolymp.atlas.DeleteCodeTemplateInput
	(*DeleteCodeTemplateOutput)(nil),   // 59: eolymp.atlas.DeleteCodeTemplateOutput
	(*ListCodeTemplatesInput)(nil),     // 60: eolymp.atlas.ListCodeTemplatesInput
	(*ListCodeTemplatesOutput)(nil),    // 61: eolymp.atlas.ListCodeTemplatesOutput
	(*DescribeCodeTemplateInput)(nil),  // 62: eolymp.atlas.DescribeCodeTemplateInput
	(*DescribeCodeTemplateOutput)(nil), // 63: eolymp.atlas.DescribeCodeTemplateOutput
	(*Problem)(nil),                    // 64: eolymp.atlas.Problem
	(*Statement)(nil),                  // 65: eolymp.atlas.Statement
	(*executor.Verifier)(nil),          // 66: eolymp.executor.Verifier
	(*executor.Interactor)(nil),        // 67: eolymp.executor.Interactor
	(*Testset)(nil),                    // 68: eolymp.atlas.Testset
	(*Test)(nil),                       // 69: eolymp.atlas.Test
	(*Permission)(nil),                 // 70: eolymp.atlas.Permission
	(*Template)(nil),                   // 71: eolymp.atlas.Template
}
var file_eolymp_atlas_atlas_proto_depIdxs = []int32{
	64, // 0: eolymp.atlas.ListProblemsOutput.items:type_name -> eolymp.atlas.Problem
	64, // 1: eolymp.atlas.CreateProblemInput.problem:type_name -> eolymp.atlas.Problem
	64, // 2: eolymp.atlas.DescribeProblemOutput.problem:type_name -> eolymp.atlas.Problem
	65, // 3: eolymp.atlas.ListStatementsOutput.items:type_name -> eolymp.atlas.Statement
	65, // 4: eolymp.atlas.DescribeStatementOutput.statement:type_name -> eolymp.atlas.Statement
	65, // 5: eolymp.atlas.CreateStatementInput.statement:type_name -> eolymp.atlas.Statement
	65, // 6: eolymp.atlas.UpdateStatementInput.statement:type_name -> eolymp.atlas.Statement
	66, // 7: eolymp.atlas.UpdateVerifierInput.verifier:type_name -> eolymp.executor.Verifier
	66, // 8: eolymp.atlas.DescribeVerifierOutput.verifier:type_name -> eolymp.executor.Verifier
	67, // 9: eolymp.atlas.UpdateInteractorInput.interactor:type_name -> eolymp.executor.Interactor
	67, // 10: eolymp.atlas.DescribeInteractorOutput.interactor:type_name -> eolymp.executor.Interactor
	68, // 11: eolymp.atlas.ListTestsetsOutput.items:type_name -> eolymp.atlas.Testset
	68, // 12: eolymp.atlas.DescribeTestsetOutput.testset:type_name -> eolymp.atlas.Testset
	68, // 13: eolymp.atlas.CreateTestsetInput.testset:type_name -> eolymp.atlas.Testset
	68, // 14: eolymp.atlas.UpdateTestsetInput.testset:type_name -> eolymp.atlas.Testset
	69, // 15: eolymp.atlas.ListExamplesOutput.examples:type_name -> eolymp.atlas.Test
	69, // 16: eolymp.atlas.ListTestsOutput.items:type_name -> eolymp.atlas.Test
	69, // 17: eolymp.atlas.DescribeTestOutput.test:type_name -> eolymp.atlas.Test
	69, // 18: eolymp.atlas.CreateTestInput.test:type_name -> eolymp.atlas.Test
	69, // 19: eolymp.atlas.UpdateTestInput.test:type_name -> eolymp.atlas.Test
	70, // 20: eolymp.atlas.ListPermissionsOutput.items:type_name -> eolymp.atlas.Permission
	70, // 21: eolymp.atlas.GrantPermissionInput.permission:type_name -> eolymp.atlas.Permission
	71, // 22: eolymp.atlas.CreateCodeTemplateInput.template:type_name -> eolymp.atlas.Template
	71, // 23: eolymp.atlas.UpdateCodeTemplateInput.template:type_name -> eolymp.atlas.Template
	71, // 24: eolymp.atlas.ListCodeTemplatesOutput.items:type_name -> eolymp.atlas.Template
	71, // 25: eolymp.atlas.DescribeCodeTemplateOutput.template:type_name -> eolymp.atlas.Template
	2,  // 26: eolymp.atlas.Atlas.CreateProblem:input_type -> eolymp.atlas.CreateProblemInput
	4,  // 27: eolymp.atlas.Atlas.DeleteProblem:input_type -> eolymp.atlas.DeleteProblemInput
	0,  // 28: eolymp.atlas.Atlas.ListProblems:input_type -> eolymp.atlas.ListProblemsInput
	6,  // 29: eolymp.atlas.Atlas.DescribeProblem:input_type -> eolymp.atlas.DescribeProblemInput
	36, // 30: eolymp.atlas.Atlas.ListExamples:input_type -> eolymp.atlas.ListExamplesInput
	18, // 31: eolymp.atlas.Atlas.UpdateVerifier:input_type -> eolymp.atlas.UpdateVerifierInput
	20, // 32: eolymp.atlas.Atlas.DescribeVerifier:input_type -> eolymp.atlas.DescribeVerifierInput
	22, // 33: eolymp.atlas.Atlas.UpdateInteractor:input_type -> eolymp.atlas.UpdateInteractorInput
	24, // 34: eolymp.atlas.Atlas.DescribeInteractor:input_type -> eolymp.atlas.DescribeInteractorInput
	12, // 35: eolymp.atlas.Atlas.CreateStatement:input_type -> eolymp.atlas.CreateStatementInput
	14, // 36: eolymp.atlas.Atlas.UpdateStatement:input_type -> eolymp.atlas.UpdateStatementInput
	16, // 37: eolymp.atlas.Atlas.DeleteStatement:input_type -> eolymp.atlas.DeleteStatementInput
	8,  // 38: eolymp.atlas.Atlas.ListStatements:input_type -> eolymp.atlas.ListStatementsInput
	10, // 39: eolymp.atlas.Atlas.DescribeStatement:input_type -> eolymp.atlas.DescribeStatementInput
	30, // 40: eolymp.atlas.Atlas.CreateTestset:input_type -> eolymp.atlas.CreateTestsetInput
	32, // 41: eolymp.atlas.Atlas.UpdateTestset:input_type -> eolymp.atlas.UpdateTestsetInput
	34, // 42: eolymp.atlas.Atlas.DeleteTestset:input_type -> eolymp.atlas.DeleteTestsetInput
	26, // 43: eolymp.atlas.Atlas.ListTestsets:input_type -> eolymp.atlas.ListTestsetsInput
	28, // 44: eolymp.atlas.Atlas.DescribeTestset:input_type -> eolymp.atlas.DescribeTestsetInput
	42, // 45: eolymp.atlas.Atlas.CreateTest:input_type -> eolymp.atlas.CreateTestInput
	44, // 46: eolymp.atlas.Atlas.UpdateTest:input_type -> eolymp.atlas.UpdateTestInput
	46, // 47: eolymp.atlas.Atlas.DeleteTest:input_type -> eolymp.atlas.DeleteTestInput
	38, // 48: eolymp.atlas.Atlas.ListTests:input_type -> eolymp.atlas.ListTestsInput
	40, // 49: eolymp.atlas.Atlas.DescribeTest:input_type -> eolymp.atlas.DescribeTestInput
	50, // 50: eolymp.atlas.Atlas.GrantPermission:input_type -> eolymp.atlas.GrantPermissionInput
	52, // 51: eolymp.atlas.Atlas.RevokePermission:input_type -> eolymp.atlas.RevokePermissionInput
	48, // 52: eolymp.atlas.Atlas.ListPermissions:input_type -> eolymp.atlas.ListPermissionsInput
	54, // 53: eolymp.atlas.Atlas.CreateCodeTemplate:input_type -> eolymp.atlas.CreateCodeTemplateInput
	56, // 54: eolymp.atlas.Atlas.UpdateCodeTemplate:input_type -> eolymp.atlas.UpdateCodeTemplateInput
	58, // 55: eolymp.atlas.Atlas.DeleteCodeTemplate:input_type -> eolymp.atlas.DeleteCodeTemplateInput
	60, // 56: eolymp.atlas.Atlas.ListCodeTemplates:input_type -> eolymp.atlas.ListCodeTemplatesInput
	62, // 57: eolymp.atlas.Atlas.DescribeCodeTemplate:input_type -> eolymp.atlas.DescribeCodeTemplateInput
	3,  // 58: eolymp.atlas.Atlas.CreateProblem:output_type -> eolymp.atlas.CreateProblemOutput
	5,  // 59: eolymp.atlas.Atlas.DeleteProblem:output_type -> eolymp.atlas.DeleteProblemOutput
	1,  // 60: eolymp.atlas.Atlas.ListProblems:output_type -> eolymp.atlas.ListProblemsOutput
	7,  // 61: eolymp.atlas.Atlas.DescribeProblem:output_type -> eolymp.atlas.DescribeProblemOutput
	37, // 62: eolymp.atlas.Atlas.ListExamples:output_type -> eolymp.atlas.ListExamplesOutput
	19, // 63: eolymp.atlas.Atlas.UpdateVerifier:output_type -> eolymp.atlas.UpdateVerifierOutput
	21, // 64: eolymp.atlas.Atlas.DescribeVerifier:output_type -> eolymp.atlas.DescribeVerifierOutput
	23, // 65: eolymp.atlas.Atlas.UpdateInteractor:output_type -> eolymp.atlas.UpdateInteractorOutput
	25, // 66: eolymp.atlas.Atlas.DescribeInteractor:output_type -> eolymp.atlas.DescribeInteractorOutput
	13, // 67: eolymp.atlas.Atlas.CreateStatement:output_type -> eolymp.atlas.CreateStatementOutput
	15, // 68: eolymp.atlas.Atlas.UpdateStatement:output_type -> eolymp.atlas.UpdateStatementOutput
	17, // 69: eolymp.atlas.Atlas.DeleteStatement:output_type -> eolymp.atlas.DeleteStatementOutput
	9,  // 70: eolymp.atlas.Atlas.ListStatements:output_type -> eolymp.atlas.ListStatementsOutput
	11, // 71: eolymp.atlas.Atlas.DescribeStatement:output_type -> eolymp.atlas.DescribeStatementOutput
	31, // 72: eolymp.atlas.Atlas.CreateTestset:output_type -> eolymp.atlas.CreateTestsetOutput
	33, // 73: eolymp.atlas.Atlas.UpdateTestset:output_type -> eolymp.atlas.UpdateTestsetOutput
	35, // 74: eolymp.atlas.Atlas.DeleteTestset:output_type -> eolymp.atlas.DeleteTestsetOutput
	27, // 75: eolymp.atlas.Atlas.ListTestsets:output_type -> eolymp.atlas.ListTestsetsOutput
	29, // 76: eolymp.atlas.Atlas.DescribeTestset:output_type -> eolymp.atlas.DescribeTestsetOutput
	43, // 77: eolymp.atlas.Atlas.CreateTest:output_type -> eolymp.atlas.CreateTestOutput
	45, // 78: eolymp.atlas.Atlas.UpdateTest:output_type -> eolymp.atlas.UpdateTestOutput
	47, // 79: eolymp.atlas.Atlas.DeleteTest:output_type -> eolymp.atlas.DeleteTestOutput
	39, // 80: eolymp.atlas.Atlas.ListTests:output_type -> eolymp.atlas.ListTestsOutput
	41, // 81: eolymp.atlas.Atlas.DescribeTest:output_type -> eolymp.atlas.DescribeTestOutput
	51, // 82: eolymp.atlas.Atlas.GrantPermission:output_type -> eolymp.atlas.GrantPermissionOutput
	53, // 83: eolymp.atlas.Atlas.RevokePermission:output_type -> eolymp.atlas.RevokePermissionOutput
	49, // 84: eolymp.atlas.Atlas.ListPermissions:output_type -> eolymp.atlas.ListPermissionsOutput
	55, // 85: eolymp.atlas.Atlas.CreateCodeTemplate:output_type -> eolymp.atlas.CreateCodeTemplateOutput
	57, // 86: eolymp.atlas.Atlas.UpdateCodeTemplate:output_type -> eolymp.atlas.UpdateCodeTemplateOutput
	59, // 87: eolymp.atlas.Atlas.DeleteCodeTemplate:output_type -> eolymp.atlas.DeleteCodeTemplateOutput
	61, // 88: eolymp.atlas.Atlas.ListCodeTemplates:output_type -> eolymp.atlas.ListCodeTemplatesOutput
	63, // 89: eolymp.atlas.Atlas.DescribeCodeTemplate:output_type -> eolymp.atlas.DescribeCodeTemplateOutput
	58, // [58:90] is the sub-list for method output_type
	26, // [26:58] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_atlas_proto_init() }
func file_eolymp_atlas_atlas_proto_init() {
	if File_eolymp_atlas_atlas_proto != nil {
		return
	}
	file_eolymp_atlas_permission_proto_init()
	file_eolymp_atlas_problem_proto_init()
	file_eolymp_atlas_statement_proto_init()
	file_eolymp_atlas_test_proto_init()
	file_eolymp_atlas_testset_proto_init()
	file_eolymp_atlas_template_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_atlas_atlas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProblemsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProblemsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProblemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProblemOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProblemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProblemOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeProblemInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeProblemOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStatementsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStatementsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeStatementInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeStatementOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatementInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatementOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatementInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatementOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStatementInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStatementOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerifierInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerifierOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVerifierInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVerifierOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInteractorInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInteractorOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeInteractorInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeInteractorOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestsetsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestsetsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTestsetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTestsetOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestsetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestsetOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestsetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestsetOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestsetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestsetOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExamplesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExamplesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTestsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantPermissionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantPermissionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokePermissionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokePermissionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCodeTemplateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCodeTemplateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCodeTemplateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCodeTemplateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCodeTemplateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCodeTemplateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCodeTemplatesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCodeTemplatesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCodeTemplateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_atlas_atlas_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCodeTemplateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_atlas_atlas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   64,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_atlas_atlas_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_atlas_proto_depIdxs,
		MessageInfos:      file_eolymp_atlas_atlas_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_atlas_proto = out.File
	file_eolymp_atlas_atlas_proto_rawDesc = nil
	file_eolymp_atlas_atlas_proto_goTypes = nil
	file_eolymp_atlas_atlas_proto_depIdxs = nil
}
