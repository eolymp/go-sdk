// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/atlas/problem_service.proto

package atlas

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	runtime "github.com/eolymp/go-sdk/eolymp/runtime"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListProblemsInput_Sortable int32

const (
	ListProblemsInput_DEFAULT ListProblemsInput_Sortable = 0
	ListProblemsInput_RECENT  ListProblemsInput_Sortable = 1
	ListProblemsInput_POPULAR ListProblemsInput_Sortable = 2
)

// Enum value maps for ListProblemsInput_Sortable.
var (
	ListProblemsInput_Sortable_name = map[int32]string{
		0: "DEFAULT",
		1: "RECENT",
		2: "POPULAR",
	}
	ListProblemsInput_Sortable_value = map[string]int32{
		"DEFAULT": 0,
		"RECENT":  1,
		"POPULAR": 2,
	}
)

func (x ListProblemsInput_Sortable) Enum() *ListProblemsInput_Sortable {
	p := new(ListProblemsInput_Sortable)
	*p = x
	return p
}

func (x ListProblemsInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListProblemsInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_atlas_problem_service_proto_enumTypes[0].Descriptor()
}

func (ListProblemsInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_atlas_problem_service_proto_enumTypes[0]
}

func (x ListProblemsInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListProblemsInput_Sortable.Descriptor instead.
func (ListProblemsInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{7, 0}
}

type UpdateProblemInput_Patch int32

const (
	UpdateProblemInput_ALL        UpdateProblemInput_Patch = 0
	UpdateProblemInput_VISIBLE    UpdateProblemInput_Patch = 1
	UpdateProblemInput_PRIVATE    UpdateProblemInput_Patch = 2
	UpdateProblemInput_TOPICS     UpdateProblemInput_Patch = 3
	UpdateProblemInput_DIFFICULTY UpdateProblemInput_Patch = 4
	UpdateProblemInput_ORIGIN     UpdateProblemInput_Patch = 5
	UpdateProblemInput_TYPE       UpdateProblemInput_Patch = 6
	UpdateProblemInput_NUMBER     UpdateProblemInput_Patch = 7
)

// Enum value maps for UpdateProblemInput_Patch.
var (
	UpdateProblemInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "VISIBLE",
		2: "PRIVATE",
		3: "TOPICS",
		4: "DIFFICULTY",
		5: "ORIGIN",
		6: "TYPE",
		7: "NUMBER",
	}
	UpdateProblemInput_Patch_value = map[string]int32{
		"ALL":        0,
		"VISIBLE":    1,
		"PRIVATE":    2,
		"TOPICS":     3,
		"DIFFICULTY": 4,
		"ORIGIN":     5,
		"TYPE":       6,
		"NUMBER":     7,
	}
)

func (x UpdateProblemInput_Patch) Enum() *UpdateProblemInput_Patch {
	p := new(UpdateProblemInput_Patch)
	*p = x
	return p
}

func (x UpdateProblemInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateProblemInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_atlas_problem_service_proto_enumTypes[1].Descriptor()
}

func (UpdateProblemInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_atlas_problem_service_proto_enumTypes[1]
}

func (x UpdateProblemInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateProblemInput_Patch.Descriptor instead.
func (UpdateProblemInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{13, 0}
}

type ProblemChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Before        *Problem               `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *Problem               `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	Version       *Version               `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProblemChangedEvent) Reset() {
	*x = ProblemChangedEvent{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProblemChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemChangedEvent) ProtoMessage() {}

func (x *ProblemChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemChangedEvent.ProtoReflect.Descriptor instead.
func (*ProblemChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProblemChangedEvent) GetBefore() *Problem {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ProblemChangedEvent) GetAfter() *Problem {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *ProblemChangedEvent) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type CreateProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Problem       *Problem               `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	Statement     *Statement             `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProblemInput) Reset() {
	*x = CreateProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemInput) ProtoMessage() {}

func (x *CreateProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemInput.ProtoReflect.Descriptor instead.
func (*CreateProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProblemInput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

func (x *CreateProblemInput) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type CreateProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProblemOutput) Reset() {
	*x = CreateProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemOutput) ProtoMessage() {}

func (x *CreateProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemOutput.ProtoReflect.Descriptor instead.
func (*CreateProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateProblemOutput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DeleteProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemInput) Reset() {
	*x = DeleteProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemInput) ProtoMessage() {}

func (x *DeleteProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemInput.ProtoReflect.Descriptor instead.
func (*DeleteProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DeleteProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemOutput) Reset() {
	*x = DeleteProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemOutput) ProtoMessage() {}

func (x *DeleteProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemOutput.ProtoReflect.Descriptor instead.
func (*DeleteProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{4}
}

type DescribeProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Locale        string                 `protobuf:"bytes,1122,opt,name=locale,proto3" json:"locale,omitempty"` // load title and content in a specific locale
	Extra         []Problem_Extra        `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Problem_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeProblemInput) Reset() {
	*x = DescribeProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProblemInput) ProtoMessage() {}

func (x *DescribeProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProblemInput.ProtoReflect.Descriptor instead.
func (*DescribeProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *DescribeProblemInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *DescribeProblemInput) GetExtra() []Problem_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Problem       *Problem               `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeProblemOutput) Reset() {
	*x = DescribeProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProblemOutput) ProtoMessage() {}

func (x *DescribeProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProblemOutput.ProtoReflect.Descriptor instead.
func (*DescribeProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeProblemOutput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type ListProblemsInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Search        string                     `protobuf:"bytes,20,opt,name=search,proto3" json:"search,omitempty"`
	Filters       *ListProblemsInput_Filter  `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort          ListProblemsInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.atlas.ListProblemsInput_Sortable" json:"sort,omitempty"`
	Order         wellknown.Direction        `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	Locale        string                     `protobuf:"bytes,1122,opt,name=locale,proto3" json:"locale,omitempty"` // load title and content in a specific locale
	Extra         []Problem_Extra            `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Problem_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsInput) Reset() {
	*x = ListProblemsInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsInput) ProtoMessage() {}

func (x *ListProblemsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsInput.ProtoReflect.Descriptor instead.
func (*ListProblemsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListProblemsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListProblemsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListProblemsInput) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListProblemsInput) GetFilters() *ListProblemsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListProblemsInput) GetSort() ListProblemsInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListProblemsInput_DEFAULT
}

func (x *ListProblemsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListProblemsInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *ListProblemsInput) GetExtra() []Problem_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListProblemsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Problem             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsOutput) Reset() {
	*x = ListProblemsOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsOutput) ProtoMessage() {}

func (x *ListProblemsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsOutput.ProtoReflect.Descriptor instead.
func (*ListProblemsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListProblemsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProblemsOutput) GetItems() []*Problem {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateVisibilityInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Visible       bool                   `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVisibilityInput) Reset() {
	*x = UpdateVisibilityInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVisibilityInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVisibilityInput) ProtoMessage() {}

func (x *UpdateVisibilityInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVisibilityInput.ProtoReflect.Descriptor instead.
func (*UpdateVisibilityInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateVisibilityInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *UpdateVisibilityInput) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

type UpdateVisibilityOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVisibilityOutput) Reset() {
	*x = UpdateVisibilityOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVisibilityOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVisibilityOutput) ProtoMessage() {}

func (x *UpdateVisibilityOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVisibilityOutput.ProtoReflect.Descriptor instead.
func (*UpdateVisibilityOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{10}
}

type UpdatePrivacyInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Private       bool                   `protobuf:"varint,2,opt,name=private,proto3" json:"private,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrivacyInput) Reset() {
	*x = UpdatePrivacyInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivacyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivacyInput) ProtoMessage() {}

func (x *UpdatePrivacyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivacyInput.ProtoReflect.Descriptor instead.
func (*UpdatePrivacyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePrivacyInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *UpdatePrivacyInput) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

type UpdatePrivacyOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrivacyOutput) Reset() {
	*x = UpdatePrivacyOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivacyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivacyOutput) ProtoMessage() {}

func (x *UpdatePrivacyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivacyOutput.ProtoReflect.Descriptor instead.
func (*UpdatePrivacyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{12}
}

type UpdateProblemInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// specify list of fields to update, if empty all fields are updated
	Patch         []UpdateProblemInput_Patch `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.atlas.UpdateProblemInput_Patch" json:"patch,omitempty"`
	ProblemId     string                     `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Problem       *Problem                   `protobuf:"bytes,3,opt,name=problem,proto3" json:"problem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemInput) Reset() {
	*x = UpdateProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemInput) ProtoMessage() {}

func (x *UpdateProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemInput.ProtoReflect.Descriptor instead.
func (*UpdateProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateProblemInput) GetPatch() []UpdateProblemInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *UpdateProblemInput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type UpdateProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemOutput) Reset() {
	*x = UpdateProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemOutput) ProtoMessage() {}

func (x *UpdateProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemOutput.ProtoReflect.Descriptor instead.
func (*UpdateProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{14}
}

type SyncProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncProblemInput) Reset() {
	*x = SyncProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncProblemInput) ProtoMessage() {}

func (x *SyncProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncProblemInput.ProtoReflect.Descriptor instead.
func (*SyncProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{15}
}

func (x *SyncProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type SyncProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncProblemOutput) Reset() {
	*x = SyncProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncProblemOutput) ProtoMessage() {}

func (x *SyncProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncProblemOutput.ProtoReflect.Descriptor instead.
func (*SyncProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{16}
}

type ListVersionsInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ProblemId string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	// pagination
	Offset int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	After  string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	// data filters
	Filters       *ListVersionsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVersionsInput) Reset() {
	*x = ListVersionsInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsInput) ProtoMessage() {}

func (x *ListVersionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsInput.ProtoReflect.Descriptor instead.
func (*ListVersionsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListVersionsInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *ListVersionsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListVersionsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListVersionsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListVersionsInput) GetFilters() *ListVersionsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListVersionsOutput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*Version             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string                 `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListVersionsOutput) Reset() {
	*x = ListVersionsOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsOutput) ProtoMessage() {}

func (x *ListVersionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsOutput.ProtoReflect.Descriptor instead.
func (*ListVersionsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListVersionsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListVersionsOutput) GetItems() []*Version {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListVersionsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type VoteProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Vote          int32                  `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteProblemInput) Reset() {
	*x = VoteProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteProblemInput) ProtoMessage() {}

func (x *VoteProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteProblemInput.ProtoReflect.Descriptor instead.
func (*VoteProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{19}
}

func (x *VoteProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *VoteProblemInput) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type VoteProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoteCount     int32                  `protobuf:"varint,1,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteProblemOutput) Reset() {
	*x = VoteProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteProblemOutput) ProtoMessage() {}

func (x *VoteProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteProblemOutput.ProtoReflect.Descriptor instead.
func (*VoteProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{20}
}

func (x *VoteProblemOutput) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

type ListRuntimesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuntimesInput) Reset() {
	*x = ListRuntimesInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuntimesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimesInput) ProtoMessage() {}

func (x *ListRuntimesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimesInput.ProtoReflect.Descriptor instead.
func (*ListRuntimesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListRuntimesInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListRuntimesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*runtime.Runtime     `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuntimesOutput) Reset() {
	*x = ListRuntimesOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuntimesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimesOutput) ProtoMessage() {}

func (x *ListRuntimesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimesOutput.ProtoReflect.Descriptor instead.
func (*ListRuntimesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListRuntimesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRuntimesOutput) GetItems() []*runtime.Runtime {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExportProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportProblemInput) Reset() {
	*x = ExportProblemInput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProblemInput) ProtoMessage() {}

func (x *ExportProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProblemInput.ProtoReflect.Descriptor instead.
func (*ExportProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{23}
}

func (x *ExportProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *ExportProblemInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ExportProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SnapshotUrl   string                 `protobuf:"bytes,1,opt,name=snapshot_url,json=snapshotUrl,proto3" json:"snapshot_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportProblemOutput) Reset() {
	*x = ExportProblemOutput{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProblemOutput) ProtoMessage() {}

func (x *ExportProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProblemOutput.ProtoReflect.Descriptor instead.
func (*ExportProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{24}
}

func (x *ExportProblemOutput) GetSnapshotUrl() string {
	if x != nil {
		return x.SnapshotUrl
	}
	return ""
}

type ListProblemsInput_Filter struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID    `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	TopicId       []*wellknown.ExpressionID    `protobuf:"bytes,2,rep,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	IsVisible     []*wellknown.ExpressionBool  `protobuf:"bytes,3,rep,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	IsPrivate     []*wellknown.ExpressionBool  `protobuf:"bytes,4,rep,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	Number        []*wellknown.ExpressionInt   `protobuf:"bytes,5,rep,name=number,proto3" json:"number,omitempty"`
	Difficulty    []*wellknown.ExpressionInt   `protobuf:"bytes,6,rep,name=difficulty,proto3" json:"difficulty,omitempty"`
	Status        []*wellknown.ExpressionEnum  `protobuf:"bytes,7,rep,name=status,proto3" json:"status,omitempty"`
	Score         []*wellknown.ExpressionFloat `protobuf:"bytes,9,rep,name=score,proto3" json:"score,omitempty"`
	IsBookmarked  []*wellknown.ExpressionBool  `protobuf:"bytes,8,rep,name=is_bookmarked,json=isBookmarked,proto3" json:"is_bookmarked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsInput_Filter) Reset() {
	*x = ListProblemsInput_Filter{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsInput_Filter) ProtoMessage() {}

func (x *ListProblemsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListProblemsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListProblemsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetTopicId() []*wellknown.ExpressionID {
	if x != nil {
		return x.TopicId
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetIsVisible() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsVisible
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetIsPrivate() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsPrivate
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetNumber() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetDifficulty() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetScore() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *ListProblemsInput_Filter) GetIsBookmarked() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsBookmarked
	}
	return nil
}

type ListVersionsInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Number        []*wellknown.ExpressionInt       `protobuf:"bytes,1,rep,name=number,proto3" json:"number,omitempty"`
	CreatedBy     []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt     []*wellknown.ExpressionTimestamp `protobuf:"bytes,3,rep,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ChangeOp      []*wellknown.ExpressionEnum      `protobuf:"bytes,4,rep,name=change_op,json=changeOp,proto3" json:"change_op,omitempty"`
	ChangePath    []*wellknown.ExpressionString    `protobuf:"bytes,5,rep,name=change_path,json=changePath,proto3" json:"change_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVersionsInput_Filter) Reset() {
	*x = ListVersionsInput_Filter{}
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsInput_Filter) ProtoMessage() {}

func (x *ListVersionsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_problem_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListVersionsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_problem_service_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListVersionsInput_Filter) GetNumber() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ListVersionsInput_Filter) GetCreatedBy() []*wellknown.ExpressionID {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *ListVersionsInput_Filter) GetCreatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListVersionsInput_Filter) GetChangeOp() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.ChangeOp
	}
	return nil
}

func (x *ListVersionsInput_Filter) GetChangePath() []*wellknown.ExpressionString {
	if x != nil {
		return x.ChangePath
	}
	return nil
}

var File_eolymp_atlas_problem_service_proto protoreflect.FileDescriptor

const file_eolymp_atlas_problem_service_proto_rawDesc = "" +
	"\n" +
	"\"eolymp/atlas/problem_service.proto\x12\feolymp.atlas\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1aeolymp/atlas/problem.proto\x1a\x1ceolymp/atlas/statement.proto\x1a\x1aeolymp/atlas/version.proto\x1a\x1ceolymp/runtime/runtime.proto\x1a eolymp/wellknown/direction.proto\x1a!eolymp/wellknown/expression.proto\"\xa2\x01\n" +
	"\x13ProblemChangedEvent\x12-\n" +
	"\x06before\x18\x01 \x01(\v2\x15.eolymp.atlas.ProblemR\x06before\x12+\n" +
	"\x05after\x18\x02 \x01(\v2\x15.eolymp.atlas.ProblemR\x05after\x12/\n" +
	"\aversion\x18\x03 \x01(\v2\x15.eolymp.atlas.VersionR\aversion\"|\n" +
	"\x12CreateProblemInput\x12/\n" +
	"\aproblem\x18\x01 \x01(\v2\x15.eolymp.atlas.ProblemR\aproblem\x125\n" +
	"\tstatement\x18\x02 \x01(\v2\x17.eolymp.atlas.StatementR\tstatement\"4\n" +
	"\x13CreateProblemOutput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\"3\n" +
	"\x12DeleteProblemInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\"\x15\n" +
	"\x13DeleteProblemOutput\"\x82\x01\n" +
	"\x14DescribeProblemInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x17\n" +
	"\x06locale\x18\xe2\b \x01(\tR\x06locale\x122\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1b.eolymp.atlas.Problem.ExtraR\x05extra\"H\n" +
	"\x15DescribeProblemOutput\x12/\n" +
	"\aproblem\x18\x01 \x01(\v2\x15.eolymp.atlas.ProblemR\aproblem\"\xb5\a\n" +
	"\x11ListProblemsInput\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12\x16\n" +
	"\x06search\x18\x14 \x01(\tR\x06search\x12@\n" +
	"\afilters\x18( \x01(\v2&.eolymp.atlas.ListProblemsInput.FilterR\afilters\x12<\n" +
	"\x04sort\x182 \x01(\x0e2(.eolymp.atlas.ListProblemsInput.SortableR\x04sort\x121\n" +
	"\x05order\x183 \x01(\x0e2\x1b.eolymp.wellknown.DirectionR\x05order\x12\x17\n" +
	"\x06locale\x18\xe2\b \x01(\tR\x06locale\x122\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1b.eolymp.atlas.Problem.ExtraR\x05extra\x1a\xa9\x04\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\x01 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x129\n" +
	"\btopic_id\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\atopicId\x12?\n" +
	"\n" +
	"is_visible\x18\x03 \x03(\v2 .eolymp.wellknown.ExpressionBoolR\tisVisible\x12?\n" +
	"\n" +
	"is_private\x18\x04 \x03(\v2 .eolymp.wellknown.ExpressionBoolR\tisPrivate\x127\n" +
	"\x06number\x18\x05 \x03(\v2\x1f.eolymp.wellknown.ExpressionIntR\x06number\x12?\n" +
	"\n" +
	"difficulty\x18\x06 \x03(\v2\x1f.eolymp.wellknown.ExpressionIntR\n" +
	"difficulty\x128\n" +
	"\x06status\x18\a \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\x127\n" +
	"\x05score\x18\t \x03(\v2!.eolymp.wellknown.ExpressionFloatR\x05score\x12E\n" +
	"\ris_bookmarked\x18\b \x03(\v2 .eolymp.wellknown.ExpressionBoolR\fisBookmarked\"0\n" +
	"\bSortable\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\n" +
	"\n" +
	"\x06RECENT\x10\x01\x12\v\n" +
	"\aPOPULAR\x10\x02\"W\n" +
	"\x12ListProblemsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12+\n" +
	"\x05items\x18\x02 \x03(\v2\x15.eolymp.atlas.ProblemR\x05items\"P\n" +
	"\x15UpdateVisibilityInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x18\n" +
	"\avisible\x18\x02 \x01(\bR\avisible\"\x18\n" +
	"\x16UpdateVisibilityOutput\"M\n" +
	"\x12UpdatePrivacyInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x18\n" +
	"\aprivate\x18\x02 \x01(\bR\aprivate\"\x15\n" +
	"\x13UpdatePrivacyOutput\"\x8c\x02\n" +
	"\x12UpdateProblemInput\x12<\n" +
	"\x05patch\x18\x01 \x03(\x0e2&.eolymp.atlas.UpdateProblemInput.PatchR\x05patch\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\x12/\n" +
	"\aproblem\x18\x03 \x01(\v2\x15.eolymp.atlas.ProblemR\aproblem\"h\n" +
	"\x05Patch\x12\a\n" +
	"\x03ALL\x10\x00\x12\v\n" +
	"\aVISIBLE\x10\x01\x12\v\n" +
	"\aPRIVATE\x10\x02\x12\n" +
	"\n" +
	"\x06TOPICS\x10\x03\x12\x0e\n" +
	"\n" +
	"DIFFICULTY\x10\x04\x12\n" +
	"\n" +
	"\x06ORIGIN\x10\x05\x12\b\n" +
	"\x04TYPE\x10\x06\x12\n" +
	"\n" +
	"\x06NUMBER\x10\a\"\x15\n" +
	"\x13UpdateProblemOutput\"1\n" +
	"\x10SyncProblemInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\"\x13\n" +
	"\x11SyncProblemOutput\"\x83\x04\n" +
	"\x11ListVersionsInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12\x14\n" +
	"\x05after\x18\f \x01(\tR\x05after\x12@\n" +
	"\afilters\x18( \x01(\v2&.eolymp.atlas.ListVersionsInput.FilterR\afilters\x1a\xca\x02\n" +
	"\x06Filter\x127\n" +
	"\x06number\x18\x01 \x03(\v2\x1f.eolymp.wellknown.ExpressionIntR\x06number\x12=\n" +
	"\n" +
	"created_by\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\tcreatedBy\x12D\n" +
	"\n" +
	"created_at\x18\x03 \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\tcreatedAt\x12=\n" +
	"\tchange_op\x18\x04 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\bchangeOp\x12C\n" +
	"\vchange_path\x18\x05 \x03(\v2\".eolymp.wellknown.ExpressionStringR\n" +
	"changePath\"\x81\x01\n" +
	"\x12ListVersionsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12+\n" +
	"\x05items\x18\x02 \x03(\v2\x15.eolymp.atlas.VersionR\x05items\x12(\n" +
	"\x10next_page_cursor\x18\x03 \x01(\tR\x0enextPageCursor\"E\n" +
	"\x10VoteProblemInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x12\n" +
	"\x04vote\x18\x02 \x01(\x05R\x04vote\"2\n" +
	"\x11VoteProblemOutput\x12\x1d\n" +
	"\n" +
	"vote_count\x18\x01 \x01(\x05R\tvoteCount\"2\n" +
	"\x11ListRuntimesInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\"Y\n" +
	"\x12ListRuntimesOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12-\n" +
	"\x05items\x18\x02 \x03(\v2\x17.eolymp.runtime.RuntimeR\x05items\"M\n" +
	"\x12ExportProblemInput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\"8\n" +
	"\x13ExportProblemOutput\x12!\n" +
	"\fsnapshot_url\x18\x01 \x01(\tR\vsnapshotUrl2\xc2\f\n" +
	"\x0eProblemService\x12\x91\x01\n" +
	"\rCreateProblem\x12 .eolymp.atlas.CreateProblemInput\x1a!.eolymp.atlas.CreateProblemOutput\";\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\v\"\t/problems\x12\x9e\x01\n" +
	"\rUpdateProblem\x12 .eolymp.atlas.UpdateProblemInput\x1a!.eolymp.atlas.UpdateProblemOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x18\x1a\x16/problems/{problem_id}\x12\x9e\x01\n" +
	"\rDeleteProblem\x12 .eolymp.atlas.DeleteProblemInput\x1a!.eolymp.atlas.DeleteProblemOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x18*\x16/problems/{problem_id}\x12\xa3\x01\n" +
	"\x0fDescribeProblem\x12\".eolymp.atlas.DescribeProblemInput\x1a#.eolymp.atlas.DescribeProblemOutput\"G\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02\x18\x12\x16/problems/{problem_id}\x12\x8d\x01\n" +
	"\fListProblems\x12\x1f.eolymp.atlas.ListProblemsInput\x1a .eolymp.atlas.ListProblemsOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02\v\x12\t/problems\x12\x9d\x01\n" +
	"\vSyncProblem\x12\x1e.eolymp.atlas.SyncProblemInput\x1a\x1f.eolymp.atlas.SyncProblemOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x1d\"\x1b/problems/{problem_id}/sync\x12\x9d\x01\n" +
	"\vVoteProblem\x12\x1e.eolymp.atlas.VoteProblemInput\x1a\x1f.eolymp.atlas.VoteProblemOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x1d\"\x1b/problems/{problem_id}/vote\x12\x95\x01\n" +
	"\fListVersions\x12\x1f.eolymp.atlas.ListVersionsInput\x1a .eolymp.atlas.ListVersionsOutput\"B\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02!\x12\x1f/problems/{problem_id}/versions\x12\xa2\x01\n" +
	"\fListRuntimes\x12\x1f.eolymp.atlas.ListRuntimesInput\x1a .eolymp.atlas.ListRuntimesOutput\"O\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x19\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02 \x12\x1e/problems/{problem_id}/runtime\x12\xa6\x01\n" +
	"\rExportProblem\x12 .eolymp.atlas.ExportProblemInput\x1a!.eolymp.atlas.ExportProblemOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02!\x12\x1f/problems/{problem_id}/snapshotB-Z+github.com/eolymp/go-sdk/eolymp/atlas;atlasb\x06proto3"

var (
	file_eolymp_atlas_problem_service_proto_rawDescOnce sync.Once
	file_eolymp_atlas_problem_service_proto_rawDescData []byte
)

func file_eolymp_atlas_problem_service_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_problem_service_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_problem_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_problem_service_proto_rawDesc), len(file_eolymp_atlas_problem_service_proto_rawDesc)))
	})
	return file_eolymp_atlas_problem_service_proto_rawDescData
}

var file_eolymp_atlas_problem_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_atlas_problem_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_eolymp_atlas_problem_service_proto_goTypes = []any{
	(ListProblemsInput_Sortable)(0),       // 0: eolymp.atlas.ListProblemsInput.Sortable
	(UpdateProblemInput_Patch)(0),         // 1: eolymp.atlas.UpdateProblemInput.Patch
	(*ProblemChangedEvent)(nil),           // 2: eolymp.atlas.ProblemChangedEvent
	(*CreateProblemInput)(nil),            // 3: eolymp.atlas.CreateProblemInput
	(*CreateProblemOutput)(nil),           // 4: eolymp.atlas.CreateProblemOutput
	(*DeleteProblemInput)(nil),            // 5: eolymp.atlas.DeleteProblemInput
	(*DeleteProblemOutput)(nil),           // 6: eolymp.atlas.DeleteProblemOutput
	(*DescribeProblemInput)(nil),          // 7: eolymp.atlas.DescribeProblemInput
	(*DescribeProblemOutput)(nil),         // 8: eolymp.atlas.DescribeProblemOutput
	(*ListProblemsInput)(nil),             // 9: eolymp.atlas.ListProblemsInput
	(*ListProblemsOutput)(nil),            // 10: eolymp.atlas.ListProblemsOutput
	(*UpdateVisibilityInput)(nil),         // 11: eolymp.atlas.UpdateVisibilityInput
	(*UpdateVisibilityOutput)(nil),        // 12: eolymp.atlas.UpdateVisibilityOutput
	(*UpdatePrivacyInput)(nil),            // 13: eolymp.atlas.UpdatePrivacyInput
	(*UpdatePrivacyOutput)(nil),           // 14: eolymp.atlas.UpdatePrivacyOutput
	(*UpdateProblemInput)(nil),            // 15: eolymp.atlas.UpdateProblemInput
	(*UpdateProblemOutput)(nil),           // 16: eolymp.atlas.UpdateProblemOutput
	(*SyncProblemInput)(nil),              // 17: eolymp.atlas.SyncProblemInput
	(*SyncProblemOutput)(nil),             // 18: eolymp.atlas.SyncProblemOutput
	(*ListVersionsInput)(nil),             // 19: eolymp.atlas.ListVersionsInput
	(*ListVersionsOutput)(nil),            // 20: eolymp.atlas.ListVersionsOutput
	(*VoteProblemInput)(nil),              // 21: eolymp.atlas.VoteProblemInput
	(*VoteProblemOutput)(nil),             // 22: eolymp.atlas.VoteProblemOutput
	(*ListRuntimesInput)(nil),             // 23: eolymp.atlas.ListRuntimesInput
	(*ListRuntimesOutput)(nil),            // 24: eolymp.atlas.ListRuntimesOutput
	(*ExportProblemInput)(nil),            // 25: eolymp.atlas.ExportProblemInput
	(*ExportProblemOutput)(nil),           // 26: eolymp.atlas.ExportProblemOutput
	(*ListProblemsInput_Filter)(nil),      // 27: eolymp.atlas.ListProblemsInput.Filter
	(*ListVersionsInput_Filter)(nil),      // 28: eolymp.atlas.ListVersionsInput.Filter
	(*Problem)(nil),                       // 29: eolymp.atlas.Problem
	(*Version)(nil),                       // 30: eolymp.atlas.Version
	(*Statement)(nil),                     // 31: eolymp.atlas.Statement
	(Problem_Extra)(0),                    // 32: eolymp.atlas.Problem.Extra
	(wellknown.Direction)(0),              // 33: eolymp.wellknown.Direction
	(*runtime.Runtime)(nil),               // 34: eolymp.runtime.Runtime
	(*wellknown.ExpressionID)(nil),        // 35: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionBool)(nil),      // 36: eolymp.wellknown.ExpressionBool
	(*wellknown.ExpressionInt)(nil),       // 37: eolymp.wellknown.ExpressionInt
	(*wellknown.ExpressionEnum)(nil),      // 38: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionFloat)(nil),     // 39: eolymp.wellknown.ExpressionFloat
	(*wellknown.ExpressionTimestamp)(nil), // 40: eolymp.wellknown.ExpressionTimestamp
	(*wellknown.ExpressionString)(nil),    // 41: eolymp.wellknown.ExpressionString
}
var file_eolymp_atlas_problem_service_proto_depIdxs = []int32{
	29, // 0: eolymp.atlas.ProblemChangedEvent.before:type_name -> eolymp.atlas.Problem
	29, // 1: eolymp.atlas.ProblemChangedEvent.after:type_name -> eolymp.atlas.Problem
	30, // 2: eolymp.atlas.ProblemChangedEvent.version:type_name -> eolymp.atlas.Version
	29, // 3: eolymp.atlas.CreateProblemInput.problem:type_name -> eolymp.atlas.Problem
	31, // 4: eolymp.atlas.CreateProblemInput.statement:type_name -> eolymp.atlas.Statement
	32, // 5: eolymp.atlas.DescribeProblemInput.extra:type_name -> eolymp.atlas.Problem.Extra
	29, // 6: eolymp.atlas.DescribeProblemOutput.problem:type_name -> eolymp.atlas.Problem
	27, // 7: eolymp.atlas.ListProblemsInput.filters:type_name -> eolymp.atlas.ListProblemsInput.Filter
	0,  // 8: eolymp.atlas.ListProblemsInput.sort:type_name -> eolymp.atlas.ListProblemsInput.Sortable
	33, // 9: eolymp.atlas.ListProblemsInput.order:type_name -> eolymp.wellknown.Direction
	32, // 10: eolymp.atlas.ListProblemsInput.extra:type_name -> eolymp.atlas.Problem.Extra
	29, // 11: eolymp.atlas.ListProblemsOutput.items:type_name -> eolymp.atlas.Problem
	1,  // 12: eolymp.atlas.UpdateProblemInput.patch:type_name -> eolymp.atlas.UpdateProblemInput.Patch
	29, // 13: eolymp.atlas.UpdateProblemInput.problem:type_name -> eolymp.atlas.Problem
	28, // 14: eolymp.atlas.ListVersionsInput.filters:type_name -> eolymp.atlas.ListVersionsInput.Filter
	30, // 15: eolymp.atlas.ListVersionsOutput.items:type_name -> eolymp.atlas.Version
	34, // 16: eolymp.atlas.ListRuntimesOutput.items:type_name -> eolymp.runtime.Runtime
	35, // 17: eolymp.atlas.ListProblemsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	35, // 18: eolymp.atlas.ListProblemsInput.Filter.topic_id:type_name -> eolymp.wellknown.ExpressionID
	36, // 19: eolymp.atlas.ListProblemsInput.Filter.is_visible:type_name -> eolymp.wellknown.ExpressionBool
	36, // 20: eolymp.atlas.ListProblemsInput.Filter.is_private:type_name -> eolymp.wellknown.ExpressionBool
	37, // 21: eolymp.atlas.ListProblemsInput.Filter.number:type_name -> eolymp.wellknown.ExpressionInt
	37, // 22: eolymp.atlas.ListProblemsInput.Filter.difficulty:type_name -> eolymp.wellknown.ExpressionInt
	38, // 23: eolymp.atlas.ListProblemsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	39, // 24: eolymp.atlas.ListProblemsInput.Filter.score:type_name -> eolymp.wellknown.ExpressionFloat
	36, // 25: eolymp.atlas.ListProblemsInput.Filter.is_bookmarked:type_name -> eolymp.wellknown.ExpressionBool
	37, // 26: eolymp.atlas.ListVersionsInput.Filter.number:type_name -> eolymp.wellknown.ExpressionInt
	35, // 27: eolymp.atlas.ListVersionsInput.Filter.created_by:type_name -> eolymp.wellknown.ExpressionID
	40, // 28: eolymp.atlas.ListVersionsInput.Filter.created_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	38, // 29: eolymp.atlas.ListVersionsInput.Filter.change_op:type_name -> eolymp.wellknown.ExpressionEnum
	41, // 30: eolymp.atlas.ListVersionsInput.Filter.change_path:type_name -> eolymp.wellknown.ExpressionString
	3,  // 31: eolymp.atlas.ProblemService.CreateProblem:input_type -> eolymp.atlas.CreateProblemInput
	15, // 32: eolymp.atlas.ProblemService.UpdateProblem:input_type -> eolymp.atlas.UpdateProblemInput
	5,  // 33: eolymp.atlas.ProblemService.DeleteProblem:input_type -> eolymp.atlas.DeleteProblemInput
	7,  // 34: eolymp.atlas.ProblemService.DescribeProblem:input_type -> eolymp.atlas.DescribeProblemInput
	9,  // 35: eolymp.atlas.ProblemService.ListProblems:input_type -> eolymp.atlas.ListProblemsInput
	17, // 36: eolymp.atlas.ProblemService.SyncProblem:input_type -> eolymp.atlas.SyncProblemInput
	21, // 37: eolymp.atlas.ProblemService.VoteProblem:input_type -> eolymp.atlas.VoteProblemInput
	19, // 38: eolymp.atlas.ProblemService.ListVersions:input_type -> eolymp.atlas.ListVersionsInput
	23, // 39: eolymp.atlas.ProblemService.ListRuntimes:input_type -> eolymp.atlas.ListRuntimesInput
	25, // 40: eolymp.atlas.ProblemService.ExportProblem:input_type -> eolymp.atlas.ExportProblemInput
	4,  // 41: eolymp.atlas.ProblemService.CreateProblem:output_type -> eolymp.atlas.CreateProblemOutput
	16, // 42: eolymp.atlas.ProblemService.UpdateProblem:output_type -> eolymp.atlas.UpdateProblemOutput
	6,  // 43: eolymp.atlas.ProblemService.DeleteProblem:output_type -> eolymp.atlas.DeleteProblemOutput
	8,  // 44: eolymp.atlas.ProblemService.DescribeProblem:output_type -> eolymp.atlas.DescribeProblemOutput
	10, // 45: eolymp.atlas.ProblemService.ListProblems:output_type -> eolymp.atlas.ListProblemsOutput
	18, // 46: eolymp.atlas.ProblemService.SyncProblem:output_type -> eolymp.atlas.SyncProblemOutput
	22, // 47: eolymp.atlas.ProblemService.VoteProblem:output_type -> eolymp.atlas.VoteProblemOutput
	20, // 48: eolymp.atlas.ProblemService.ListVersions:output_type -> eolymp.atlas.ListVersionsOutput
	24, // 49: eolymp.atlas.ProblemService.ListRuntimes:output_type -> eolymp.atlas.ListRuntimesOutput
	26, // 50: eolymp.atlas.ProblemService.ExportProblem:output_type -> eolymp.atlas.ExportProblemOutput
	41, // [41:51] is the sub-list for method output_type
	31, // [31:41] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_problem_service_proto_init() }
func file_eolymp_atlas_problem_service_proto_init() {
	if File_eolymp_atlas_problem_service_proto != nil {
		return
	}
	file_eolymp_atlas_problem_proto_init()
	file_eolymp_atlas_statement_proto_init()
	file_eolymp_atlas_version_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_problem_service_proto_rawDesc), len(file_eolymp_atlas_problem_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_atlas_problem_service_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_problem_service_proto_depIdxs,
		EnumInfos:         file_eolymp_atlas_problem_service_proto_enumTypes,
		MessageInfos:      file_eolymp_atlas_problem_service_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_problem_service_proto = out.File
	file_eolymp_atlas_problem_service_proto_goTypes = nil
	file_eolymp_atlas_problem_service_proto_depIdxs = nil
}
