// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.4
// source: eolymp/atlas/testing_test.proto

package atlas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Test_Status int32

const (
	Test_UNKNOWN_STATUS Test_Status = 0
	Test_PENDING        Test_Status = 1 // pending generation
	Test_READY          Test_Status = 2 // generated and validated
	Test_INVALID        Test_Status = 3 // not generated due to an error, or invalid
)

// Enum value maps for Test_Status.
var (
	Test_Status_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "PENDING",
		2: "READY",
		3: "INVALID",
	}
	Test_Status_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"PENDING":        1,
		"READY":          2,
		"INVALID":        3,
	}
)

func (x Test_Status) Enum() *Test_Status {
	p := new(Test_Status)
	*p = x
	return p
}

func (x Test_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Test_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_atlas_testing_test_proto_enumTypes[0].Descriptor()
}

func (Test_Status) Type() protoreflect.EnumType {
	return &file_eolymp_atlas_testing_test_proto_enumTypes[0]
}

func (x Test_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Test_Status.Descriptor instead.
func (Test_Status) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_test_proto_rawDescGZIP(), []int{0, 0}
}

type Test struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Test unique identifier.
	Id                 string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VersionId          string      `protobuf:"bytes,20,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	TestsetId          string      `protobuf:"bytes,2,opt,name=testset_id,json=testsetId,proto3" json:"testset_id,omitempty"`
	Index              int32       `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"` // Index, a sequential number, of the test within testset.
	Status             Test_Status `protobuf:"varint,60,opt,name=status,proto3,enum=eolymp.atlas.Test_Status" json:"status,omitempty"`
	StatusMessage      string      `protobuf:"bytes,61,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`                  // Additional information regarding status
	Example            bool        `protobuf:"varint,4,opt,name=example,proto3" json:"example,omitempty"`                                                   // Flag which defines if test should be shown in as an example in the problem statement
	Inactive           bool        `protobuf:"varint,7,opt,name=inactive,proto3" json:"inactive,omitempty"`                                                 // The test is inactive
	Secret             bool        `protobuf:"varint,6,opt,name=secret,proto3" json:"secret,omitempty"`                                                     // Secret test, input and answer are never populated
	Score              float32     `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`                                                      // Score for passing this test
	ExampleInputUrl    string      `protobuf:"bytes,40,opt,name=example_input_url,json=exampleInputUrl,proto3" json:"example_input_url,omitempty"`          // Optionally, override input data for example in statement
	ExampleAnswerUrl   string      `protobuf:"bytes,41,opt,name=example_answer_url,json=exampleAnswerUrl,proto3" json:"example_answer_url,omitempty"`       // Optionally, override answer data for example in statement
	GeneratedInputUrl  string      `protobuf:"bytes,50,opt,name=generated_input_url,json=generatedInputUrl,proto3" json:"generated_input_url,omitempty"`    // Generated input data
	GeneratedAnswerUrl string      `protobuf:"bytes,51,opt,name=generated_answer_url,json=generatedAnswerUrl,proto3" json:"generated_answer_url,omitempty"` // Generated answer data
	// Types that are valid to be assigned to Input:
	//
	//	*Test_InputUrl
	//	*Test_InputGenerator
	Input isTest_Input `protobuf_oneof:"input"`
	// Types that are valid to be assigned to Answer:
	//
	//	*Test_AnswerUrl
	//	*Test_AnswerGenerator
	Answer        isTest_Answer `protobuf_oneof:"answer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Test) Reset() {
	*x = Test{}
	mi := &file_eolymp_atlas_testing_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_test_proto_rawDescGZIP(), []int{0}
}

func (x *Test) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Test) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *Test) GetTestsetId() string {
	if x != nil {
		return x.TestsetId
	}
	return ""
}

func (x *Test) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Test) GetStatus() Test_Status {
	if x != nil {
		return x.Status
	}
	return Test_UNKNOWN_STATUS
}

func (x *Test) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *Test) GetExample() bool {
	if x != nil {
		return x.Example
	}
	return false
}

func (x *Test) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

func (x *Test) GetSecret() bool {
	if x != nil {
		return x.Secret
	}
	return false
}

func (x *Test) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Test) GetExampleInputUrl() string {
	if x != nil {
		return x.ExampleInputUrl
	}
	return ""
}

func (x *Test) GetExampleAnswerUrl() string {
	if x != nil {
		return x.ExampleAnswerUrl
	}
	return ""
}

func (x *Test) GetGeneratedInputUrl() string {
	if x != nil {
		return x.GeneratedInputUrl
	}
	return ""
}

func (x *Test) GetGeneratedAnswerUrl() string {
	if x != nil {
		return x.GeneratedAnswerUrl
	}
	return ""
}

func (x *Test) GetInput() isTest_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Test) GetInputUrl() string {
	if x != nil {
		if x, ok := x.Input.(*Test_InputUrl); ok {
			return x.InputUrl
		}
	}
	return ""
}

func (x *Test) GetInputGenerator() *Test_Generator {
	if x != nil {
		if x, ok := x.Input.(*Test_InputGenerator); ok {
			return x.InputGenerator
		}
	}
	return nil
}

func (x *Test) GetAnswer() isTest_Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *Test) GetAnswerUrl() string {
	if x != nil {
		if x, ok := x.Answer.(*Test_AnswerUrl); ok {
			return x.AnswerUrl
		}
	}
	return ""
}

func (x *Test) GetAnswerGenerator() *Test_Generator {
	if x != nil {
		if x, ok := x.Answer.(*Test_AnswerGenerator); ok {
			return x.AnswerGenerator
		}
	}
	return nil
}

type isTest_Input interface {
	isTest_Input()
}

type Test_InputUrl struct {
	InputUrl string `protobuf:"bytes,11,opt,name=input_url,json=inputUrl,proto3,oneof"`
}

type Test_InputGenerator struct {
	InputGenerator *Test_Generator `protobuf:"bytes,12,opt,name=input_generator,json=inputGenerator,proto3,oneof"`
}

func (*Test_InputUrl) isTest_Input() {}

func (*Test_InputGenerator) isTest_Input() {}

type isTest_Answer interface {
	isTest_Answer()
}

type Test_AnswerUrl struct {
	AnswerUrl string `protobuf:"bytes,21,opt,name=answer_url,json=answerUrl,proto3,oneof"`
}

type Test_AnswerGenerator struct {
	AnswerGenerator *Test_Generator `protobuf:"bytes,22,opt,name=answer_generator,json=answerGenerator,proto3,oneof"`
}

func (*Test_AnswerUrl) isTest_Answer() {}

func (*Test_AnswerGenerator) isTest_Answer() {}

type Test_Generator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScriptName    string                 `protobuf:"bytes,1,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Arguments     []string               `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Test_Generator) Reset() {
	*x = Test_Generator{}
	mi := &file_eolymp_atlas_testing_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Test_Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test_Generator) ProtoMessage() {}

func (x *Test_Generator) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_testing_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test_Generator.ProtoReflect.Descriptor instead.
func (*Test_Generator) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_testing_test_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Test_Generator) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *Test_Generator) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

var File_eolymp_atlas_testing_test_proto protoreflect.FileDescriptor

const file_eolymp_atlas_testing_test_proto_rawDesc = "" +
	"\n" +
	"\x1feolymp/atlas/testing_test.proto\x12\feolymp.atlas\"\xda\x06\n" +
	"\x04Test\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"version_id\x18\x14 \x01(\tR\tversionId\x12\x1d\n" +
	"\n" +
	"testset_id\x18\x02 \x01(\tR\ttestsetId\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x05R\x05index\x121\n" +
	"\x06status\x18< \x01(\x0e2\x19.eolymp.atlas.Test.StatusR\x06status\x12%\n" +
	"\x0estatus_message\x18= \x01(\tR\rstatusMessage\x12\x18\n" +
	"\aexample\x18\x04 \x01(\bR\aexample\x12\x1a\n" +
	"\binactive\x18\a \x01(\bR\binactive\x12\x16\n" +
	"\x06secret\x18\x06 \x01(\bR\x06secret\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x02R\x05score\x12*\n" +
	"\x11example_input_url\x18( \x01(\tR\x0fexampleInputUrl\x12,\n" +
	"\x12example_answer_url\x18) \x01(\tR\x10exampleAnswerUrl\x12.\n" +
	"\x13generated_input_url\x182 \x01(\tR\x11generatedInputUrl\x120\n" +
	"\x14generated_answer_url\x183 \x01(\tR\x12generatedAnswerUrl\x12\x1d\n" +
	"\tinput_url\x18\v \x01(\tH\x00R\binputUrl\x12G\n" +
	"\x0finput_generator\x18\f \x01(\v2\x1c.eolymp.atlas.Test.GeneratorH\x00R\x0einputGenerator\x12\x1f\n" +
	"\n" +
	"answer_url\x18\x15 \x01(\tH\x01R\tanswerUrl\x12I\n" +
	"\x10answer_generator\x18\x16 \x01(\v2\x1c.eolymp.atlas.Test.GeneratorH\x01R\x0fanswerGenerator\x1aJ\n" +
	"\tGenerator\x12\x1f\n" +
	"\vscript_name\x18\x01 \x01(\tR\n" +
	"scriptName\x12\x1c\n" +
	"\targuments\x18\x02 \x03(\tR\targuments\"A\n" +
	"\x06Status\x12\x12\n" +
	"\x0eUNKNOWN_STATUS\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\t\n" +
	"\x05READY\x10\x02\x12\v\n" +
	"\aINVALID\x10\x03B\a\n" +
	"\x05inputB\b\n" +
	"\x06answerB-Z+github.com/eolymp/go-sdk/eolymp/atlas;atlasb\x06proto3"

var (
	file_eolymp_atlas_testing_test_proto_rawDescOnce sync.Once
	file_eolymp_atlas_testing_test_proto_rawDescData []byte
)

func file_eolymp_atlas_testing_test_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_testing_test_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_testing_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_testing_test_proto_rawDesc), len(file_eolymp_atlas_testing_test_proto_rawDesc)))
	})
	return file_eolymp_atlas_testing_test_proto_rawDescData
}

var file_eolymp_atlas_testing_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_atlas_testing_test_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eolymp_atlas_testing_test_proto_goTypes = []any{
	(Test_Status)(0),       // 0: eolymp.atlas.Test.Status
	(*Test)(nil),           // 1: eolymp.atlas.Test
	(*Test_Generator)(nil), // 2: eolymp.atlas.Test.Generator
}
var file_eolymp_atlas_testing_test_proto_depIdxs = []int32{
	0, // 0: eolymp.atlas.Test.status:type_name -> eolymp.atlas.Test.Status
	2, // 1: eolymp.atlas.Test.input_generator:type_name -> eolymp.atlas.Test.Generator
	2, // 2: eolymp.atlas.Test.answer_generator:type_name -> eolymp.atlas.Test.Generator
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_testing_test_proto_init() }
func file_eolymp_atlas_testing_test_proto_init() {
	if File_eolymp_atlas_testing_test_proto != nil {
		return
	}
	file_eolymp_atlas_testing_test_proto_msgTypes[0].OneofWrappers = []any{
		(*Test_InputUrl)(nil),
		(*Test_InputGenerator)(nil),
		(*Test_AnswerUrl)(nil),
		(*Test_AnswerGenerator)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_testing_test_proto_rawDesc), len(file_eolymp_atlas_testing_test_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_atlas_testing_test_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_testing_test_proto_depIdxs,
		EnumInfos:         file_eolymp_atlas_testing_test_proto_enumTypes,
		MessageInfos:      file_eolymp_atlas_testing_test_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_testing_test_proto = out.File
	file_eolymp_atlas_testing_test_proto_goTypes = nil
	file_eolymp_atlas_testing_test_proto_depIdxs = nil
}
