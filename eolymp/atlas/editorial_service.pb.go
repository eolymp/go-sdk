// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: eolymp/atlas/editorial_service.proto

package atlas

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListEditorialsInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pagination
	Offset        int32             `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32             `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Version       uint32            `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	Render        bool              `protobuf:"varint,1,opt,name=render,proto3" json:"render,omitempty"`     // deprecated
	Extra         []Editorial_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Editorial_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEditorialsInput) Reset() {
	*x = ListEditorialsInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEditorialsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorialsInput) ProtoMessage() {}

func (x *ListEditorialsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorialsInput.ProtoReflect.Descriptor instead.
func (*ListEditorialsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListEditorialsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListEditorialsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListEditorialsInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListEditorialsInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListEditorialsInput) GetExtra() []Editorial_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListEditorialsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Editorial           `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEditorialsOutput) Reset() {
	*x = ListEditorialsOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEditorialsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorialsOutput) ProtoMessage() {}

func (x *ListEditorialsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorialsOutput.ProtoReflect.Descriptor instead.
func (*ListEditorialsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListEditorialsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListEditorialsOutput) GetItems() []*Editorial {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeEditorialInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EditorialId   string                 `protobuf:"bytes,2,opt,name=editorial_id,json=editorialId,proto3" json:"editorial_id,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	Render        bool                   `protobuf:"varint,3,opt,name=render,proto3" json:"render,omitempty"`     // deprecated
	Extra         []Editorial_Extra      `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Editorial_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeEditorialInput) Reset() {
	*x = DescribeEditorialInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeEditorialInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEditorialInput) ProtoMessage() {}

func (x *DescribeEditorialInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEditorialInput.ProtoReflect.Descriptor instead.
func (*DescribeEditorialInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeEditorialInput) GetEditorialId() string {
	if x != nil {
		return x.EditorialId
	}
	return ""
}

func (x *DescribeEditorialInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DescribeEditorialInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *DescribeEditorialInput) GetExtra() []Editorial_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeEditorialOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Editorial     *Editorial             `protobuf:"bytes,1,opt,name=editorial,proto3" json:"editorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeEditorialOutput) Reset() {
	*x = DescribeEditorialOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeEditorialOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEditorialOutput) ProtoMessage() {}

func (x *DescribeEditorialOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEditorialOutput.ProtoReflect.Descriptor instead.
func (*DescribeEditorialOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeEditorialOutput) GetEditorial() *Editorial {
	if x != nil {
		return x.Editorial
	}
	return nil
}

type LookupEditorialInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locale        string                 `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	Render        bool                   `protobuf:"varint,3,opt,name=render,proto3" json:"render,omitempty"`     // deprecated
	Extra         []Editorial_Extra      `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Editorial_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupEditorialInput) Reset() {
	*x = LookupEditorialInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupEditorialInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupEditorialInput) ProtoMessage() {}

func (x *LookupEditorialInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupEditorialInput.ProtoReflect.Descriptor instead.
func (*LookupEditorialInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{4}
}

func (x *LookupEditorialInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *LookupEditorialInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *LookupEditorialInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *LookupEditorialInput) GetExtra() []Editorial_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LookupEditorialOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Editorial     *Editorial             `protobuf:"bytes,1,opt,name=editorial,proto3" json:"editorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupEditorialOutput) Reset() {
	*x = LookupEditorialOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupEditorialOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupEditorialOutput) ProtoMessage() {}

func (x *LookupEditorialOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupEditorialOutput.ProtoReflect.Descriptor instead.
func (*LookupEditorialOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{5}
}

func (x *LookupEditorialOutput) GetEditorial() *Editorial {
	if x != nil {
		return x.Editorial
	}
	return nil
}

type PreviewEditorialInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Editorial     *Editorial             `protobuf:"bytes,2,opt,name=editorial,proto3" json:"editorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewEditorialInput) Reset() {
	*x = PreviewEditorialInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewEditorialInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewEditorialInput) ProtoMessage() {}

func (x *PreviewEditorialInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewEditorialInput.ProtoReflect.Descriptor instead.
func (*PreviewEditorialInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{6}
}

func (x *PreviewEditorialInput) GetEditorial() *Editorial {
	if x != nil {
		return x.Editorial
	}
	return nil
}

type PreviewEditorialOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Editorial     *Editorial             `protobuf:"bytes,1,opt,name=editorial,proto3" json:"editorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewEditorialOutput) Reset() {
	*x = PreviewEditorialOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewEditorialOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewEditorialOutput) ProtoMessage() {}

func (x *PreviewEditorialOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewEditorialOutput.ProtoReflect.Descriptor instead.
func (*PreviewEditorialOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{7}
}

func (x *PreviewEditorialOutput) GetEditorial() *Editorial {
	if x != nil {
		return x.Editorial
	}
	return nil
}

type CreateEditorialInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Editorial     *Editorial             `protobuf:"bytes,2,opt,name=editorial,proto3" json:"editorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEditorialInput) Reset() {
	*x = CreateEditorialInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEditorialInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEditorialInput) ProtoMessage() {}

func (x *CreateEditorialInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEditorialInput.ProtoReflect.Descriptor instead.
func (*CreateEditorialInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateEditorialInput) GetEditorial() *Editorial {
	if x != nil {
		return x.Editorial
	}
	return nil
}

type CreateEditorialOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EditorialId   string                 `protobuf:"bytes,1,opt,name=editorial_id,json=editorialId,proto3" json:"editorial_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEditorialOutput) Reset() {
	*x = CreateEditorialOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEditorialOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEditorialOutput) ProtoMessage() {}

func (x *CreateEditorialOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEditorialOutput.ProtoReflect.Descriptor instead.
func (*CreateEditorialOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateEditorialOutput) GetEditorialId() string {
	if x != nil {
		return x.EditorialId
	}
	return ""
}

type UpdateEditorialInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Patch         []Editorial_Patch      `protobuf:"varint,10,rep,packed,name=patch,proto3,enum=eolymp.atlas.Editorial_Patch" json:"patch,omitempty"`
	EditorialId   string                 `protobuf:"bytes,2,opt,name=editorial_id,json=editorialId,proto3" json:"editorial_id,omitempty"`
	Editorial     *Editorial             `protobuf:"bytes,3,opt,name=editorial,proto3" json:"editorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEditorialInput) Reset() {
	*x = UpdateEditorialInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEditorialInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEditorialInput) ProtoMessage() {}

func (x *UpdateEditorialInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEditorialInput.ProtoReflect.Descriptor instead.
func (*UpdateEditorialInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEditorialInput) GetPatch() []Editorial_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateEditorialInput) GetEditorialId() string {
	if x != nil {
		return x.EditorialId
	}
	return ""
}

func (x *UpdateEditorialInput) GetEditorial() *Editorial {
	if x != nil {
		return x.Editorial
	}
	return nil
}

type UpdateEditorialOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEditorialOutput) Reset() {
	*x = UpdateEditorialOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEditorialOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEditorialOutput) ProtoMessage() {}

func (x *UpdateEditorialOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEditorialOutput.ProtoReflect.Descriptor instead.
func (*UpdateEditorialOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{11}
}

type DeleteEditorialInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EditorialId   string                 `protobuf:"bytes,2,opt,name=editorial_id,json=editorialId,proto3" json:"editorial_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEditorialInput) Reset() {
	*x = DeleteEditorialInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEditorialInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEditorialInput) ProtoMessage() {}

func (x *DeleteEditorialInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEditorialInput.ProtoReflect.Descriptor instead.
func (*DeleteEditorialInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteEditorialInput) GetEditorialId() string {
	if x != nil {
		return x.EditorialId
	}
	return ""
}

type DeleteEditorialOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEditorialOutput) Reset() {
	*x = DeleteEditorialOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEditorialOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEditorialOutput) ProtoMessage() {}

func (x *DeleteEditorialOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEditorialOutput.ProtoReflect.Descriptor instead.
func (*DeleteEditorialOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{13}
}

type TranslateEditorialsInput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Source          string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`                                           // if empty, english translation will be used, if english translation is not available, first available translation will be used
	Target          []string               `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`                                           // list of target languages, if statement exists and it has automatic=true (or override_manual=true) it will be updated
	TargetAutomatic bool                   `protobuf:"varint,3,opt,name=target_automatic,json=targetAutomatic,proto3" json:"target_automatic,omitempty"` // add to targets all editorials with automatic=true
	OverrideManual  bool                   `protobuf:"varint,4,opt,name=override_manual,json=overrideManual,proto3" json:"override_manual,omitempty"`    // update editorials even if automatic=false
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TranslateEditorialsInput) Reset() {
	*x = TranslateEditorialsInput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslateEditorialsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateEditorialsInput) ProtoMessage() {}

func (x *TranslateEditorialsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateEditorialsInput.ProtoReflect.Descriptor instead.
func (*TranslateEditorialsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{14}
}

func (x *TranslateEditorialsInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TranslateEditorialsInput) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *TranslateEditorialsInput) GetTargetAutomatic() bool {
	if x != nil {
		return x.TargetAutomatic
	}
	return false
}

func (x *TranslateEditorialsInput) GetOverrideManual() bool {
	if x != nil {
		return x.OverrideManual
	}
	return false
}

type TranslateEditorialsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranslateEditorialsOutput) Reset() {
	*x = TranslateEditorialsOutput{}
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslateEditorialsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateEditorialsOutput) ProtoMessage() {}

func (x *TranslateEditorialsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_editorial_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateEditorialsOutput.ProtoReflect.Descriptor instead.
func (*TranslateEditorialsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_editorial_service_proto_rawDescGZIP(), []int{15}
}

func (x *TranslateEditorialsOutput) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

var File_eolymp_atlas_editorial_service_proto protoreflect.FileDescriptor

var file_eolymp_atlas_editorial_service_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x22, 0x5b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa3,
	0x01, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x22, 0x50, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x35, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22,
	0x4e, 0x0a, 0x15, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x22,
	0x4e, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x22,
	0x4f, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x22, 0x4d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x22,
	0x3a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x39, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x9e, 0x01, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x22, 0x32, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x32, 0xbd, 0x0a, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x22,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x1a, 0x0b, 0x2f, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0xa8, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x4c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f,
	0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x1a, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x2f, 0x7b, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xa8, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4c,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82,
	0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x2a, 0x1a, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xad, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x4b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64,
	0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x12, 0x1a, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x2f, 0x7b, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x97, 0x01, 0x0a,
	0x0f, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3,
	0x0a, 0x12, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a,
	0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x12, 0xa2, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x23, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x43, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x12, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x95, 0x01, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x21,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0xaf, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x47, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a,
	0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x15,
	0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x3a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3b, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_eolymp_atlas_editorial_service_proto_rawDescOnce sync.Once
	file_eolymp_atlas_editorial_service_proto_rawDescData []byte
)

func file_eolymp_atlas_editorial_service_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_editorial_service_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_editorial_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_editorial_service_proto_rawDesc), len(file_eolymp_atlas_editorial_service_proto_rawDesc)))
	})
	return file_eolymp_atlas_editorial_service_proto_rawDescData
}

var file_eolymp_atlas_editorial_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_eolymp_atlas_editorial_service_proto_goTypes = []any{
	(*ListEditorialsInput)(nil),       // 0: eolymp.atlas.ListEditorialsInput
	(*ListEditorialsOutput)(nil),      // 1: eolymp.atlas.ListEditorialsOutput
	(*DescribeEditorialInput)(nil),    // 2: eolymp.atlas.DescribeEditorialInput
	(*DescribeEditorialOutput)(nil),   // 3: eolymp.atlas.DescribeEditorialOutput
	(*LookupEditorialInput)(nil),      // 4: eolymp.atlas.LookupEditorialInput
	(*LookupEditorialOutput)(nil),     // 5: eolymp.atlas.LookupEditorialOutput
	(*PreviewEditorialInput)(nil),     // 6: eolymp.atlas.PreviewEditorialInput
	(*PreviewEditorialOutput)(nil),    // 7: eolymp.atlas.PreviewEditorialOutput
	(*CreateEditorialInput)(nil),      // 8: eolymp.atlas.CreateEditorialInput
	(*CreateEditorialOutput)(nil),     // 9: eolymp.atlas.CreateEditorialOutput
	(*UpdateEditorialInput)(nil),      // 10: eolymp.atlas.UpdateEditorialInput
	(*UpdateEditorialOutput)(nil),     // 11: eolymp.atlas.UpdateEditorialOutput
	(*DeleteEditorialInput)(nil),      // 12: eolymp.atlas.DeleteEditorialInput
	(*DeleteEditorialOutput)(nil),     // 13: eolymp.atlas.DeleteEditorialOutput
	(*TranslateEditorialsInput)(nil),  // 14: eolymp.atlas.TranslateEditorialsInput
	(*TranslateEditorialsOutput)(nil), // 15: eolymp.atlas.TranslateEditorialsOutput
	(Editorial_Extra)(0),              // 16: eolymp.atlas.Editorial.Extra
	(*Editorial)(nil),                 // 17: eolymp.atlas.Editorial
	(Editorial_Patch)(0),              // 18: eolymp.atlas.Editorial.Patch
}
var file_eolymp_atlas_editorial_service_proto_depIdxs = []int32{
	16, // 0: eolymp.atlas.ListEditorialsInput.extra:type_name -> eolymp.atlas.Editorial.Extra
	17, // 1: eolymp.atlas.ListEditorialsOutput.items:type_name -> eolymp.atlas.Editorial
	16, // 2: eolymp.atlas.DescribeEditorialInput.extra:type_name -> eolymp.atlas.Editorial.Extra
	17, // 3: eolymp.atlas.DescribeEditorialOutput.editorial:type_name -> eolymp.atlas.Editorial
	16, // 4: eolymp.atlas.LookupEditorialInput.extra:type_name -> eolymp.atlas.Editorial.Extra
	17, // 5: eolymp.atlas.LookupEditorialOutput.editorial:type_name -> eolymp.atlas.Editorial
	17, // 6: eolymp.atlas.PreviewEditorialInput.editorial:type_name -> eolymp.atlas.Editorial
	17, // 7: eolymp.atlas.PreviewEditorialOutput.editorial:type_name -> eolymp.atlas.Editorial
	17, // 8: eolymp.atlas.CreateEditorialInput.editorial:type_name -> eolymp.atlas.Editorial
	18, // 9: eolymp.atlas.UpdateEditorialInput.patch:type_name -> eolymp.atlas.Editorial.Patch
	17, // 10: eolymp.atlas.UpdateEditorialInput.editorial:type_name -> eolymp.atlas.Editorial
	8,  // 11: eolymp.atlas.EditorialService.CreateEditorial:input_type -> eolymp.atlas.CreateEditorialInput
	10, // 12: eolymp.atlas.EditorialService.UpdateEditorial:input_type -> eolymp.atlas.UpdateEditorialInput
	12, // 13: eolymp.atlas.EditorialService.DeleteEditorial:input_type -> eolymp.atlas.DeleteEditorialInput
	2,  // 14: eolymp.atlas.EditorialService.DescribeEditorial:input_type -> eolymp.atlas.DescribeEditorialInput
	4,  // 15: eolymp.atlas.EditorialService.LookupEditorial:input_type -> eolymp.atlas.LookupEditorialInput
	6,  // 16: eolymp.atlas.EditorialService.PreviewEditorial:input_type -> eolymp.atlas.PreviewEditorialInput
	0,  // 17: eolymp.atlas.EditorialService.ListEditorials:input_type -> eolymp.atlas.ListEditorialsInput
	14, // 18: eolymp.atlas.EditorialService.TranslateEditorials:input_type -> eolymp.atlas.TranslateEditorialsInput
	9,  // 19: eolymp.atlas.EditorialService.CreateEditorial:output_type -> eolymp.atlas.CreateEditorialOutput
	11, // 20: eolymp.atlas.EditorialService.UpdateEditorial:output_type -> eolymp.atlas.UpdateEditorialOutput
	13, // 21: eolymp.atlas.EditorialService.DeleteEditorial:output_type -> eolymp.atlas.DeleteEditorialOutput
	3,  // 22: eolymp.atlas.EditorialService.DescribeEditorial:output_type -> eolymp.atlas.DescribeEditorialOutput
	5,  // 23: eolymp.atlas.EditorialService.LookupEditorial:output_type -> eolymp.atlas.LookupEditorialOutput
	7,  // 24: eolymp.atlas.EditorialService.PreviewEditorial:output_type -> eolymp.atlas.PreviewEditorialOutput
	1,  // 25: eolymp.atlas.EditorialService.ListEditorials:output_type -> eolymp.atlas.ListEditorialsOutput
	15, // 26: eolymp.atlas.EditorialService.TranslateEditorials:output_type -> eolymp.atlas.TranslateEditorialsOutput
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_editorial_service_proto_init() }
func file_eolymp_atlas_editorial_service_proto_init() {
	if File_eolymp_atlas_editorial_service_proto != nil {
		return
	}
	file_eolymp_atlas_editorial_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_editorial_service_proto_rawDesc), len(file_eolymp_atlas_editorial_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_atlas_editorial_service_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_editorial_service_proto_depIdxs,
		MessageInfos:      file_eolymp_atlas_editorial_service_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_editorial_service_proto = out.File
	file_eolymp_atlas_editorial_service_proto_goTypes = nil
	file_eolymp_atlas_editorial_service_proto_depIdxs = nil
}
