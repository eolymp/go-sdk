// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/atlas/script_service.proto

package atlas

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListScriptsInput_Sortable int32

const (
	ListScriptsInput_NAME ListScriptsInput_Sortable = 0
)

// Enum value maps for ListScriptsInput_Sortable.
var (
	ListScriptsInput_Sortable_name = map[int32]string{
		0: "NAME",
	}
	ListScriptsInput_Sortable_value = map[string]int32{
		"NAME": 0,
	}
)

func (x ListScriptsInput_Sortable) Enum() *ListScriptsInput_Sortable {
	p := new(ListScriptsInput_Sortable)
	*p = x
	return p
}

func (x ListScriptsInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListScriptsInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_atlas_script_service_proto_enumTypes[0].Descriptor()
}

func (ListScriptsInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_atlas_script_service_proto_enumTypes[0]
}

func (x ListScriptsInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListScriptsInput_Sortable.Descriptor instead.
func (ListScriptsInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{9, 0}
}

type ScriptChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Before        *Script                `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Script                `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptChangedEvent) Reset() {
	*x = ScriptChangedEvent{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptChangedEvent) ProtoMessage() {}

func (x *ScriptChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptChangedEvent.ProtoReflect.Descriptor instead.
func (*ScriptChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{0}
}

func (x *ScriptChangedEvent) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *ScriptChangedEvent) GetBefore() *Script {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ScriptChangedEvent) GetAfter() *Script {
	if x != nil {
		return x.After
	}
	return nil
}

type CreateScriptInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        *Script                `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScriptInput) Reset() {
	*x = CreateScriptInput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScriptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScriptInput) ProtoMessage() {}

func (x *CreateScriptInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScriptInput.ProtoReflect.Descriptor instead.
func (*CreateScriptInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateScriptInput) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

type CreateScriptOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScriptId      string                 `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScriptOutput) Reset() {
	*x = CreateScriptOutput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScriptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScriptOutput) ProtoMessage() {}

func (x *CreateScriptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScriptOutput.ProtoReflect.Descriptor instead.
func (*CreateScriptOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateScriptOutput) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type UpdateScriptInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Patch         []Script_Patch_Field   `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.atlas.Script_Patch_Field" json:"patch,omitempty"`
	ScriptId      string                 `protobuf:"bytes,2,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Script        *Script                `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScriptInput) Reset() {
	*x = UpdateScriptInput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScriptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScriptInput) ProtoMessage() {}

func (x *UpdateScriptInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScriptInput.ProtoReflect.Descriptor instead.
func (*UpdateScriptInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateScriptInput) GetPatch() []Script_Patch_Field {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateScriptInput) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *UpdateScriptInput) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

type UpdateScriptOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScriptOutput) Reset() {
	*x = UpdateScriptOutput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScriptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScriptOutput) ProtoMessage() {}

func (x *UpdateScriptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScriptOutput.ProtoReflect.Descriptor instead.
func (*UpdateScriptOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{4}
}

type DeleteScriptInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScriptId      string                 `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScriptInput) Reset() {
	*x = DeleteScriptInput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScriptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScriptInput) ProtoMessage() {}

func (x *DeleteScriptInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScriptInput.ProtoReflect.Descriptor instead.
func (*DeleteScriptInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteScriptInput) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

type DeleteScriptOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScriptOutput) Reset() {
	*x = DeleteScriptOutput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScriptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScriptOutput) ProtoMessage() {}

func (x *DeleteScriptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScriptOutput.ProtoReflect.Descriptor instead.
func (*DeleteScriptOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{6}
}

type DescribeScriptInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScriptId      string                 `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Version       uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	Extra         []Script_Extra_Field   `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Script_Extra_Field" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeScriptInput) Reset() {
	*x = DescribeScriptInput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeScriptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScriptInput) ProtoMessage() {}

func (x *DescribeScriptInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScriptInput.ProtoReflect.Descriptor instead.
func (*DescribeScriptInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeScriptInput) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *DescribeScriptInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DescribeScriptInput) GetExtra() []Script_Extra_Field {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeScriptOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        *Script                `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeScriptOutput) Reset() {
	*x = DescribeScriptOutput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeScriptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScriptOutput) ProtoMessage() {}

func (x *DescribeScriptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScriptOutput.ProtoReflect.Descriptor instead.
func (*DescribeScriptOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeScriptOutput) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

type ListScriptsInput struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Version uint32                 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"` // request data for specific problem version
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Search        string                    `protobuf:"bytes,20,opt,name=search,proto3" json:"search,omitempty"`
	Filters       *ListScriptsInput_Filter  `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort          ListScriptsInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.atlas.ListScriptsInput_Sortable" json:"sort,omitempty"`
	Order         wellknown.Direction       `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	Extra         []Script_Extra_Field      `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.atlas.Script_Extra_Field" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScriptsInput) Reset() {
	*x = ListScriptsInput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScriptsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScriptsInput) ProtoMessage() {}

func (x *ListScriptsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScriptsInput.ProtoReflect.Descriptor instead.
func (*ListScriptsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListScriptsInput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListScriptsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListScriptsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListScriptsInput) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListScriptsInput) GetFilters() *ListScriptsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListScriptsInput) GetSort() ListScriptsInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListScriptsInput_NAME
}

func (x *ListScriptsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListScriptsInput) GetExtra() []Script_Extra_Field {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListScriptsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Script              `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScriptsOutput) Reset() {
	*x = ListScriptsOutput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScriptsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScriptsOutput) ProtoMessage() {}

func (x *ListScriptsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScriptsOutput.ProtoReflect.Descriptor instead.
func (*ListScriptsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListScriptsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListScriptsOutput) GetItems() []*Script {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExecuteStressCheckInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScriptName    string                 `protobuf:"bytes,1,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteStressCheckInput) Reset() {
	*x = ExecuteStressCheckInput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteStressCheckInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteStressCheckInput) ProtoMessage() {}

func (x *ExecuteStressCheckInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteStressCheckInput.ProtoReflect.Descriptor instead.
func (*ExecuteStressCheckInput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteStressCheckInput) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

type ExecuteStressCheckOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteStressCheckOutput) Reset() {
	*x = ExecuteStressCheckOutput{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteStressCheckOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteStressCheckOutput) ProtoMessage() {}

func (x *ExecuteStressCheckOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteStressCheckOutput.ProtoReflect.Descriptor instead.
func (*ExecuteStressCheckOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{12}
}

type ListScriptsInput_Filter struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID     `protobuf:"bytes,10,rep,name=id,proto3" json:"id,omitempty"`
	Name          []*wellknown.ExpressionString `protobuf:"bytes,11,rep,name=name,proto3" json:"name,omitempty"`
	Runtime       []*wellknown.ExpressionEnum   `protobuf:"bytes,12,rep,name=runtime,proto3" json:"runtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScriptsInput_Filter) Reset() {
	*x = ListScriptsInput_Filter{}
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScriptsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScriptsInput_Filter) ProtoMessage() {}

func (x *ListScriptsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_atlas_script_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScriptsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListScriptsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_atlas_script_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListScriptsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListScriptsInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListScriptsInput_Filter) GetRuntime() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Runtime
	}
	return nil
}

var File_eolymp_atlas_script_service_proto protoreflect.FileDescriptor

const file_eolymp_atlas_script_service_proto_rawDesc = "" +
	"\n" +
	"!eolymp/atlas/script_service.proto\x12\feolymp.atlas\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x19eolymp/atlas/script.proto\x1a eolymp/wellknown/direction.proto\x1a!eolymp/wellknown/expression.proto\"\x8d\x01\n" +
	"\x12ScriptChangedEvent\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\tR\tproblemId\x12,\n" +
	"\x06before\x18\x02 \x01(\v2\x14.eolymp.atlas.ScriptR\x06before\x12*\n" +
	"\x05after\x18\x03 \x01(\v2\x14.eolymp.atlas.ScriptR\x05after\"A\n" +
	"\x11CreateScriptInput\x12,\n" +
	"\x06script\x18\x01 \x01(\v2\x14.eolymp.atlas.ScriptR\x06script\"1\n" +
	"\x12CreateScriptOutput\x12\x1b\n" +
	"\tscript_id\x18\x01 \x01(\tR\bscriptId\"\x96\x01\n" +
	"\x11UpdateScriptInput\x126\n" +
	"\x05patch\x18\x01 \x03(\x0e2 .eolymp.atlas.Script.Patch.FieldR\x05patch\x12\x1b\n" +
	"\tscript_id\x18\x02 \x01(\tR\bscriptId\x12,\n" +
	"\x06script\x18\x03 \x01(\v2\x14.eolymp.atlas.ScriptR\x06script\"\x14\n" +
	"\x12UpdateScriptOutput\"0\n" +
	"\x11DeleteScriptInput\x12\x1b\n" +
	"\tscript_id\x18\x01 \x01(\tR\bscriptId\"\x14\n" +
	"\x12DeleteScriptOutput\"\x85\x01\n" +
	"\x13DescribeScriptInput\x12\x1b\n" +
	"\tscript_id\x18\x01 \x01(\tR\bscriptId\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\x127\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2 .eolymp.atlas.Script.Extra.FieldR\x05extra\"D\n" +
	"\x14DescribeScriptOutput\x12,\n" +
	"\x06script\x18\x01 \x01(\v2\x14.eolymp.atlas.ScriptR\x06script\"\x9f\x04\n" +
	"\x10ListScriptsInput\x12\x18\n" +
	"\aversion\x18d \x01(\rR\aversion\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12\x16\n" +
	"\x06search\x18\x14 \x01(\tR\x06search\x12?\n" +
	"\afilters\x18( \x01(\v2%.eolymp.atlas.ListScriptsInput.FilterR\afilters\x12;\n" +
	"\x04sort\x182 \x01(\x0e2'.eolymp.atlas.ListScriptsInput.SortableR\x04sort\x121\n" +
	"\x05order\x183 \x01(\x0e2\x1b.eolymp.wellknown.DirectionR\x05order\x127\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2 .eolymp.atlas.Script.Extra.FieldR\x05extra\x1a\xac\x01\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\n" +
	" \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x126\n" +
	"\x04name\x18\v \x03(\v2\".eolymp.wellknown.ExpressionStringR\x04name\x12:\n" +
	"\aruntime\x18\f \x03(\v2 .eolymp.wellknown.ExpressionEnumR\aruntime\"\x14\n" +
	"\bSortable\x12\b\n" +
	"\x04NAME\x10\x00\"U\n" +
	"\x11ListScriptsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.eolymp.atlas.ScriptR\x05items\":\n" +
	"\x17ExecuteStressCheckInput\x12\x1f\n" +
	"\vscript_name\x18\x01 \x01(\tR\n" +
	"scriptName\"\x1a\n" +
	"\x18ExecuteStressCheckOutput2\xb3\a\n" +
	"\rScriptService\x12\x8d\x01\n" +
	"\fCreateScript\x12\x1f.eolymp.atlas.CreateScriptInput\x1a .eolymp.atlas.CreateScriptOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\n" +
	"\x1a\b/scripts\x12\x99\x01\n" +
	"\fUpdateScript\x12\x1f.eolymp.atlas.UpdateScriptInput\x1a .eolymp.atlas.UpdateScriptOutput\"F\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x16\x1a\x14/scripts/{script_id}\x12\x99\x01\n" +
	"\fDeleteScript\x12\x1f.eolymp.atlas.DeleteScriptInput\x1a .eolymp.atlas.DeleteScriptOutput\"F\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x16*\x14/scripts/{script_id}\x12\x9e\x01\n" +
	"\x0eDescribeScript\x12!.eolymp.atlas.DescribeScriptInput\x1a\".eolymp.atlas.DescribeScriptOutput\"E\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02\x16\x12\x14/scripts/{script_id}\x12\x89\x01\n" +
	"\vListScripts\x12\x1e.eolymp.atlas.ListScriptsInput\x1a\x1f.eolymp.atlas.ListScriptsOutput\"9\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12atlas:problem:read\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/scripts\x12\xac\x01\n" +
	"\x12ExecuteStressCheck\x12%.eolymp.atlas.ExecuteStressCheckInput\x1a&.eolymp.atlas.ExecuteStressCheckOutput\"G\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13atlas:problem:write\x82\xd3\xe4\x93\x02\x17\"\x15/scripts:stress-checkB-Z+github.com/eolymp/go-sdk/eolymp/atlas;atlasb\x06proto3"

var (
	file_eolymp_atlas_script_service_proto_rawDescOnce sync.Once
	file_eolymp_atlas_script_service_proto_rawDescData []byte
)

func file_eolymp_atlas_script_service_proto_rawDescGZIP() []byte {
	file_eolymp_atlas_script_service_proto_rawDescOnce.Do(func() {
		file_eolymp_atlas_script_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_atlas_script_service_proto_rawDesc), len(file_eolymp_atlas_script_service_proto_rawDesc)))
	})
	return file_eolymp_atlas_script_service_proto_rawDescData
}

var file_eolymp_atlas_script_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_atlas_script_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_eolymp_atlas_script_service_proto_goTypes = []any{
	(ListScriptsInput_Sortable)(0),     // 0: eolymp.atlas.ListScriptsInput.Sortable
	(*ScriptChangedEvent)(nil),         // 1: eolymp.atlas.ScriptChangedEvent
	(*CreateScriptInput)(nil),          // 2: eolymp.atlas.CreateScriptInput
	(*CreateScriptOutput)(nil),         // 3: eolymp.atlas.CreateScriptOutput
	(*UpdateScriptInput)(nil),          // 4: eolymp.atlas.UpdateScriptInput
	(*UpdateScriptOutput)(nil),         // 5: eolymp.atlas.UpdateScriptOutput
	(*DeleteScriptInput)(nil),          // 6: eolymp.atlas.DeleteScriptInput
	(*DeleteScriptOutput)(nil),         // 7: eolymp.atlas.DeleteScriptOutput
	(*DescribeScriptInput)(nil),        // 8: eolymp.atlas.DescribeScriptInput
	(*DescribeScriptOutput)(nil),       // 9: eolymp.atlas.DescribeScriptOutput
	(*ListScriptsInput)(nil),           // 10: eolymp.atlas.ListScriptsInput
	(*ListScriptsOutput)(nil),          // 11: eolymp.atlas.ListScriptsOutput
	(*ExecuteStressCheckInput)(nil),    // 12: eolymp.atlas.ExecuteStressCheckInput
	(*ExecuteStressCheckOutput)(nil),   // 13: eolymp.atlas.ExecuteStressCheckOutput
	(*ListScriptsInput_Filter)(nil),    // 14: eolymp.atlas.ListScriptsInput.Filter
	(*Script)(nil),                     // 15: eolymp.atlas.Script
	(Script_Patch_Field)(0),            // 16: eolymp.atlas.Script.Patch.Field
	(Script_Extra_Field)(0),            // 17: eolymp.atlas.Script.Extra.Field
	(wellknown.Direction)(0),           // 18: eolymp.wellknown.Direction
	(*wellknown.ExpressionID)(nil),     // 19: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil), // 20: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionEnum)(nil),   // 21: eolymp.wellknown.ExpressionEnum
}
var file_eolymp_atlas_script_service_proto_depIdxs = []int32{
	15, // 0: eolymp.atlas.ScriptChangedEvent.before:type_name -> eolymp.atlas.Script
	15, // 1: eolymp.atlas.ScriptChangedEvent.after:type_name -> eolymp.atlas.Script
	15, // 2: eolymp.atlas.CreateScriptInput.script:type_name -> eolymp.atlas.Script
	16, // 3: eolymp.atlas.UpdateScriptInput.patch:type_name -> eolymp.atlas.Script.Patch.Field
	15, // 4: eolymp.atlas.UpdateScriptInput.script:type_name -> eolymp.atlas.Script
	17, // 5: eolymp.atlas.DescribeScriptInput.extra:type_name -> eolymp.atlas.Script.Extra.Field
	15, // 6: eolymp.atlas.DescribeScriptOutput.script:type_name -> eolymp.atlas.Script
	14, // 7: eolymp.atlas.ListScriptsInput.filters:type_name -> eolymp.atlas.ListScriptsInput.Filter
	0,  // 8: eolymp.atlas.ListScriptsInput.sort:type_name -> eolymp.atlas.ListScriptsInput.Sortable
	18, // 9: eolymp.atlas.ListScriptsInput.order:type_name -> eolymp.wellknown.Direction
	17, // 10: eolymp.atlas.ListScriptsInput.extra:type_name -> eolymp.atlas.Script.Extra.Field
	15, // 11: eolymp.atlas.ListScriptsOutput.items:type_name -> eolymp.atlas.Script
	19, // 12: eolymp.atlas.ListScriptsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	20, // 13: eolymp.atlas.ListScriptsInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	21, // 14: eolymp.atlas.ListScriptsInput.Filter.runtime:type_name -> eolymp.wellknown.ExpressionEnum
	2,  // 15: eolymp.atlas.ScriptService.CreateScript:input_type -> eolymp.atlas.CreateScriptInput
	4,  // 16: eolymp.atlas.ScriptService.UpdateScript:input_type -> eolymp.atlas.UpdateScriptInput
	6,  // 17: eolymp.atlas.ScriptService.DeleteScript:input_type -> eolymp.atlas.DeleteScriptInput
	8,  // 18: eolymp.atlas.ScriptService.DescribeScript:input_type -> eolymp.atlas.DescribeScriptInput
	10, // 19: eolymp.atlas.ScriptService.ListScripts:input_type -> eolymp.atlas.ListScriptsInput
	12, // 20: eolymp.atlas.ScriptService.ExecuteStressCheck:input_type -> eolymp.atlas.ExecuteStressCheckInput
	3,  // 21: eolymp.atlas.ScriptService.CreateScript:output_type -> eolymp.atlas.CreateScriptOutput
	5,  // 22: eolymp.atlas.ScriptService.UpdateScript:output_type -> eolymp.atlas.UpdateScriptOutput
	7,  // 23: eolymp.atlas.ScriptService.DeleteScript:output_type -> eolymp.atlas.DeleteScriptOutput
	9,  // 24: eolymp.atlas.ScriptService.DescribeScript:output_type -> eolymp.atlas.DescribeScriptOutput
	11, // 25: eolymp.atlas.ScriptService.ListScripts:output_type -> eolymp.atlas.ListScriptsOutput
	13, // 26: eolymp.atlas.ScriptService.ExecuteStressCheck:output_type -> eolymp.atlas.ExecuteStressCheckOutput
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_eolymp_atlas_script_service_proto_init() }
func file_eolymp_atlas_script_service_proto_init() {
	if File_eolymp_atlas_script_service_proto != nil {
		return
	}
	file_eolymp_atlas_script_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_atlas_script_service_proto_rawDesc), len(file_eolymp_atlas_script_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_atlas_script_service_proto_goTypes,
		DependencyIndexes: file_eolymp_atlas_script_service_proto_depIdxs,
		EnumInfos:         file_eolymp_atlas_script_service_proto_enumTypes,
		MessageInfos:      file_eolymp_atlas_script_service_proto_msgTypes,
	}.Build()
	File_eolymp_atlas_script_service_proto = out.File
	file_eolymp_atlas_script_service_proto_goTypes = nil
	file_eolymp_atlas_script_service_proto_depIdxs = nil
}
