// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v4.24.4
// source: eolymp/printer/printer_service.proto

package printer

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePrinterInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Printer       *Printer               `protobuf:"bytes,1,opt,name=printer,proto3" json:"printer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrinterInput) Reset() {
	*x = CreatePrinterInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrinterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrinterInput) ProtoMessage() {}

func (x *CreatePrinterInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrinterInput.ProtoReflect.Descriptor instead.
func (*CreatePrinterInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePrinterInput) GetPrinter() *Printer {
	if x != nil {
		return x.Printer
	}
	return nil
}

type CreatePrinterOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrinterId     string                 `protobuf:"bytes,1,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrinterOutput) Reset() {
	*x = CreatePrinterOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrinterOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrinterOutput) ProtoMessage() {}

func (x *CreatePrinterOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrinterOutput.ProtoReflect.Descriptor instead.
func (*CreatePrinterOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePrinterOutput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

type UpdatePrinterInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrinterId     string                 `protobuf:"bytes,1,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	Printer       *Printer               `protobuf:"bytes,2,opt,name=printer,proto3" json:"printer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrinterInput) Reset() {
	*x = UpdatePrinterInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrinterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrinterInput) ProtoMessage() {}

func (x *UpdatePrinterInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrinterInput.ProtoReflect.Descriptor instead.
func (*UpdatePrinterInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePrinterInput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

func (x *UpdatePrinterInput) GetPrinter() *Printer {
	if x != nil {
		return x.Printer
	}
	return nil
}

type UpdatePrinterOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrinterOutput) Reset() {
	*x = UpdatePrinterOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrinterOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrinterOutput) ProtoMessage() {}

func (x *UpdatePrinterOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrinterOutput.ProtoReflect.Descriptor instead.
func (*UpdatePrinterOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{3}
}

type DeletePrinterInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrinterId     string                 `protobuf:"bytes,1,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePrinterInput) Reset() {
	*x = DeletePrinterInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrinterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrinterInput) ProtoMessage() {}

func (x *DeletePrinterInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrinterInput.ProtoReflect.Descriptor instead.
func (*DeletePrinterInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePrinterInput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

type DeletePrinterOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePrinterOutput) Reset() {
	*x = DeletePrinterOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrinterOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrinterOutput) ProtoMessage() {}

func (x *DeletePrinterOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrinterOutput.ProtoReflect.Descriptor instead.
func (*DeletePrinterOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{5}
}

type DescribePrinterInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrinterId     string                 `protobuf:"bytes,1,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribePrinterInput) Reset() {
	*x = DescribePrinterInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribePrinterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePrinterInput) ProtoMessage() {}

func (x *DescribePrinterInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePrinterInput.ProtoReflect.Descriptor instead.
func (*DescribePrinterInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribePrinterInput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

type DescribePrinterOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Printer       *Printer               `protobuf:"bytes,1,opt,name=printer,proto3" json:"printer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribePrinterOutput) Reset() {
	*x = DescribePrinterOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribePrinterOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePrinterOutput) ProtoMessage() {}

func (x *DescribePrinterOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePrinterOutput.ProtoReflect.Descriptor instead.
func (*DescribePrinterOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribePrinterOutput) GetPrinter() *Printer {
	if x != nil {
		return x.Printer
	}
	return nil
}

type ListPrintersInput struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Size          int32                     `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Offset        int32                     `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Search        string                    `protobuf:"bytes,30,opt,name=search,proto3" json:"search,omitempty"`
	Filters       *ListPrintersInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrintersInput) Reset() {
	*x = ListPrintersInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrintersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrintersInput) ProtoMessage() {}

func (x *ListPrintersInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrintersInput.ProtoReflect.Descriptor instead.
func (*ListPrintersInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListPrintersInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListPrintersInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPrintersInput) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListPrintersInput) GetFilters() *ListPrintersInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListPrintersOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Printer             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrintersOutput) Reset() {
	*x = ListPrintersOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrintersOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrintersOutput) ProtoMessage() {}

func (x *ListPrintersOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrintersOutput.ProtoReflect.Descriptor instead.
func (*ListPrintersOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListPrintersOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPrintersOutput) GetItems() []*Printer {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribePrinterJobInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrinterId     string                 `protobuf:"bytes,1,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribePrinterJobInput) Reset() {
	*x = DescribePrinterJobInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribePrinterJobInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePrinterJobInput) ProtoMessage() {}

func (x *DescribePrinterJobInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePrinterJobInput.ProtoReflect.Descriptor instead.
func (*DescribePrinterJobInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribePrinterJobInput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

func (x *DescribePrinterJobInput) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type DescribePrinterJobOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribePrinterJobOutput) Reset() {
	*x = DescribePrinterJobOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribePrinterJobOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePrinterJobOutput) ProtoMessage() {}

func (x *DescribePrinterJobOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePrinterJobOutput.ProtoReflect.Descriptor instead.
func (*DescribePrinterJobOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{11}
}

func (x *DescribePrinterJobOutput) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type ListPrinterJobsInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	PrinterId string                 `protobuf:"bytes,2,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters       *ListPrinterJobsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrinterJobsInput) Reset() {
	*x = ListPrinterJobsInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrinterJobsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrinterJobsInput) ProtoMessage() {}

func (x *ListPrinterJobsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrinterJobsInput.ProtoReflect.Descriptor instead.
func (*ListPrinterJobsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListPrinterJobsInput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

func (x *ListPrinterJobsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPrinterJobsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListPrinterJobsInput) GetFilters() *ListPrinterJobsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListPrinterJobsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Job                 `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrinterJobsOutput) Reset() {
	*x = ListPrinterJobsOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrinterJobsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrinterJobsOutput) ProtoMessage() {}

func (x *ListPrinterJobsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrinterJobsOutput.ProtoReflect.Descriptor instead.
func (*ListPrinterJobsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListPrinterJobsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPrinterJobsOutput) GetItems() []*Job {
	if x != nil {
		return x.Items
	}
	return nil
}

type CancelPrinterJobInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrinterId     string                 `protobuf:"bytes,1,opt,name=printer_id,json=printerId,proto3" json:"printer_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelPrinterJobInput) Reset() {
	*x = CancelPrinterJobInput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelPrinterJobInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPrinterJobInput) ProtoMessage() {}

func (x *CancelPrinterJobInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPrinterJobInput.ProtoReflect.Descriptor instead.
func (*CancelPrinterJobInput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{14}
}

func (x *CancelPrinterJobInput) GetPrinterId() string {
	if x != nil {
		return x.PrinterId
	}
	return ""
}

func (x *CancelPrinterJobInput) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type CancelPrinterJobOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelPrinterJobOutput) Reset() {
	*x = CancelPrinterJobOutput{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelPrinterJobOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPrinterJobOutput) ProtoMessage() {}

func (x *CancelPrinterJobOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPrinterJobOutput.ProtoReflect.Descriptor instead.
func (*CancelPrinterJobOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{15}
}

type ListPrintersInput_Filter struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID     `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Status        []*wellknown.ExpressionEnum   `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	Name          []*wellknown.ExpressionString `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrintersInput_Filter) Reset() {
	*x = ListPrintersInput_Filter{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrintersInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrintersInput_Filter) ProtoMessage() {}

func (x *ListPrintersInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrintersInput_Filter.ProtoReflect.Descriptor instead.
func (*ListPrintersInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListPrintersInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListPrintersInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListPrintersInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

type ListPrinterJobsInput_Filter struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID   `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Status        []*wellknown.ExpressionEnum `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrinterJobsInput_Filter) Reset() {
	*x = ListPrinterJobsInput_Filter{}
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrinterJobsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrinterJobsInput_Filter) ProtoMessage() {}

func (x *ListPrinterJobsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_printer_printer_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrinterJobsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListPrinterJobsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_printer_printer_service_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListPrinterJobsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListPrinterJobsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_eolymp_printer_printer_service_proto protoreflect.FileDescriptor

var file_eolymp_printer_printer_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x33, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a,
	0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0xc8, 0x02, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x42, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x4f, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x22, 0x41, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x22, 0x9c, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x72,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x58, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x15,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0xed, 0x0a, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x3d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40,
	0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x3a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4a, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3,
	0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x22, 0x16, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x4a, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x3a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x49, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2,
	0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x3a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x93, 0x01, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x3c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x3a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x72, 0x65, 0x61,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x12, 0xc1, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0xea, 0xe2,
	0x0a, 0x0c, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0xf4, 0x03, 0x82, 0xe3,
	0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x12, 0x24, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2f, 0x7b, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a,
	0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0xbb, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x25, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x19,
	0x8a, 0xe3, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a,
	0x24, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2f, 0x7b, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x3b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_printer_printer_service_proto_rawDescOnce sync.Once
	file_eolymp_printer_printer_service_proto_rawDescData = file_eolymp_printer_printer_service_proto_rawDesc
)

func file_eolymp_printer_printer_service_proto_rawDescGZIP() []byte {
	file_eolymp_printer_printer_service_proto_rawDescOnce.Do(func() {
		file_eolymp_printer_printer_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_printer_printer_service_proto_rawDescData)
	})
	return file_eolymp_printer_printer_service_proto_rawDescData
}

var file_eolymp_printer_printer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_eolymp_printer_printer_service_proto_goTypes = []any{
	(*CreatePrinterInput)(nil),          // 0: eolymp.printer.CreatePrinterInput
	(*CreatePrinterOutput)(nil),         // 1: eolymp.printer.CreatePrinterOutput
	(*UpdatePrinterInput)(nil),          // 2: eolymp.printer.UpdatePrinterInput
	(*UpdatePrinterOutput)(nil),         // 3: eolymp.printer.UpdatePrinterOutput
	(*DeletePrinterInput)(nil),          // 4: eolymp.printer.DeletePrinterInput
	(*DeletePrinterOutput)(nil),         // 5: eolymp.printer.DeletePrinterOutput
	(*DescribePrinterInput)(nil),        // 6: eolymp.printer.DescribePrinterInput
	(*DescribePrinterOutput)(nil),       // 7: eolymp.printer.DescribePrinterOutput
	(*ListPrintersInput)(nil),           // 8: eolymp.printer.ListPrintersInput
	(*ListPrintersOutput)(nil),          // 9: eolymp.printer.ListPrintersOutput
	(*DescribePrinterJobInput)(nil),     // 10: eolymp.printer.DescribePrinterJobInput
	(*DescribePrinterJobOutput)(nil),    // 11: eolymp.printer.DescribePrinterJobOutput
	(*ListPrinterJobsInput)(nil),        // 12: eolymp.printer.ListPrinterJobsInput
	(*ListPrinterJobsOutput)(nil),       // 13: eolymp.printer.ListPrinterJobsOutput
	(*CancelPrinterJobInput)(nil),       // 14: eolymp.printer.CancelPrinterJobInput
	(*CancelPrinterJobOutput)(nil),      // 15: eolymp.printer.CancelPrinterJobOutput
	(*ListPrintersInput_Filter)(nil),    // 16: eolymp.printer.ListPrintersInput.Filter
	(*ListPrinterJobsInput_Filter)(nil), // 17: eolymp.printer.ListPrinterJobsInput.Filter
	(*Printer)(nil),                     // 18: eolymp.printer.Printer
	(*Job)(nil),                         // 19: eolymp.printer.Job
	(*wellknown.ExpressionID)(nil),      // 20: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionEnum)(nil),    // 21: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionString)(nil),  // 22: eolymp.wellknown.ExpressionString
}
var file_eolymp_printer_printer_service_proto_depIdxs = []int32{
	18, // 0: eolymp.printer.CreatePrinterInput.printer:type_name -> eolymp.printer.Printer
	18, // 1: eolymp.printer.UpdatePrinterInput.printer:type_name -> eolymp.printer.Printer
	18, // 2: eolymp.printer.DescribePrinterOutput.printer:type_name -> eolymp.printer.Printer
	16, // 3: eolymp.printer.ListPrintersInput.filters:type_name -> eolymp.printer.ListPrintersInput.Filter
	18, // 4: eolymp.printer.ListPrintersOutput.items:type_name -> eolymp.printer.Printer
	19, // 5: eolymp.printer.DescribePrinterJobOutput.job:type_name -> eolymp.printer.Job
	17, // 6: eolymp.printer.ListPrinterJobsInput.filters:type_name -> eolymp.printer.ListPrinterJobsInput.Filter
	19, // 7: eolymp.printer.ListPrinterJobsOutput.items:type_name -> eolymp.printer.Job
	20, // 8: eolymp.printer.ListPrintersInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	21, // 9: eolymp.printer.ListPrintersInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	22, // 10: eolymp.printer.ListPrintersInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	20, // 11: eolymp.printer.ListPrinterJobsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	21, // 12: eolymp.printer.ListPrinterJobsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	0,  // 13: eolymp.printer.PrinterService.CreatePrinter:input_type -> eolymp.printer.CreatePrinterInput
	2,  // 14: eolymp.printer.PrinterService.UpdatePrinter:input_type -> eolymp.printer.UpdatePrinterInput
	4,  // 15: eolymp.printer.PrinterService.DeletePrinter:input_type -> eolymp.printer.DeletePrinterInput
	6,  // 16: eolymp.printer.PrinterService.DescribePrinter:input_type -> eolymp.printer.DescribePrinterInput
	8,  // 17: eolymp.printer.PrinterService.ListPrinters:input_type -> eolymp.printer.ListPrintersInput
	10, // 18: eolymp.printer.PrinterService.DescribePrinterJob:input_type -> eolymp.printer.DescribePrinterJobInput
	12, // 19: eolymp.printer.PrinterService.ListPrinterJobs:input_type -> eolymp.printer.ListPrinterJobsInput
	14, // 20: eolymp.printer.PrinterService.CancelPrinterJob:input_type -> eolymp.printer.CancelPrinterJobInput
	1,  // 21: eolymp.printer.PrinterService.CreatePrinter:output_type -> eolymp.printer.CreatePrinterOutput
	3,  // 22: eolymp.printer.PrinterService.UpdatePrinter:output_type -> eolymp.printer.UpdatePrinterOutput
	5,  // 23: eolymp.printer.PrinterService.DeletePrinter:output_type -> eolymp.printer.DeletePrinterOutput
	7,  // 24: eolymp.printer.PrinterService.DescribePrinter:output_type -> eolymp.printer.DescribePrinterOutput
	9,  // 25: eolymp.printer.PrinterService.ListPrinters:output_type -> eolymp.printer.ListPrintersOutput
	11, // 26: eolymp.printer.PrinterService.DescribePrinterJob:output_type -> eolymp.printer.DescribePrinterJobOutput
	13, // 27: eolymp.printer.PrinterService.ListPrinterJobs:output_type -> eolymp.printer.ListPrinterJobsOutput
	15, // 28: eolymp.printer.PrinterService.CancelPrinterJob:output_type -> eolymp.printer.CancelPrinterJobOutput
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_eolymp_printer_printer_service_proto_init() }
func file_eolymp_printer_printer_service_proto_init() {
	if File_eolymp_printer_printer_service_proto != nil {
		return
	}
	file_eolymp_printer_printer_proto_init()
	file_eolymp_printer_printer_job_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_printer_printer_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_printer_printer_service_proto_goTypes,
		DependencyIndexes: file_eolymp_printer_printer_service_proto_depIdxs,
		MessageInfos:      file_eolymp_printer_printer_service_proto_msgTypes,
	}.Build()
	File_eolymp_printer_printer_service_proto = out.File
	file_eolymp_printer_printer_service_proto_rawDesc = nil
	file_eolymp_printer_printer_service_proto_goTypes = nil
	file_eolymp_printer_printer_service_proto_depIdxs = nil
}
