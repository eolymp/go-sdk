// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/asset/asset_service.proto

package asset

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadImageInput struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Name          string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Crop          *UploadImageInput_Crop   `protobuf:"bytes,10,opt,name=crop,proto3" json:"crop,omitempty"`
	Size          *UploadImageInput_Size   `protobuf:"bytes,11,opt,name=size,proto3" json:"size,omitempty"`
	Variants      []*UploadImageInput_Size `protobuf:"bytes,20,rep,name=variants,proto3" json:"variants,omitempty"`
	Data          []byte                   `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageInput) Reset() {
	*x = UploadImageInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageInput) ProtoMessage() {}

func (x *UploadImageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageInput.ProtoReflect.Descriptor instead.
func (*UploadImageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadImageInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadImageInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadImageInput) GetCrop() *UploadImageInput_Crop {
	if x != nil {
		return x.Crop
	}
	return nil
}

func (x *UploadImageInput) GetSize() *UploadImageInput_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *UploadImageInput) GetVariants() []*UploadImageInput_Size {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *UploadImageInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadImageOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageUrl      string                 `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageOutput) Reset() {
	*x = UploadImageOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageOutput) ProtoMessage() {}

func (x *UploadImageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageOutput.ProtoReflect.Descriptor instead.
func (*UploadImageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadImageOutput) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type UploadFileInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileInput) Reset() {
	*x = UploadFileInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInput) ProtoMessage() {}

func (x *UploadFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInput.ProtoReflect.Descriptor instead.
func (*UploadFileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{2}
}

func (x *UploadFileInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadFileInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadFileInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadFileOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileUrl       string                 `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileOutput) Reset() {
	*x = UploadFileOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileOutput) ProtoMessage() {}

func (x *UploadFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileOutput.ProtoReflect.Descriptor instead.
func (*UploadFileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{3}
}

func (x *UploadFileOutput) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type UploadAssetInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // name might be used to infer file type and to set Content-Disposition header
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // mime type, if empty inferred from extension in the filename
	Keys          []string               `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	Ttl           uint32                 `protobuf:"varint,20,opt,name=ttl,proto3" json:"ttl,omitempty"`   // time to live in seconds, 0 - forever
	Data          []byte                 `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"` // up to 5MB (5M bytes) of data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetInput) Reset() {
	*x = UploadAssetInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetInput) ProtoMessage() {}

func (x *UploadAssetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetInput.ProtoReflect.Descriptor instead.
func (*UploadAssetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{4}
}

func (x *UploadAssetInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadAssetInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadAssetInput) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *UploadAssetInput) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *UploadAssetInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadAssetOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetUrl      string                 `protobuf:"bytes,1,opt,name=asset_url,json=assetUrl,proto3" json:"asset_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetOutput) Reset() {
	*x = UploadAssetOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetOutput) ProtoMessage() {}

func (x *UploadAssetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetOutput.ProtoReflect.Descriptor instead.
func (*UploadAssetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{5}
}

func (x *UploadAssetOutput) GetAssetUrl() string {
	if x != nil {
		return x.AssetUrl
	}
	return ""
}

type LookupAssetInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupAssetInput) Reset() {
	*x = LookupAssetInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupAssetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupAssetInput) ProtoMessage() {}

func (x *LookupAssetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupAssetInput.ProtoReflect.Descriptor instead.
func (*LookupAssetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{6}
}

func (x *LookupAssetInput) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LookupAssetOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetUrl      string                 `protobuf:"bytes,1,opt,name=asset_url,json=assetUrl,proto3" json:"asset_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupAssetOutput) Reset() {
	*x = LookupAssetOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupAssetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupAssetOutput) ProtoMessage() {}

func (x *LookupAssetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupAssetOutput.ProtoReflect.Descriptor instead.
func (*LookupAssetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{7}
}

func (x *LookupAssetOutput) GetAssetUrl() string {
	if x != nil {
		return x.AssetUrl
	}
	return ""
}

type StartMultipartUploadInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // name might be used to infer file type and to set Content-Disposition header
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // mime type, if empty inferred from extension in the filename
	Keys          []string               `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	Ttl           uint32                 `protobuf:"varint,20,opt,name=ttl,proto3" json:"ttl,omitempty"` // time to live in seconds, 0 - forever
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartMultipartUploadInput) Reset() {
	*x = StartMultipartUploadInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartMultipartUploadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMultipartUploadInput) ProtoMessage() {}

func (x *StartMultipartUploadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMultipartUploadInput.ProtoReflect.Descriptor instead.
func (*StartMultipartUploadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{8}
}

func (x *StartMultipartUploadInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartMultipartUploadInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StartMultipartUploadInput) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *StartMultipartUploadInput) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type StartMultipartUploadOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartMultipartUploadOutput) Reset() {
	*x = StartMultipartUploadOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartMultipartUploadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMultipartUploadOutput) ProtoMessage() {}

func (x *StartMultipartUploadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMultipartUploadOutput.ProtoReflect.Descriptor instead.
func (*StartMultipartUploadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{9}
}

func (x *StartMultipartUploadOutput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type UploadPartInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`        // upload_id given by StartMultipartUpload API
	PartNumber    uint32                 `protobuf:"varint,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // must be number starting with 1
	Data          []byte                 `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`                              // must be 5MB, unless it's a last part
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartInput) Reset() {
	*x = UploadPartInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartInput) ProtoMessage() {}

func (x *UploadPartInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartInput.ProtoReflect.Descriptor instead.
func (*UploadPartInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{10}
}

func (x *UploadPartInput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadPartInput) GetPartNumber() uint32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadPartOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Upload confirmation token for CompleteMultipartUpload call, this token should be treated as random string, its
	// format may change overtime.
	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartOutput) Reset() {
	*x = UploadPartOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartOutput) ProtoMessage() {}

func (x *UploadPartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartOutput.ProtoReflect.Descriptor instead.
func (*UploadPartOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{11}
}

func (x *UploadPartOutput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CompleteMultipartUploadInput struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	UploadId      string                               `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Parts         []*CompleteMultipartUploadInput_Part `protobuf:"bytes,10,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMultipartUploadInput) Reset() {
	*x = CompleteMultipartUploadInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartUploadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadInput) ProtoMessage() {}

func (x *CompleteMultipartUploadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadInput.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{12}
}

func (x *CompleteMultipartUploadInput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteMultipartUploadInput) GetParts() []*CompleteMultipartUploadInput_Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CompleteMultipartUploadOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetUrl      string                 `protobuf:"bytes,1,opt,name=asset_url,json=assetUrl,proto3" json:"asset_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMultipartUploadOutput) Reset() {
	*x = CompleteMultipartUploadOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartUploadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadOutput) ProtoMessage() {}

func (x *CompleteMultipartUploadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadOutput.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{13}
}

func (x *CompleteMultipartUploadOutput) GetAssetUrl() string {
	if x != nil {
		return x.AssetUrl
	}
	return ""
}

type StartStreamInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // name might be used to infer file type and to set Content-Disposition header
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // mime type, if empty inferred from extension in the filename
	Ttl           uint32                 `protobuf:"varint,20,opt,name=ttl,proto3" json:"ttl,omitempty"` // time to live in seconds, 0 - forever
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartStreamInput) Reset() {
	*x = StartStreamInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartStreamInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamInput) ProtoMessage() {}

func (x *StartStreamInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamInput.ProtoReflect.Descriptor instead.
func (*StartStreamInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{14}
}

func (x *StartStreamInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartStreamInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StartStreamInput) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type StartStreamOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	StreamUrl     string                 `protobuf:"bytes,2,opt,name=stream_url,json=streamUrl,proto3" json:"stream_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartStreamOutput) Reset() {
	*x = StartStreamOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartStreamOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamOutput) ProtoMessage() {}

func (x *StartStreamOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamOutput.ProtoReflect.Descriptor instead.
func (*StartStreamOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{15}
}

func (x *StartStreamOutput) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StartStreamOutput) GetStreamUrl() string {
	if x != nil {
		return x.StreamUrl
	}
	return ""
}

type AppendStreamInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"` // stream_id given by StartStream API
	Offset        uint32                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data          []byte                 `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendStreamInput) Reset() {
	*x = AppendStreamInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendStreamInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendStreamInput) ProtoMessage() {}

func (x *AppendStreamInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendStreamInput.ProtoReflect.Descriptor instead.
func (*AppendStreamInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{16}
}

func (x *AppendStreamInput) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *AppendStreamInput) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AppendStreamInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendStreamOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendStreamOutput) Reset() {
	*x = AppendStreamOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendStreamOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendStreamOutput) ProtoMessage() {}

func (x *AppendStreamOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendStreamOutput.ProtoReflect.Descriptor instead.
func (*AppendStreamOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{17}
}

type CloseStreamInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseStreamInput) Reset() {
	*x = CloseStreamInput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseStreamInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseStreamInput) ProtoMessage() {}

func (x *CloseStreamInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseStreamInput.ProtoReflect.Descriptor instead.
func (*CloseStreamInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{18}
}

func (x *CloseStreamInput) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type CloseStreamOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseStreamOutput) Reset() {
	*x = CloseStreamOutput{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseStreamOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseStreamOutput) ProtoMessage() {}

func (x *CloseStreamOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseStreamOutput.ProtoReflect.Descriptor instead.
func (*CloseStreamOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{19}
}

type UploadImageInput_Size struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         uint32                 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageInput_Size) Reset() {
	*x = UploadImageInput_Size{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageInput_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageInput_Size) ProtoMessage() {}

func (x *UploadImageInput_Size) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageInput_Size.ProtoReflect.Descriptor instead.
func (*UploadImageInput_Size) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UploadImageInput_Size) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UploadImageInput_Size) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type UploadImageInput_Crop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Top           uint32                 `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	Right         uint32                 `protobuf:"varint,2,opt,name=right,proto3" json:"right,omitempty"`
	Bottom        uint32                 `protobuf:"varint,3,opt,name=bottom,proto3" json:"bottom,omitempty"`
	Left          uint32                 `protobuf:"varint,4,opt,name=left,proto3" json:"left,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadImageInput_Crop) Reset() {
	*x = UploadImageInput_Crop{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageInput_Crop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageInput_Crop) ProtoMessage() {}

func (x *UploadImageInput_Crop) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageInput_Crop.ProtoReflect.Descriptor instead.
func (*UploadImageInput_Crop) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UploadImageInput_Crop) GetTop() uint32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *UploadImageInput_Crop) GetRight() uint32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *UploadImageInput_Crop) GetBottom() uint32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *UploadImageInput_Crop) GetLeft() uint32 {
	if x != nil {
		return x.Left
	}
	return 0
}

type CompleteMultipartUploadInput_Part struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Number         uint32                 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Token          string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ChecksumMd5    string                 `protobuf:"bytes,10,opt,name=checksum_md5,json=checksumMd5,proto3" json:"checksum_md5,omitempty"`
	ChecksumSha1   string                 `protobuf:"bytes,11,opt,name=checksum_sha1,json=checksumSha1,proto3" json:"checksum_sha1,omitempty"`
	ChecksumSha256 string                 `protobuf:"bytes,12,opt,name=checksum_sha256,json=checksumSha256,proto3" json:"checksum_sha256,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CompleteMultipartUploadInput_Part) Reset() {
	*x = CompleteMultipartUploadInput_Part{}
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartUploadInput_Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadInput_Part) ProtoMessage() {}

func (x *CompleteMultipartUploadInput_Part) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadInput_Part.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadInput_Part) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CompleteMultipartUploadInput_Part) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CompleteMultipartUploadInput_Part) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumMd5() string {
	if x != nil {
		return x.ChecksumMd5
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumSha1() string {
	if x != nil {
		return x.ChecksumSha1
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumSha256() string {
	if x != nil {
		return x.ChecksumSha256
	}
	return ""
}

var File_eolymp_asset_asset_service_proto protoreflect.FileDescriptor

const file_eolymp_asset_asset_service_proto_rawDesc = "" +
	"\n" +
	" eolymp/asset/asset_service.proto\x12\feolymp.asset\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\"\x93\x03\n" +
	"\x10UploadImageInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x127\n" +
	"\x04crop\x18\n" +
	" \x01(\v2#.eolymp.asset.UploadImageInput.CropR\x04crop\x127\n" +
	"\x04size\x18\v \x01(\v2#.eolymp.asset.UploadImageInput.SizeR\x04size\x12?\n" +
	"\bvariants\x18\x14 \x03(\v2#.eolymp.asset.UploadImageInput.SizeR\bvariants\x12\x12\n" +
	"\x04data\x18d \x01(\fR\x04data\x1a4\n" +
	"\x04Size\x12\x14\n" +
	"\x05width\x18\x01 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\x1aZ\n" +
	"\x04Crop\x12\x10\n" +
	"\x03top\x18\x01 \x01(\rR\x03top\x12\x14\n" +
	"\x05right\x18\x02 \x01(\rR\x05right\x12\x16\n" +
	"\x06bottom\x18\x03 \x01(\rR\x06bottom\x12\x12\n" +
	"\x04left\x18\x04 \x01(\rR\x04left\"0\n" +
	"\x11UploadImageOutput\x12\x1b\n" +
	"\timage_url\x18\x01 \x01(\tR\bimageUrl\"M\n" +
	"\x0fUploadFileInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18d \x01(\fR\x04data\"-\n" +
	"\x10UploadFileOutput\x12\x19\n" +
	"\bfile_url\x18\x01 \x01(\tR\afileUrl\"t\n" +
	"\x10UploadAssetInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04keys\x18\x03 \x03(\tR\x04keys\x12\x10\n" +
	"\x03ttl\x18\x14 \x01(\rR\x03ttl\x12\x12\n" +
	"\x04data\x18d \x01(\fR\x04data\"0\n" +
	"\x11UploadAssetOutput\x12\x1b\n" +
	"\tasset_url\x18\x01 \x01(\tR\bassetUrl\"$\n" +
	"\x10LookupAssetInput\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"0\n" +
	"\x11LookupAssetOutput\x12\x1b\n" +
	"\tasset_url\x18\x01 \x01(\tR\bassetUrl\"i\n" +
	"\x19StartMultipartUploadInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04keys\x18\x03 \x03(\tR\x04keys\x12\x10\n" +
	"\x03ttl\x18\x14 \x01(\rR\x03ttl\"9\n" +
	"\x1aStartMultipartUploadOutput\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\"c\n" +
	"\x0fUploadPartInput\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1f\n" +
	"\vpart_number\x18\x02 \x01(\rR\n" +
	"partNumber\x12\x12\n" +
	"\x04data\x18d \x01(\fR\x04data\"(\n" +
	"\x10UploadPartOutput\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\xaa\x02\n" +
	"\x1cCompleteMultipartUploadInput\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12E\n" +
	"\x05parts\x18\n" +
	" \x03(\v2/.eolymp.asset.CompleteMultipartUploadInput.PartR\x05parts\x1a\xa5\x01\n" +
	"\x04Part\x12\x16\n" +
	"\x06number\x18\x01 \x01(\rR\x06number\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12!\n" +
	"\fchecksum_md5\x18\n" +
	" \x01(\tR\vchecksumMd5\x12#\n" +
	"\rchecksum_sha1\x18\v \x01(\tR\fchecksumSha1\x12'\n" +
	"\x0fchecksum_sha256\x18\f \x01(\tR\x0echecksumSha256\"<\n" +
	"\x1dCompleteMultipartUploadOutput\x12\x1b\n" +
	"\tasset_url\x18\x01 \x01(\tR\bassetUrl\"L\n" +
	"\x10StartStreamInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x10\n" +
	"\x03ttl\x18\x14 \x01(\rR\x03ttl\"O\n" +
	"\x11StartStreamOutput\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1d\n" +
	"\n" +
	"stream_url\x18\x02 \x01(\tR\tstreamUrl\"\\\n" +
	"\x11AppendStreamInput\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\rR\x06offset\x12\x12\n" +
	"\x04data\x18d \x01(\fR\x04data\"\x14\n" +
	"\x12AppendStreamOutput\"/\n" +
	"\x10CloseStreamInput\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\"\x13\n" +
	"\x11CloseStreamOutput2\xf7\v\n" +
	"\fAssetService\x12\x8e\x01\n" +
	"\vUploadImage\x12\x1e.eolymp.asset.UploadImageInput\x1a\x1f.eolymp.asset.UploadImageOutput\">\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:image:write\x82\xd3\xe4\x93\x02\x10\"\x0e/assets/images\x12\x8a\x01\n" +
	"\n" +
	"UploadFile\x12\x1d.eolymp.asset.UploadFileInput\x1a\x1e.eolymp.asset.UploadFileOutput\"=\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:image:write\x82\xd3\xe4\x93\x02\x0f\"\r/assets/files\x12\x87\x01\n" +
	"\vUploadAsset\x12\x1e.eolymp.asset.UploadAssetInput\x1a\x1f.eolymp.asset.UploadAssetOutput\"7\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\t\"\a/assets\x12\x8d\x01\n" +
	"\vLookupAsset\x12\x1e.eolymp.asset.LookupAssetInput\x1a\x1f.eolymp.asset.LookupAssetOutput\"=\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x14\x8a\xe3\n" +
	"\x10asset:asset:read\x82\xd3\xe4\x93\x02\x10\"\x0e/assets:lookup\x12\xa3\x01\n" +
	"\x14StartMultipartUpload\x12'.eolymp.asset.StartMultipartUploadInput\x1a(.eolymp.asset.StartMultipartUploadOutput\"8\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\n" +
	"\x1a\b/uploads\x12\x91\x01\n" +
	"\n" +
	"UploadPart\x12\x1d.eolymp.asset.UploadPartInput\x1a\x1e.eolymp.asset.UploadPartOutput\"D\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\x16\"\x14/uploads/{upload_id}\x12\xb8\x01\n" +
	"\x17CompleteMultipartUpload\x12*.eolymp.asset.CompleteMultipartUploadInput\x1a+.eolymp.asset.CompleteMultipartUploadOutput\"D\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\x16\x1a\x14/uploads/{upload_id}\x12\x88\x01\n" +
	"\vStartStream\x12\x1e.eolymp.asset.StartStreamInput\x1a\x1f.eolymp.asset.StartStreamOutput\"8\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\n" +
	"\x1a\b/streams\x12\x97\x01\n" +
	"\fAppendStream\x12\x1f.eolymp.asset.AppendStreamInput\x1a .eolymp.asset.AppendStreamOutput\"D\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\x16\"\x14/streams/{stream_id}\x12\x94\x01\n" +
	"\vCloseStream\x12\x1e.eolymp.asset.CloseStreamInput\x1a\x1f.eolymp.asset.CloseStreamOutput\"D\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x15\x8a\xe3\n" +
	"\x11asset:asset:write\x82\xd3\xe4\x93\x02\x16\x1a\x14/streams/{stream_id}B-Z+github.com/eolymp/go-sdk/eolymp/asset;assetb\x06proto3"

var (
	file_eolymp_asset_asset_service_proto_rawDescOnce sync.Once
	file_eolymp_asset_asset_service_proto_rawDescData []byte
)

func file_eolymp_asset_asset_service_proto_rawDescGZIP() []byte {
	file_eolymp_asset_asset_service_proto_rawDescOnce.Do(func() {
		file_eolymp_asset_asset_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_asset_asset_service_proto_rawDesc), len(file_eolymp_asset_asset_service_proto_rawDesc)))
	})
	return file_eolymp_asset_asset_service_proto_rawDescData
}

var file_eolymp_asset_asset_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_eolymp_asset_asset_service_proto_goTypes = []any{
	(*UploadImageInput)(nil),                  // 0: eolymp.asset.UploadImageInput
	(*UploadImageOutput)(nil),                 // 1: eolymp.asset.UploadImageOutput
	(*UploadFileInput)(nil),                   // 2: eolymp.asset.UploadFileInput
	(*UploadFileOutput)(nil),                  // 3: eolymp.asset.UploadFileOutput
	(*UploadAssetInput)(nil),                  // 4: eolymp.asset.UploadAssetInput
	(*UploadAssetOutput)(nil),                 // 5: eolymp.asset.UploadAssetOutput
	(*LookupAssetInput)(nil),                  // 6: eolymp.asset.LookupAssetInput
	(*LookupAssetOutput)(nil),                 // 7: eolymp.asset.LookupAssetOutput
	(*StartMultipartUploadInput)(nil),         // 8: eolymp.asset.StartMultipartUploadInput
	(*StartMultipartUploadOutput)(nil),        // 9: eolymp.asset.StartMultipartUploadOutput
	(*UploadPartInput)(nil),                   // 10: eolymp.asset.UploadPartInput
	(*UploadPartOutput)(nil),                  // 11: eolymp.asset.UploadPartOutput
	(*CompleteMultipartUploadInput)(nil),      // 12: eolymp.asset.CompleteMultipartUploadInput
	(*CompleteMultipartUploadOutput)(nil),     // 13: eolymp.asset.CompleteMultipartUploadOutput
	(*StartStreamInput)(nil),                  // 14: eolymp.asset.StartStreamInput
	(*StartStreamOutput)(nil),                 // 15: eolymp.asset.StartStreamOutput
	(*AppendStreamInput)(nil),                 // 16: eolymp.asset.AppendStreamInput
	(*AppendStreamOutput)(nil),                // 17: eolymp.asset.AppendStreamOutput
	(*CloseStreamInput)(nil),                  // 18: eolymp.asset.CloseStreamInput
	(*CloseStreamOutput)(nil),                 // 19: eolymp.asset.CloseStreamOutput
	(*UploadImageInput_Size)(nil),             // 20: eolymp.asset.UploadImageInput.Size
	(*UploadImageInput_Crop)(nil),             // 21: eolymp.asset.UploadImageInput.Crop
	(*CompleteMultipartUploadInput_Part)(nil), // 22: eolymp.asset.CompleteMultipartUploadInput.Part
}
var file_eolymp_asset_asset_service_proto_depIdxs = []int32{
	21, // 0: eolymp.asset.UploadImageInput.crop:type_name -> eolymp.asset.UploadImageInput.Crop
	20, // 1: eolymp.asset.UploadImageInput.size:type_name -> eolymp.asset.UploadImageInput.Size
	20, // 2: eolymp.asset.UploadImageInput.variants:type_name -> eolymp.asset.UploadImageInput.Size
	22, // 3: eolymp.asset.CompleteMultipartUploadInput.parts:type_name -> eolymp.asset.CompleteMultipartUploadInput.Part
	0,  // 4: eolymp.asset.AssetService.UploadImage:input_type -> eolymp.asset.UploadImageInput
	2,  // 5: eolymp.asset.AssetService.UploadFile:input_type -> eolymp.asset.UploadFileInput
	4,  // 6: eolymp.asset.AssetService.UploadAsset:input_type -> eolymp.asset.UploadAssetInput
	6,  // 7: eolymp.asset.AssetService.LookupAsset:input_type -> eolymp.asset.LookupAssetInput
	8,  // 8: eolymp.asset.AssetService.StartMultipartUpload:input_type -> eolymp.asset.StartMultipartUploadInput
	10, // 9: eolymp.asset.AssetService.UploadPart:input_type -> eolymp.asset.UploadPartInput
	12, // 10: eolymp.asset.AssetService.CompleteMultipartUpload:input_type -> eolymp.asset.CompleteMultipartUploadInput
	14, // 11: eolymp.asset.AssetService.StartStream:input_type -> eolymp.asset.StartStreamInput
	16, // 12: eolymp.asset.AssetService.AppendStream:input_type -> eolymp.asset.AppendStreamInput
	18, // 13: eolymp.asset.AssetService.CloseStream:input_type -> eolymp.asset.CloseStreamInput
	1,  // 14: eolymp.asset.AssetService.UploadImage:output_type -> eolymp.asset.UploadImageOutput
	3,  // 15: eolymp.asset.AssetService.UploadFile:output_type -> eolymp.asset.UploadFileOutput
	5,  // 16: eolymp.asset.AssetService.UploadAsset:output_type -> eolymp.asset.UploadAssetOutput
	7,  // 17: eolymp.asset.AssetService.LookupAsset:output_type -> eolymp.asset.LookupAssetOutput
	9,  // 18: eolymp.asset.AssetService.StartMultipartUpload:output_type -> eolymp.asset.StartMultipartUploadOutput
	11, // 19: eolymp.asset.AssetService.UploadPart:output_type -> eolymp.asset.UploadPartOutput
	13, // 20: eolymp.asset.AssetService.CompleteMultipartUpload:output_type -> eolymp.asset.CompleteMultipartUploadOutput
	15, // 21: eolymp.asset.AssetService.StartStream:output_type -> eolymp.asset.StartStreamOutput
	17, // 22: eolymp.asset.AssetService.AppendStream:output_type -> eolymp.asset.AppendStreamOutput
	19, // 23: eolymp.asset.AssetService.CloseStream:output_type -> eolymp.asset.CloseStreamOutput
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_eolymp_asset_asset_service_proto_init() }
func file_eolymp_asset_asset_service_proto_init() {
	if File_eolymp_asset_asset_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_asset_asset_service_proto_rawDesc), len(file_eolymp_asset_asset_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_asset_asset_service_proto_goTypes,
		DependencyIndexes: file_eolymp_asset_asset_service_proto_depIdxs,
		MessageInfos:      file_eolymp_asset_asset_service_proto_msgTypes,
	}.Build()
	File_eolymp_asset_asset_service_proto = out.File
	file_eolymp_asset_asset_service_proto_goTypes = nil
	file_eolymp_asset_asset_service_proto_depIdxs = nil
}
