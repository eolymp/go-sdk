// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: eolymp/asset/asset_service.proto

package asset

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadImageInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type     string                   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Crop     *UploadImageInput_Crop   `protobuf:"bytes,10,opt,name=crop,proto3" json:"crop,omitempty"`
	Size     *UploadImageInput_Size   `protobuf:"bytes,11,opt,name=size,proto3" json:"size,omitempty"`
	Variants []*UploadImageInput_Size `protobuf:"bytes,20,rep,name=variants,proto3" json:"variants,omitempty"`
	Data     []byte                   `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadImageInput) Reset() {
	*x = UploadImageInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageInput) ProtoMessage() {}

func (x *UploadImageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageInput.ProtoReflect.Descriptor instead.
func (*UploadImageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadImageInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadImageInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadImageInput) GetCrop() *UploadImageInput_Crop {
	if x != nil {
		return x.Crop
	}
	return nil
}

func (x *UploadImageInput) GetSize() *UploadImageInput_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *UploadImageInput) GetVariants() []*UploadImageInput_Size {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *UploadImageInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadImageOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *UploadImageOutput) Reset() {
	*x = UploadImageOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageOutput) ProtoMessage() {}

func (x *UploadImageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageOutput.ProtoReflect.Descriptor instead.
func (*UploadImageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadImageOutput) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type UploadFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Data []byte `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadFileInput) Reset() {
	*x = UploadFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInput) ProtoMessage() {}

func (x *UploadFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInput.ProtoReflect.Descriptor instead.
func (*UploadFileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{2}
}

func (x *UploadFileInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadFileInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadFileInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUrl string `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
}

func (x *UploadFileOutput) Reset() {
	*x = UploadFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileOutput) ProtoMessage() {}

func (x *UploadFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileOutput.ProtoReflect.Descriptor instead.
func (*UploadFileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{3}
}

func (x *UploadFileOutput) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type UploadAssetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // name might be used to infer file type and to set Content-Disposition header
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`   // mime type, if empty inferred from extension in the filename
	Data []byte `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"` // up to 5MB (5M bytes) of data
}

func (x *UploadAssetInput) Reset() {
	*x = UploadAssetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAssetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetInput) ProtoMessage() {}

func (x *UploadAssetInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetInput.ProtoReflect.Descriptor instead.
func (*UploadAssetInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{4}
}

func (x *UploadAssetInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadAssetInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadAssetInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadAssetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetUrl string `protobuf:"bytes,1,opt,name=asset_url,json=assetUrl,proto3" json:"asset_url,omitempty"`
}

func (x *UploadAssetOutput) Reset() {
	*x = UploadAssetOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAssetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetOutput) ProtoMessage() {}

func (x *UploadAssetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetOutput.ProtoReflect.Descriptor instead.
func (*UploadAssetOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{5}
}

func (x *UploadAssetOutput) GetAssetUrl() string {
	if x != nil {
		return x.AssetUrl
	}
	return ""
}

type StartMultipartUploadInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // name might be used to infer file type and to set Content-Disposition header
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // mime type, if empty inferred from extension in the filename
}

func (x *StartMultipartUploadInput) Reset() {
	*x = StartMultipartUploadInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMultipartUploadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMultipartUploadInput) ProtoMessage() {}

func (x *StartMultipartUploadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMultipartUploadInput.ProtoReflect.Descriptor instead.
func (*StartMultipartUploadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{6}
}

func (x *StartMultipartUploadInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartMultipartUploadInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type StartMultipartUploadOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *StartMultipartUploadOutput) Reset() {
	*x = StartMultipartUploadOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMultipartUploadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMultipartUploadOutput) ProtoMessage() {}

func (x *StartMultipartUploadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMultipartUploadOutput.ProtoReflect.Descriptor instead.
func (*StartMultipartUploadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{7}
}

func (x *StartMultipartUploadOutput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type UploadPartInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId   string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`        // upload_id given by StartMultipartUpload API
	PartNumber uint32 `protobuf:"varint,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // must be number starting with 1
	Data       []byte `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`                              // must be 5MB, unless it's a last part
}

func (x *UploadPartInput) Reset() {
	*x = UploadPartInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPartInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartInput) ProtoMessage() {}

func (x *UploadPartInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartInput.ProtoReflect.Descriptor instead.
func (*UploadPartInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{8}
}

func (x *UploadPartInput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadPartInput) GetPartNumber() uint32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadPartOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Upload confirmation token for CompleteMultipartUpload call, this token should be treated as random string, its
	// format may change overtime.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UploadPartOutput) Reset() {
	*x = UploadPartOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartOutput) ProtoMessage() {}

func (x *UploadPartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartOutput.ProtoReflect.Descriptor instead.
func (*UploadPartOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{9}
}

func (x *UploadPartOutput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CompleteMultipartUploadInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string                               `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Parts    []*CompleteMultipartUploadInput_Part `protobuf:"bytes,10,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *CompleteMultipartUploadInput) Reset() {
	*x = CompleteMultipartUploadInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultipartUploadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadInput) ProtoMessage() {}

func (x *CompleteMultipartUploadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadInput.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{10}
}

func (x *CompleteMultipartUploadInput) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteMultipartUploadInput) GetParts() []*CompleteMultipartUploadInput_Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CompleteMultipartUploadOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetUrl string `protobuf:"bytes,1,opt,name=asset_url,json=assetUrl,proto3" json:"asset_url,omitempty"`
}

func (x *CompleteMultipartUploadOutput) Reset() {
	*x = CompleteMultipartUploadOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultipartUploadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadOutput) ProtoMessage() {}

func (x *CompleteMultipartUploadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadOutput.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{11}
}

func (x *CompleteMultipartUploadOutput) GetAssetUrl() string {
	if x != nil {
		return x.AssetUrl
	}
	return ""
}

type UploadImageInput_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *UploadImageInput_Size) Reset() {
	*x = UploadImageInput_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageInput_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageInput_Size) ProtoMessage() {}

func (x *UploadImageInput_Size) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageInput_Size.ProtoReflect.Descriptor instead.
func (*UploadImageInput_Size) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UploadImageInput_Size) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UploadImageInput_Size) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type UploadImageInput_Crop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top    uint32 `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	Right  uint32 `protobuf:"varint,2,opt,name=right,proto3" json:"right,omitempty"`
	Bottom uint32 `protobuf:"varint,3,opt,name=bottom,proto3" json:"bottom,omitempty"`
	Left   uint32 `protobuf:"varint,4,opt,name=left,proto3" json:"left,omitempty"`
}

func (x *UploadImageInput_Crop) Reset() {
	*x = UploadImageInput_Crop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageInput_Crop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageInput_Crop) ProtoMessage() {}

func (x *UploadImageInput_Crop) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageInput_Crop.ProtoReflect.Descriptor instead.
func (*UploadImageInput_Crop) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UploadImageInput_Crop) GetTop() uint32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *UploadImageInput_Crop) GetRight() uint32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *UploadImageInput_Crop) GetBottom() uint32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *UploadImageInput_Crop) GetLeft() uint32 {
	if x != nil {
		return x.Left
	}
	return 0
}

type CompleteMultipartUploadInput_Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number         uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ChecksumMd5    string `protobuf:"bytes,10,opt,name=checksum_md5,json=checksumMd5,proto3" json:"checksum_md5,omitempty"`
	ChecksumSha1   string `protobuf:"bytes,11,opt,name=checksum_sha1,json=checksumSha1,proto3" json:"checksum_sha1,omitempty"`
	ChecksumSha256 string `protobuf:"bytes,12,opt,name=checksum_sha256,json=checksumSha256,proto3" json:"checksum_sha256,omitempty"`
}

func (x *CompleteMultipartUploadInput_Part) Reset() {
	*x = CompleteMultipartUploadInput_Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_asset_asset_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultipartUploadInput_Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartUploadInput_Part) ProtoMessage() {}

func (x *CompleteMultipartUploadInput_Part) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_asset_asset_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartUploadInput_Part.ProtoReflect.Descriptor instead.
func (*CompleteMultipartUploadInput_Part) Descriptor() ([]byte, []int) {
	return file_eolymp_asset_asset_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CompleteMultipartUploadInput_Part) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CompleteMultipartUploadInput_Part) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumMd5() string {
	if x != nil {
		return x.ChecksumMd5
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumSha1() string {
	if x != nil {
		return x.ChecksumSha1
	}
	return ""
}

func (x *CompleteMultipartUploadInput_Part) GetChecksumSha256() string {
	if x != nil {
		return x.ChecksumSha256
	}
	return ""
}

var File_eolymp_asset_asset_service_proto protoreflect.FileDescriptor

var file_eolymp_asset_asset_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x93, 0x03, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x37, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x43,
	0x72, 0x6f, 0x70, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x34, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x5a, 0x0a,
	0x04, 0x43, 0x72, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x22, 0x30, 0x0a, 0x11, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x4d, 0x0a, 0x0f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x10, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x11, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x43, 0x0a, 0x19, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x39, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61,
	0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x28, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xaa, 0x02, 0x0a, 0x1c, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x1a,
	0xa5, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x4d, 0x64, 0x35, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x31, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0x3c, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x32, 0xab, 0x07, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3e, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x3a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x3a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x37, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x3a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x09, 0x22, 0x07, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0xa3,
	0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x38, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x15, 0x8a,
	0xe3, 0x0a, 0x11, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x3a, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x1a, 0x08, 0x2f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x44, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8,
	0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11, 0x61, 0x74, 0x6c, 0x61, 0x73,
	0x3a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x22, 0x14, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb8, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x44, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3,
	0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x3a, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x14, 0x2f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x7d, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x3b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_asset_asset_service_proto_rawDescOnce sync.Once
	file_eolymp_asset_asset_service_proto_rawDescData = file_eolymp_asset_asset_service_proto_rawDesc
)

func file_eolymp_asset_asset_service_proto_rawDescGZIP() []byte {
	file_eolymp_asset_asset_service_proto_rawDescOnce.Do(func() {
		file_eolymp_asset_asset_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_asset_asset_service_proto_rawDescData)
	})
	return file_eolymp_asset_asset_service_proto_rawDescData
}

var file_eolymp_asset_asset_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_eolymp_asset_asset_service_proto_goTypes = []any{
	(*UploadImageInput)(nil),                  // 0: eolymp.asset.UploadImageInput
	(*UploadImageOutput)(nil),                 // 1: eolymp.asset.UploadImageOutput
	(*UploadFileInput)(nil),                   // 2: eolymp.asset.UploadFileInput
	(*UploadFileOutput)(nil),                  // 3: eolymp.asset.UploadFileOutput
	(*UploadAssetInput)(nil),                  // 4: eolymp.asset.UploadAssetInput
	(*UploadAssetOutput)(nil),                 // 5: eolymp.asset.UploadAssetOutput
	(*StartMultipartUploadInput)(nil),         // 6: eolymp.asset.StartMultipartUploadInput
	(*StartMultipartUploadOutput)(nil),        // 7: eolymp.asset.StartMultipartUploadOutput
	(*UploadPartInput)(nil),                   // 8: eolymp.asset.UploadPartInput
	(*UploadPartOutput)(nil),                  // 9: eolymp.asset.UploadPartOutput
	(*CompleteMultipartUploadInput)(nil),      // 10: eolymp.asset.CompleteMultipartUploadInput
	(*CompleteMultipartUploadOutput)(nil),     // 11: eolymp.asset.CompleteMultipartUploadOutput
	(*UploadImageInput_Size)(nil),             // 12: eolymp.asset.UploadImageInput.Size
	(*UploadImageInput_Crop)(nil),             // 13: eolymp.asset.UploadImageInput.Crop
	(*CompleteMultipartUploadInput_Part)(nil), // 14: eolymp.asset.CompleteMultipartUploadInput.Part
}
var file_eolymp_asset_asset_service_proto_depIdxs = []int32{
	13, // 0: eolymp.asset.UploadImageInput.crop:type_name -> eolymp.asset.UploadImageInput.Crop
	12, // 1: eolymp.asset.UploadImageInput.size:type_name -> eolymp.asset.UploadImageInput.Size
	12, // 2: eolymp.asset.UploadImageInput.variants:type_name -> eolymp.asset.UploadImageInput.Size
	14, // 3: eolymp.asset.CompleteMultipartUploadInput.parts:type_name -> eolymp.asset.CompleteMultipartUploadInput.Part
	0,  // 4: eolymp.asset.AssetService.UploadImage:input_type -> eolymp.asset.UploadImageInput
	2,  // 5: eolymp.asset.AssetService.UploadFile:input_type -> eolymp.asset.UploadFileInput
	4,  // 6: eolymp.asset.AssetService.UploadAsset:input_type -> eolymp.asset.UploadAssetInput
	6,  // 7: eolymp.asset.AssetService.StartMultipartUpload:input_type -> eolymp.asset.StartMultipartUploadInput
	8,  // 8: eolymp.asset.AssetService.UploadPart:input_type -> eolymp.asset.UploadPartInput
	10, // 9: eolymp.asset.AssetService.CompleteMultipartUpload:input_type -> eolymp.asset.CompleteMultipartUploadInput
	1,  // 10: eolymp.asset.AssetService.UploadImage:output_type -> eolymp.asset.UploadImageOutput
	3,  // 11: eolymp.asset.AssetService.UploadFile:output_type -> eolymp.asset.UploadFileOutput
	5,  // 12: eolymp.asset.AssetService.UploadAsset:output_type -> eolymp.asset.UploadAssetOutput
	7,  // 13: eolymp.asset.AssetService.StartMultipartUpload:output_type -> eolymp.asset.StartMultipartUploadOutput
	9,  // 14: eolymp.asset.AssetService.UploadPart:output_type -> eolymp.asset.UploadPartOutput
	11, // 15: eolymp.asset.AssetService.CompleteMultipartUpload:output_type -> eolymp.asset.CompleteMultipartUploadOutput
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_eolymp_asset_asset_service_proto_init() }
func file_eolymp_asset_asset_service_proto_init() {
	if File_eolymp_asset_asset_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eolymp_asset_asset_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UploadFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UploadFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UploadAssetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UploadAssetOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StartMultipartUploadInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*StartMultipartUploadOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UploadPartInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UploadPartOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteMultipartUploadInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteMultipartUploadOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageInput_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageInput_Crop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_asset_asset_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteMultipartUploadInput_Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_asset_asset_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_asset_asset_service_proto_goTypes,
		DependencyIndexes: file_eolymp_asset_asset_service_proto_depIdxs,
		MessageInfos:      file_eolymp_asset_asset_service_proto_msgTypes,
	}.Build()
	File_eolymp_asset_asset_service_proto = out.File
	file_eolymp_asset_asset_service_proto_rawDesc = nil
	file_eolymp_asset_asset_service_proto_goTypes = nil
	file_eolymp_asset_asset_service_proto_depIdxs = nil
}
