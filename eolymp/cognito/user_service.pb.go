// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: eolymp/cognito/user_service.proto

package cognito

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateProfileInput_Patch int32

const (
	UpdateProfileInput_USERNAME   UpdateProfileInput_Patch = 0
	UpdateProfileInput_EMAIL      UpdateProfileInput_Patch = 1
	UpdateProfileInput_NAME       UpdateProfileInput_Patch = 2
	UpdateProfileInput_COMPANY    UpdateProfileInput_Patch = 3
	UpdateProfileInput_OCCUPATION UpdateProfileInput_Patch = 4
	UpdateProfileInput_COUNTRY    UpdateProfileInput_Patch = 5
	UpdateProfileInput_CITY       UpdateProfileInput_Patch = 6
	UpdateProfileInput_BIRTHDAY   UpdateProfileInput_Patch = 7
	UpdateProfileInput_LOCALE     UpdateProfileInput_Patch = 8
)

// Enum value maps for UpdateProfileInput_Patch.
var (
	UpdateProfileInput_Patch_name = map[int32]string{
		0: "USERNAME",
		1: "EMAIL",
		2: "NAME",
		3: "COMPANY",
		4: "OCCUPATION",
		5: "COUNTRY",
		6: "CITY",
		7: "BIRTHDAY",
		8: "LOCALE",
	}
	UpdateProfileInput_Patch_value = map[string]int32{
		"USERNAME":   0,
		"EMAIL":      1,
		"NAME":       2,
		"COMPANY":    3,
		"OCCUPATION": 4,
		"COUNTRY":    5,
		"CITY":       6,
		"BIRTHDAY":   7,
		"LOCALE":     8,
	}
)

func (x UpdateProfileInput_Patch) Enum() *UpdateProfileInput_Patch {
	p := new(UpdateProfileInput_Patch)
	*p = x
	return p
}

func (x UpdateProfileInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateProfileInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_cognito_user_service_proto_enumTypes[0].Descriptor()
}

func (UpdateProfileInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_cognito_user_service_proto_enumTypes[0]
}

func (x UpdateProfileInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateProfileInput_Patch.Descriptor instead.
func (UpdateProfileInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{7, 0}
}

type UserChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *User `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *User `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *UserChangedEvent) Reset() {
	*x = UserChangedEvent{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangedEvent) ProtoMessage() {}

func (x *UserChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangedEvent.ProtoReflect.Descriptor instead.
func (*UserChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *UserChangedEvent) GetBefore() *User {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *UserChangedEvent) GetAfter() *User {
	if x != nil {
		return x.After
	}
	return nil
}

type CreateUserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`                 // username
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"` // full name
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                       // email
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                 // password
	Country  string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`                   // country
	Birthday string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`                 // birthday in format YYYY-MM-DD
	Captcha  string `protobuf:"bytes,10,opt,name=captcha,proto3" json:"captcha,omitempty"`                  // captcha challenge
	Locale   string `protobuf:"bytes,20,opt,name=locale,proto3" json:"locale,omitempty"`                    // default locale for user
}

func (x *CreateUserInput) Reset() {
	*x = CreateUserInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserInput) ProtoMessage() {}

func (x *CreateUserInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserInput.ProtoReflect.Descriptor instead.
func (*CreateUserInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserInput) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserInput) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateUserInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserInput) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserInput) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateUserInput) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *CreateUserInput) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

func (x *CreateUserInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type CreateUserOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user id for the new account
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// email confirmation hint is a string added to the email subject, so it's easier to find for user
	EmailConfirmationHint string `protobuf:"bytes,2,opt,name=email_confirmation_hint,json=emailConfirmationHint,proto3" json:"email_confirmation_hint,omitempty"`
}

func (x *CreateUserOutput) Reset() {
	*x = CreateUserOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserOutput) ProtoMessage() {}

func (x *CreateUserOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserOutput.ProtoReflect.Descriptor instead.
func (*CreateUserOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserOutput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserOutput) GetEmailConfirmationHint() string {
	if x != nil {
		return x.EmailConfirmationHint
	}
	return ""
}

type VerifyEmailInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"` // secret from the email sent during CreateUser or UpdateEmail
}

func (x *VerifyEmailInput) Reset() {
	*x = VerifyEmailInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEmailInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailInput) ProtoMessage() {}

func (x *VerifyEmailInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailInput.ProtoReflect.Descriptor instead.
func (*VerifyEmailInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyEmailInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerifyEmailInput) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type VerifyEmailOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VerifyEmailOutput) Reset() {
	*x = VerifyEmailOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyEmailOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailOutput) ProtoMessage() {}

func (x *VerifyEmailOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailOutput.ProtoReflect.Descriptor instead.
func (*VerifyEmailOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{4}
}

type ResendEmailVerificationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResendEmailVerificationInput) Reset() {
	*x = ResendEmailVerificationInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendEmailVerificationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendEmailVerificationInput) ProtoMessage() {}

func (x *ResendEmailVerificationInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendEmailVerificationInput.ProtoReflect.Descriptor instead.
func (*ResendEmailVerificationInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{5}
}

type ResendEmailVerificationOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailConfirmationHint string `protobuf:"bytes,1,opt,name=email_confirmation_hint,json=emailConfirmationHint,proto3" json:"email_confirmation_hint,omitempty"`
}

func (x *ResendEmailVerificationOutput) Reset() {
	*x = ResendEmailVerificationOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendEmailVerificationOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendEmailVerificationOutput) ProtoMessage() {}

func (x *ResendEmailVerificationOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendEmailVerificationOutput.ProtoReflect.Descriptor instead.
func (*ResendEmailVerificationOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *ResendEmailVerificationOutput) GetEmailConfirmationHint() string {
	if x != nil {
		return x.EmailConfirmationHint
	}
	return ""
}

type UpdateProfileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// specify list of fields to update, if empty all fields are updated
	Patch      []UpdateProfileInput_Patch `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.cognito.UpdateProfileInput_Patch" json:"patch,omitempty"`
	Username   string                     `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email      string                     `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Name       string                     `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Company    string                     `protobuf:"bytes,12,opt,name=company,proto3" json:"company,omitempty"`
	Occupation string                     `protobuf:"bytes,13,opt,name=occupation,proto3" json:"occupation,omitempty"`
	Country    string                     `protobuf:"bytes,21,opt,name=country,proto3" json:"country,omitempty"`
	City       string                     `protobuf:"bytes,22,opt,name=city,proto3" json:"city,omitempty"`
	Birthday   string                     `protobuf:"bytes,33,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Locale     string                     `protobuf:"bytes,34,opt,name=locale,proto3" json:"locale,omitempty"`
}

func (x *UpdateProfileInput) Reset() {
	*x = UpdateProfileInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileInput) ProtoMessage() {}

func (x *UpdateProfileInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileInput.ProtoReflect.Descriptor instead.
func (*UpdateProfileInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateProfileInput) GetPatch() []UpdateProfileInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateProfileInput) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateProfileInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateProfileInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProfileInput) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdateProfileInput) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *UpdateProfileInput) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateProfileInput) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateProfileInput) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateProfileInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type UpdateProfileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailConfirmationHint string `protobuf:"bytes,1,opt,name=email_confirmation_hint,json=emailConfirmationHint,proto3" json:"email_confirmation_hint,omitempty"`
}

func (x *UpdateProfileOutput) Reset() {
	*x = UpdateProfileOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileOutput) ProtoMessage() {}

func (x *UpdateProfileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileOutput.ProtoReflect.Descriptor instead.
func (*UpdateProfileOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateProfileOutput) GetEmailConfirmationHint() string {
	if x != nil {
		return x.EmailConfirmationHint
	}
	return ""
}

type UpdatePictureInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	OffsetX  uint32 `protobuf:"varint,10,opt,name=offset_x,json=offsetX,proto3" json:"offset_x,omitempty"`
	OffsetY  uint32 `protobuf:"varint,11,opt,name=offset_y,json=offsetY,proto3" json:"offset_y,omitempty"`
	Size     uint32 `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *UpdatePictureInput) Reset() {
	*x = UpdatePictureInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePictureInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePictureInput) ProtoMessage() {}

func (x *UpdatePictureInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePictureInput.ProtoReflect.Descriptor instead.
func (*UpdatePictureInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatePictureInput) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UpdatePictureInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdatePictureInput) GetOffsetX() uint32 {
	if x != nil {
		return x.OffsetX
	}
	return 0
}

func (x *UpdatePictureInput) GetOffsetY() uint32 {
	if x != nil {
		return x.OffsetY
	}
	return 0
}

func (x *UpdatePictureInput) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UpdatePictureOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePictureOutput) Reset() {
	*x = UpdatePictureOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePictureOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePictureOutput) ProtoMessage() {}

func (x *UpdatePictureOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePictureOutput.ProtoReflect.Descriptor instead.
func (*UpdatePictureOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{10}
}

type UpdatePasswordInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPassword string `protobuf:"bytes,1,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	NewPassword     string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *UpdatePasswordInput) Reset() {
	*x = UpdatePasswordInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasswordInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordInput) ProtoMessage() {}

func (x *UpdatePasswordInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordInput.ProtoReflect.Descriptor instead.
func (*UpdatePasswordInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePasswordInput) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *UpdatePasswordInput) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UpdatePasswordOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePasswordOutput) Reset() {
	*x = UpdatePasswordOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasswordOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordOutput) ProtoMessage() {}

func (x *UpdatePasswordOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordOutput.ProtoReflect.Descriptor instead.
func (*UpdatePasswordOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{12}
}

type IntrospectUserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntrospectUserInput) Reset() {
	*x = IntrospectUserInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectUserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectUserInput) ProtoMessage() {}

func (x *IntrospectUserInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectUserInput.ProtoReflect.Descriptor instead.
func (*IntrospectUserInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{13}
}

type IntrospectUserOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *IntrospectUserOutput) Reset() {
	*x = IntrospectUserOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectUserOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectUserOutput) ProtoMessage() {}

func (x *IntrospectUserOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectUserOutput.ProtoReflect.Descriptor instead.
func (*IntrospectUserOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{14}
}

func (x *IntrospectUserOutput) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type DescribeUserInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DescribeUserInput) Reset() {
	*x = DescribeUserInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeUserInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserInput) ProtoMessage() {}

func (x *DescribeUserInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserInput.ProtoReflect.Descriptor instead.
func (*DescribeUserInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeUserInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DescribeUserOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DescribeUserOutput) Reset() {
	*x = DescribeUserOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeUserOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeUserOutput) ProtoMessage() {}

func (x *DescribeUserOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeUserOutput.ProtoReflect.Descriptor instead.
func (*DescribeUserOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{16}
}

func (x *DescribeUserOutput) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListUsersInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListUsersInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListUsersInput) Reset() {
	*x = ListUsersInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInput) ProtoMessage() {}

func (x *ListUsersInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInput.ProtoReflect.Descriptor instead.
func (*ListUsersInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListUsersInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListUsersInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListUsersInput) GetFilters() *ListUsersInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListUsersOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*User `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListUsersOutput) Reset() {
	*x = ListUsersOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersOutput) ProtoMessage() {}

func (x *ListUsersOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersOutput.ProtoReflect.Descriptor instead.
func (*ListUsersOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListUsersOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListUsersOutput) GetItems() []*User {
	if x != nil {
		return x.Items
	}
	return nil
}

type IntrospectQuotaInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntrospectQuotaInput) Reset() {
	*x = IntrospectQuotaInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectQuotaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectQuotaInput) ProtoMessage() {}

func (x *IntrospectQuotaInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectQuotaInput.ProtoReflect.Descriptor instead.
func (*IntrospectQuotaInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{19}
}

type IntrospectQuotaOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestsPerUser        *Quota `protobuf:"bytes,10,opt,name=contests_per_user,json=contestsPerUser,proto3" json:"contests_per_user,omitempty"`                      // number of contests per user
	ProblemsPerContest     *Quota `protobuf:"bytes,11,opt,name=problems_per_contest,json=problemsPerContest,proto3" json:"problems_per_contest,omitempty"`             // number of problems per contest
	ParticipantsPerContest *Quota `protobuf:"bytes,12,opt,name=participants_per_contest,json=participantsPerContest,proto3" json:"participants_per_contest,omitempty"` // number of participants per contest
	ProblemsPerUser        *Quota `protobuf:"bytes,20,opt,name=problems_per_user,json=problemsPerUser,proto3" json:"problems_per_user,omitempty"`                      // number of problems per user
}

func (x *IntrospectQuotaOutput) Reset() {
	*x = IntrospectQuotaOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectQuotaOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectQuotaOutput) ProtoMessage() {}

func (x *IntrospectQuotaOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectQuotaOutput.ProtoReflect.Descriptor instead.
func (*IntrospectQuotaOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{20}
}

func (x *IntrospectQuotaOutput) GetContestsPerUser() *Quota {
	if x != nil {
		return x.ContestsPerUser
	}
	return nil
}

func (x *IntrospectQuotaOutput) GetProblemsPerContest() *Quota {
	if x != nil {
		return x.ProblemsPerContest
	}
	return nil
}

func (x *IntrospectQuotaOutput) GetParticipantsPerContest() *Quota {
	if x != nil {
		return x.ParticipantsPerContest
	}
	return nil
}

func (x *IntrospectQuotaOutput) GetProblemsPerUser() *Quota {
	if x != nil {
		return x.ProblemsPerUser
	}
	return nil
}

type StartRecoveryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email   string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`     // email of the user who starts recovery procedure
	Captcha string `protobuf:"bytes,2,opt,name=captcha,proto3" json:"captcha,omitempty"` // captcha challenge
	Locale  string `protobuf:"bytes,20,opt,name=locale,proto3" json:"locale,omitempty"`  // default locale for user
}

func (x *StartRecoveryInput) Reset() {
	*x = StartRecoveryInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRecoveryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecoveryInput) ProtoMessage() {}

func (x *StartRecoveryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecoveryInput.ProtoReflect.Descriptor instead.
func (*StartRecoveryInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{21}
}

func (x *StartRecoveryInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *StartRecoveryInput) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

func (x *StartRecoveryInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type StartRecoveryOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email recovery hint is a string added to the email subject, so it's easier to find for user
	// this field will be populated even if email wasn't sent
	EmailRecoveryHint string `protobuf:"bytes,1,opt,name=email_recovery_hint,json=emailRecoveryHint,proto3" json:"email_recovery_hint,omitempty"`
}

func (x *StartRecoveryOutput) Reset() {
	*x = StartRecoveryOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRecoveryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecoveryOutput) ProtoMessage() {}

func (x *StartRecoveryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecoveryOutput.ProtoReflect.Descriptor instead.
func (*StartRecoveryOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{22}
}

func (x *StartRecoveryOutput) GetEmailRecoveryHint() string {
	if x != nil {
		return x.EmailRecoveryHint
	}
	return ""
}

type CompleteRecoverInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // user id
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`               // secret from the email sent during StartRecovery
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`           // new password for the user
}

func (x *CompleteRecoverInput) Reset() {
	*x = CompleteRecoverInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRecoverInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRecoverInput) ProtoMessage() {}

func (x *CompleteRecoverInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRecoverInput.ProtoReflect.Descriptor instead.
func (*CompleteRecoverInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{23}
}

func (x *CompleteRecoverInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CompleteRecoverInput) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CompleteRecoverInput) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CompleteRecoverOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteRecoverOutput) Reset() {
	*x = CompleteRecoverOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRecoverOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRecoverOutput) ProtoMessage() {}

func (x *CompleteRecoverOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRecoverOutput.ProtoReflect.Descriptor instead.
func (*CompleteRecoverOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{24}
}

type SelfDestructInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelfDestructInput) Reset() {
	*x = SelfDestructInput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelfDestructInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfDestructInput) ProtoMessage() {}

func (x *SelfDestructInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfDestructInput.ProtoReflect.Descriptor instead.
func (*SelfDestructInput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{25}
}

type SelfDestructOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeleteOn *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=delete_on,json=deleteOn,proto3" json:"delete_on,omitempty"`
}

func (x *SelfDestructOutput) Reset() {
	*x = SelfDestructOutput{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelfDestructOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfDestructOutput) ProtoMessage() {}

func (x *SelfDestructOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfDestructOutput.ProtoReflect.Descriptor instead.
func (*SelfDestructOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{26}
}

func (x *SelfDestructOutput) GetDeleteOn() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteOn
	}
	return nil
}

type ListUsersInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       []*wellknown.ExpressionID     `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Username []*wellknown.ExpressionString `protobuf:"bytes,2,rep,name=username,proto3" json:"username,omitempty"`
}

func (x *ListUsersInput_Filter) Reset() {
	*x = ListUsersInput_Filter{}
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInput_Filter) ProtoMessage() {}

func (x *ListUsersInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_cognito_user_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInput_Filter.ProtoReflect.Descriptor instead.
func (*ListUsersInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_cognito_user_service_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListUsersInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListUsersInput_Filter) GetUsername() []*wellknown.ExpressionString {
	if x != nil {
		return x.Username
	}
	return nil
}

var File_eolymp_cognito_user_service_proto protoreflect.FileDescriptor

var file_eolymp_cognito_user_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6c, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22,
	0xe4, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x63, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x10, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x57, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x22, 0xb0,
	0x03, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x78, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x0c, 0x0a, 0x08, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d,
	0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x03,
	0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x43, 0x43, 0x55, 0x50, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x05, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x49, 0x54, 0x59, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x52, 0x54, 0x48,
	0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x45, 0x10,
	0x08, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x6e, 0x74,
	0x22, 0x8e, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x5f, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x63, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x40, 0x0a, 0x14,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2c,
	0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x12,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xf7, 0x01, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x78, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x41, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x47, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x50,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x18, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x16, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x22, 0x5c, 0x0a,
	0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x48, 0x69,
	0x6e, 0x74, 0x22, 0x63, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x6e, 0x32, 0xf1, 0x0d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x22, 0x06, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2e, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0xae, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x36, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8,
	0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1f, 0x2f, 0x73, 0x65, 0x6c, 0x66,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x2d, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x1c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80,
	0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x22, 0x05, 0x2f, 0x73, 0x65,
	0x6c, 0x66, 0x12, 0x7e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x24, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x2f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x3b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a,
	0x05, 0x82, 0xe3, 0x0a, 0x12, 0x8a, 0xe3, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0e, 0x2f,
	0x73, 0x65, 0x6c, 0x66, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x79, 0x0a,
	0x0e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1c, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x07, 0x12, 0x05, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x98, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x41, 0xea, 0xe2, 0x0a, 0x0c, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x48, 0x43, 0xf8, 0xe2, 0x0a,
	0xf4, 0x03, 0x82, 0xe3, 0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x6f, 0x3a, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x12, 0x10, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x36, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x70, 0x41, 0xf8,
	0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x15, 0x8a, 0xe3, 0x0a, 0x11, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x3a, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x08, 0x12, 0x06, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x24,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x22, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12,
	0x7f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x25, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x22, 0x0e, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x90, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x2f, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8,
	0xe2, 0x0a, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x18, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x73, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1c, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x07, 0x2a, 0x05, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_eolymp_cognito_user_service_proto_rawDescOnce sync.Once
	file_eolymp_cognito_user_service_proto_rawDescData = file_eolymp_cognito_user_service_proto_rawDesc
)

func file_eolymp_cognito_user_service_proto_rawDescGZIP() []byte {
	file_eolymp_cognito_user_service_proto_rawDescOnce.Do(func() {
		file_eolymp_cognito_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_cognito_user_service_proto_rawDescData)
	})
	return file_eolymp_cognito_user_service_proto_rawDescData
}

var file_eolymp_cognito_user_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_cognito_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_eolymp_cognito_user_service_proto_goTypes = []any{
	(UpdateProfileInput_Patch)(0),         // 0: eolymp.cognito.UpdateProfileInput.Patch
	(*UserChangedEvent)(nil),              // 1: eolymp.cognito.UserChangedEvent
	(*CreateUserInput)(nil),               // 2: eolymp.cognito.CreateUserInput
	(*CreateUserOutput)(nil),              // 3: eolymp.cognito.CreateUserOutput
	(*VerifyEmailInput)(nil),              // 4: eolymp.cognito.VerifyEmailInput
	(*VerifyEmailOutput)(nil),             // 5: eolymp.cognito.VerifyEmailOutput
	(*ResendEmailVerificationInput)(nil),  // 6: eolymp.cognito.ResendEmailVerificationInput
	(*ResendEmailVerificationOutput)(nil), // 7: eolymp.cognito.ResendEmailVerificationOutput
	(*UpdateProfileInput)(nil),            // 8: eolymp.cognito.UpdateProfileInput
	(*UpdateProfileOutput)(nil),           // 9: eolymp.cognito.UpdateProfileOutput
	(*UpdatePictureInput)(nil),            // 10: eolymp.cognito.UpdatePictureInput
	(*UpdatePictureOutput)(nil),           // 11: eolymp.cognito.UpdatePictureOutput
	(*UpdatePasswordInput)(nil),           // 12: eolymp.cognito.UpdatePasswordInput
	(*UpdatePasswordOutput)(nil),          // 13: eolymp.cognito.UpdatePasswordOutput
	(*IntrospectUserInput)(nil),           // 14: eolymp.cognito.IntrospectUserInput
	(*IntrospectUserOutput)(nil),          // 15: eolymp.cognito.IntrospectUserOutput
	(*DescribeUserInput)(nil),             // 16: eolymp.cognito.DescribeUserInput
	(*DescribeUserOutput)(nil),            // 17: eolymp.cognito.DescribeUserOutput
	(*ListUsersInput)(nil),                // 18: eolymp.cognito.ListUsersInput
	(*ListUsersOutput)(nil),               // 19: eolymp.cognito.ListUsersOutput
	(*IntrospectQuotaInput)(nil),          // 20: eolymp.cognito.IntrospectQuotaInput
	(*IntrospectQuotaOutput)(nil),         // 21: eolymp.cognito.IntrospectQuotaOutput
	(*StartRecoveryInput)(nil),            // 22: eolymp.cognito.StartRecoveryInput
	(*StartRecoveryOutput)(nil),           // 23: eolymp.cognito.StartRecoveryOutput
	(*CompleteRecoverInput)(nil),          // 24: eolymp.cognito.CompleteRecoverInput
	(*CompleteRecoverOutput)(nil),         // 25: eolymp.cognito.CompleteRecoverOutput
	(*SelfDestructInput)(nil),             // 26: eolymp.cognito.SelfDestructInput
	(*SelfDestructOutput)(nil),            // 27: eolymp.cognito.SelfDestructOutput
	(*ListUsersInput_Filter)(nil),         // 28: eolymp.cognito.ListUsersInput.Filter
	(*User)(nil),                          // 29: eolymp.cognito.User
	(*Quota)(nil),                         // 30: eolymp.cognito.Quota
	(*timestamppb.Timestamp)(nil),         // 31: google.protobuf.Timestamp
	(*wellknown.ExpressionID)(nil),        // 32: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil),    // 33: eolymp.wellknown.ExpressionString
}
var file_eolymp_cognito_user_service_proto_depIdxs = []int32{
	29, // 0: eolymp.cognito.UserChangedEvent.before:type_name -> eolymp.cognito.User
	29, // 1: eolymp.cognito.UserChangedEvent.after:type_name -> eolymp.cognito.User
	0,  // 2: eolymp.cognito.UpdateProfileInput.patch:type_name -> eolymp.cognito.UpdateProfileInput.Patch
	29, // 3: eolymp.cognito.IntrospectUserOutput.user:type_name -> eolymp.cognito.User
	29, // 4: eolymp.cognito.DescribeUserOutput.user:type_name -> eolymp.cognito.User
	28, // 5: eolymp.cognito.ListUsersInput.filters:type_name -> eolymp.cognito.ListUsersInput.Filter
	29, // 6: eolymp.cognito.ListUsersOutput.items:type_name -> eolymp.cognito.User
	30, // 7: eolymp.cognito.IntrospectQuotaOutput.contests_per_user:type_name -> eolymp.cognito.Quota
	30, // 8: eolymp.cognito.IntrospectQuotaOutput.problems_per_contest:type_name -> eolymp.cognito.Quota
	30, // 9: eolymp.cognito.IntrospectQuotaOutput.participants_per_contest:type_name -> eolymp.cognito.Quota
	30, // 10: eolymp.cognito.IntrospectQuotaOutput.problems_per_user:type_name -> eolymp.cognito.Quota
	31, // 11: eolymp.cognito.SelfDestructOutput.delete_on:type_name -> google.protobuf.Timestamp
	32, // 12: eolymp.cognito.ListUsersInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	33, // 13: eolymp.cognito.ListUsersInput.Filter.username:type_name -> eolymp.wellknown.ExpressionString
	2,  // 14: eolymp.cognito.UserService.CreateUser:input_type -> eolymp.cognito.CreateUserInput
	4,  // 15: eolymp.cognito.UserService.VerifyEmail:input_type -> eolymp.cognito.VerifyEmailInput
	6,  // 16: eolymp.cognito.UserService.ResendEmailVerification:input_type -> eolymp.cognito.ResendEmailVerificationInput
	8,  // 17: eolymp.cognito.UserService.UpdateProfile:input_type -> eolymp.cognito.UpdateProfileInput
	10, // 18: eolymp.cognito.UserService.UpdatePicture:input_type -> eolymp.cognito.UpdatePictureInput
	12, // 19: eolymp.cognito.UserService.UpdatePassword:input_type -> eolymp.cognito.UpdatePasswordInput
	14, // 20: eolymp.cognito.UserService.IntrospectUser:input_type -> eolymp.cognito.IntrospectUserInput
	16, // 21: eolymp.cognito.UserService.DescribeUser:input_type -> eolymp.cognito.DescribeUserInput
	18, // 22: eolymp.cognito.UserService.ListUsers:input_type -> eolymp.cognito.ListUsersInput
	20, // 23: eolymp.cognito.UserService.IntrospectQuota:input_type -> eolymp.cognito.IntrospectQuotaInput
	22, // 24: eolymp.cognito.UserService.StartRecovery:input_type -> eolymp.cognito.StartRecoveryInput
	24, // 25: eolymp.cognito.UserService.CompleteRecovery:input_type -> eolymp.cognito.CompleteRecoverInput
	26, // 26: eolymp.cognito.UserService.SelfDestruct:input_type -> eolymp.cognito.SelfDestructInput
	3,  // 27: eolymp.cognito.UserService.CreateUser:output_type -> eolymp.cognito.CreateUserOutput
	5,  // 28: eolymp.cognito.UserService.VerifyEmail:output_type -> eolymp.cognito.VerifyEmailOutput
	7,  // 29: eolymp.cognito.UserService.ResendEmailVerification:output_type -> eolymp.cognito.ResendEmailVerificationOutput
	9,  // 30: eolymp.cognito.UserService.UpdateProfile:output_type -> eolymp.cognito.UpdateProfileOutput
	11, // 31: eolymp.cognito.UserService.UpdatePicture:output_type -> eolymp.cognito.UpdatePictureOutput
	13, // 32: eolymp.cognito.UserService.UpdatePassword:output_type -> eolymp.cognito.UpdatePasswordOutput
	15, // 33: eolymp.cognito.UserService.IntrospectUser:output_type -> eolymp.cognito.IntrospectUserOutput
	17, // 34: eolymp.cognito.UserService.DescribeUser:output_type -> eolymp.cognito.DescribeUserOutput
	19, // 35: eolymp.cognito.UserService.ListUsers:output_type -> eolymp.cognito.ListUsersOutput
	21, // 36: eolymp.cognito.UserService.IntrospectQuota:output_type -> eolymp.cognito.IntrospectQuotaOutput
	23, // 37: eolymp.cognito.UserService.StartRecovery:output_type -> eolymp.cognito.StartRecoveryOutput
	25, // 38: eolymp.cognito.UserService.CompleteRecovery:output_type -> eolymp.cognito.CompleteRecoverOutput
	27, // 39: eolymp.cognito.UserService.SelfDestruct:output_type -> eolymp.cognito.SelfDestructOutput
	27, // [27:40] is the sub-list for method output_type
	14, // [14:27] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_eolymp_cognito_user_service_proto_init() }
func file_eolymp_cognito_user_service_proto_init() {
	if File_eolymp_cognito_user_service_proto != nil {
		return
	}
	file_eolymp_cognito_quota_proto_init()
	file_eolymp_cognito_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_cognito_user_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_cognito_user_service_proto_goTypes,
		DependencyIndexes: file_eolymp_cognito_user_service_proto_depIdxs,
		EnumInfos:         file_eolymp_cognito_user_service_proto_enumTypes,
		MessageInfos:      file_eolymp_cognito_user_service_proto_msgTypes,
	}.Build()
	File_eolymp_cognito_user_service_proto = out.File
	file_eolymp_cognito_user_service_proto_rawDesc = nil
	file_eolymp_cognito_user_service_proto_goTypes = nil
	file_eolymp_cognito_user_service_proto_depIdxs = nil
}
