// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: eolymp/certificate/certificate.proto

package certificate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Certificate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId        string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                       // ID of the member who owns the certificate
	TargetId        string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`                       // ID of the target object (e.g. contest ID), only one certificate is allowed per member-target
	VerificationUrl string                 `protobuf:"bytes,20,opt,name=verification_url,json=verificationUrl,proto3" json:"verification_url,omitempty"` // URL to verify certificate
	DownloadUrl     string                 `protobuf:"bytes,21,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`             // URL to download certificate in PDF
	HtmlUrl         string                 `protobuf:"bytes,22,opt,name=html_url,json=htmlUrl,proto3" json:"html_url,omitempty"`                         // URL to download certificate in HTML
	Locale          string                 `protobuf:"bytes,7,opt,name=locale,proto3" json:"locale,omitempty"`
	Type            string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Attributes      map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IssuedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	mi := &file_eolymp_certificate_certificate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_certificate_certificate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_eolymp_certificate_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *Certificate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Certificate) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *Certificate) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Certificate) GetVerificationUrl() string {
	if x != nil {
		return x.VerificationUrl
	}
	return ""
}

func (x *Certificate) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *Certificate) GetHtmlUrl() string {
	if x != nil {
		return x.HtmlUrl
	}
	return ""
}

func (x *Certificate) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Certificate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Certificate) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Certificate) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *Certificate) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

var File_eolymp_certificate_certificate_proto protoreflect.FileDescriptor

const file_eolymp_certificate_certificate_proto_rawDesc = "" +
	"\n" +
	"$eolymp/certificate/certificate.proto\x12\x12eolymp.certificate\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf0\x03\n" +
	"\vCertificate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\tR\btargetId\x12)\n" +
	"\x10verification_url\x18\x14 \x01(\tR\x0fverificationUrl\x12!\n" +
	"\fdownload_url\x18\x15 \x01(\tR\vdownloadUrl\x12\x19\n" +
	"\bhtml_url\x18\x16 \x01(\tR\ahtmlUrl\x12\x16\n" +
	"\x06locale\x18\a \x01(\tR\x06locale\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12O\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2/.eolymp.certificate.Certificate.AttributesEntryR\n" +
	"attributes\x127\n" +
	"\tissued_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\bissuedAt\x129\n" +
	"\n" +
	"expires_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B9Z7github.com/eolymp/go-sdk/eolymp/certificate;certificateb\x06proto3"

var (
	file_eolymp_certificate_certificate_proto_rawDescOnce sync.Once
	file_eolymp_certificate_certificate_proto_rawDescData []byte
)

func file_eolymp_certificate_certificate_proto_rawDescGZIP() []byte {
	file_eolymp_certificate_certificate_proto_rawDescOnce.Do(func() {
		file_eolymp_certificate_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_certificate_certificate_proto_rawDesc), len(file_eolymp_certificate_certificate_proto_rawDesc)))
	})
	return file_eolymp_certificate_certificate_proto_rawDescData
}

var file_eolymp_certificate_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eolymp_certificate_certificate_proto_goTypes = []any{
	(*Certificate)(nil),           // 0: eolymp.certificate.Certificate
	nil,                           // 1: eolymp.certificate.Certificate.AttributesEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_eolymp_certificate_certificate_proto_depIdxs = []int32{
	1, // 0: eolymp.certificate.Certificate.attributes:type_name -> eolymp.certificate.Certificate.AttributesEntry
	2, // 1: eolymp.certificate.Certificate.issued_at:type_name -> google.protobuf.Timestamp
	2, // 2: eolymp.certificate.Certificate.expires_at:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_eolymp_certificate_certificate_proto_init() }
func file_eolymp_certificate_certificate_proto_init() {
	if File_eolymp_certificate_certificate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_certificate_certificate_proto_rawDesc), len(file_eolymp_certificate_certificate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_certificate_certificate_proto_goTypes,
		DependencyIndexes: file_eolymp_certificate_certificate_proto_depIdxs,
		MessageInfos:      file_eolymp_certificate_certificate_proto_msgTypes,
	}.Build()
	File_eolymp_certificate_certificate_proto = out.File
	file_eolymp_certificate_certificate_proto_goTypes = nil
	file_eolymp_certificate_certificate_proto_depIdxs = nil
}
