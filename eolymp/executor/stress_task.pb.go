// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/executor/stress_task.proto

package executor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StressTask struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TaskId              string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Reference           string                 `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Origin              string                 `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Metadata            map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WallTimeLimit       uint32                 `protobuf:"varint,10,opt,name=wall_time_limit,json=wallTimeLimit,proto3" json:"wall_time_limit,omitempty"`  // Real-world time limit in milliseconds.
	CpuTimeLimit        uint32                 `protobuf:"varint,11,opt,name=cpu_time_limit,json=cpuTimeLimit,proto3" json:"cpu_time_limit,omitempty"`     // CPU time limit in milliseconds.
	MemoryLimit         uint64                 `protobuf:"varint,12,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`          // Memory limit in bytes.
	IterationCount      uint32                 `protobuf:"varint,15,opt,name=iteration_count,json=iterationCount,proto3" json:"iteration_count,omitempty"` // Number of iterations for stress test
	RunCount            uint32                 `protobuf:"varint,16,opt,name=run_count,json=runCount,proto3" json:"run_count,omitempty"`
	InteractiveFollowup bool                   `protobuf:"varint,17,opt,name=interactive_followup,json=interactiveFollowup,proto3" json:"interactive_followup,omitempty"`
	Interactor          *Script                `protobuf:"bytes,25,opt,name=interactor,proto3" json:"interactor,omitempty"` // Interactor configuration
	Validator           *Script                `protobuf:"bytes,26,opt,name=validator,proto3" json:"validator,omitempty"`   // Validator configuration
	Generator           *Script                `protobuf:"bytes,27,opt,name=generator,proto3" json:"generator,omitempty"`
	Solution            *Script                `protobuf:"bytes,28,opt,name=solution,proto3" json:"solution,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StressTask) Reset() {
	*x = StressTask{}
	mi := &file_eolymp_executor_stress_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StressTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StressTask) ProtoMessage() {}

func (x *StressTask) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_stress_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StressTask.ProtoReflect.Descriptor instead.
func (*StressTask) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_stress_task_proto_rawDescGZIP(), []int{0}
}

func (x *StressTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *StressTask) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *StressTask) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *StressTask) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StressTask) GetWallTimeLimit() uint32 {
	if x != nil {
		return x.WallTimeLimit
	}
	return 0
}

func (x *StressTask) GetCpuTimeLimit() uint32 {
	if x != nil {
		return x.CpuTimeLimit
	}
	return 0
}

func (x *StressTask) GetMemoryLimit() uint64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *StressTask) GetIterationCount() uint32 {
	if x != nil {
		return x.IterationCount
	}
	return 0
}

func (x *StressTask) GetRunCount() uint32 {
	if x != nil {
		return x.RunCount
	}
	return 0
}

func (x *StressTask) GetInteractiveFollowup() bool {
	if x != nil {
		return x.InteractiveFollowup
	}
	return false
}

func (x *StressTask) GetInteractor() *Script {
	if x != nil {
		return x.Interactor
	}
	return nil
}

func (x *StressTask) GetValidator() *Script {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *StressTask) GetGenerator() *Script {
	if x != nil {
		return x.Generator
	}
	return nil
}

func (x *StressTask) GetSolution() *Script {
	if x != nil {
		return x.Solution
	}
	return nil
}

var File_eolymp_executor_stress_task_proto protoreflect.FileDescriptor

const file_eolymp_executor_stress_task_proto_rawDesc = "" +
	"\n" +
	"!eolymp/executor/stress_task.proto\x12\x0feolymp.executor\x1a\x1ceolymp/executor/script.proto\"\xa5\x05\n" +
	"\n" +
	"StressTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1c\n" +
	"\treference\x18\x02 \x01(\tR\treference\x12\x16\n" +
	"\x06origin\x18\x03 \x01(\tR\x06origin\x12E\n" +
	"\bmetadata\x18\x05 \x03(\v2).eolymp.executor.StressTask.MetadataEntryR\bmetadata\x12&\n" +
	"\x0fwall_time_limit\x18\n" +
	" \x01(\rR\rwallTimeLimit\x12$\n" +
	"\x0ecpu_time_limit\x18\v \x01(\rR\fcpuTimeLimit\x12!\n" +
	"\fmemory_limit\x18\f \x01(\x04R\vmemoryLimit\x12'\n" +
	"\x0fiteration_count\x18\x0f \x01(\rR\x0eiterationCount\x12\x1b\n" +
	"\trun_count\x18\x10 \x01(\rR\brunCount\x121\n" +
	"\x14interactive_followup\x18\x11 \x01(\bR\x13interactiveFollowup\x127\n" +
	"\n" +
	"interactor\x18\x19 \x01(\v2\x17.eolymp.executor.ScriptR\n" +
	"interactor\x125\n" +
	"\tvalidator\x18\x1a \x01(\v2\x17.eolymp.executor.ScriptR\tvalidator\x125\n" +
	"\tgenerator\x18\x1b \x01(\v2\x17.eolymp.executor.ScriptR\tgenerator\x123\n" +
	"\bsolution\x18\x1c \x01(\v2\x17.eolymp.executor.ScriptR\bsolution\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B3Z1github.com/eolymp/go-sdk/eolymp/executor;executorb\x06proto3"

var (
	file_eolymp_executor_stress_task_proto_rawDescOnce sync.Once
	file_eolymp_executor_stress_task_proto_rawDescData []byte
)

func file_eolymp_executor_stress_task_proto_rawDescGZIP() []byte {
	file_eolymp_executor_stress_task_proto_rawDescOnce.Do(func() {
		file_eolymp_executor_stress_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_executor_stress_task_proto_rawDesc), len(file_eolymp_executor_stress_task_proto_rawDesc)))
	})
	return file_eolymp_executor_stress_task_proto_rawDescData
}

var file_eolymp_executor_stress_task_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eolymp_executor_stress_task_proto_goTypes = []any{
	(*StressTask)(nil), // 0: eolymp.executor.StressTask
	nil,                // 1: eolymp.executor.StressTask.MetadataEntry
	(*Script)(nil),     // 2: eolymp.executor.Script
}
var file_eolymp_executor_stress_task_proto_depIdxs = []int32{
	1, // 0: eolymp.executor.StressTask.metadata:type_name -> eolymp.executor.StressTask.MetadataEntry
	2, // 1: eolymp.executor.StressTask.interactor:type_name -> eolymp.executor.Script
	2, // 2: eolymp.executor.StressTask.validator:type_name -> eolymp.executor.Script
	2, // 3: eolymp.executor.StressTask.generator:type_name -> eolymp.executor.Script
	2, // 4: eolymp.executor.StressTask.solution:type_name -> eolymp.executor.Script
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_eolymp_executor_stress_task_proto_init() }
func file_eolymp_executor_stress_task_proto_init() {
	if File_eolymp_executor_stress_task_proto != nil {
		return
	}
	file_eolymp_executor_script_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_executor_stress_task_proto_rawDesc), len(file_eolymp_executor_stress_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_executor_stress_task_proto_goTypes,
		DependencyIndexes: file_eolymp_executor_stress_task_proto_depIdxs,
		MessageInfos:      file_eolymp_executor_stress_task_proto_msgTypes,
	}.Build()
	File_eolymp_executor_stress_task_proto = out.File
	file_eolymp_executor_stress_task_proto_goTypes = nil
	file_eolymp_executor_stress_task_proto_depIdxs = nil
}
