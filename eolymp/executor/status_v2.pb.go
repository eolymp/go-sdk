// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: eolymp/executor/status_v2.proto

package executor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of the status report
type StatusV2_Type int32

const (
	// Report without type should be ignored.
	StatusV2_UNSPECIFIED StatusV2_Type = 0
	// Update report contains information about runs, inspect runs to see their status.
	// Update report might be partial in case task was split among multiple agents.
	StatusV2_UPDATE StatusV2_Type = 1
	// Error report means agent has encountered an error and couldn't perform runs. This is normally related to
	// configuration or compilation error.
	StatusV2_ERROR StatusV2_Type = 2
)

// Enum value maps for StatusV2_Type.
var (
	StatusV2_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UPDATE",
		2: "ERROR",
	}
	StatusV2_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UPDATE":      1,
		"ERROR":       2,
	}
)

func (x StatusV2_Type) Enum() *StatusV2_Type {
	p := new(StatusV2_Type)
	*p = x
	return p
}

func (x StatusV2_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusV2_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_executor_status_v2_proto_enumTypes[0].Descriptor()
}

func (StatusV2_Type) Type() protoreflect.EnumType {
	return &file_eolymp_executor_status_v2_proto_enumTypes[0]
}

func (x StatusV2_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusV2_Type.Descriptor instead.
func (StatusV2_Type) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 0}
}

type StatusV2_Run_Status int32

const (
	StatusV2_Run_UNSPECIFIED StatusV2_Run_Status = 0 // Should not be used
	StatusV2_Run_COMPLETE    StatusV2_Run_Status = 1 // Finished
	StatusV2_Run_PENDING     StatusV2_Run_Status = 2 // Pending execution
	StatusV2_Run_EXECUTING   StatusV2_Run_Status = 3 // Executing
	StatusV2_Run_RUN_ERROR   StatusV2_Run_Status = 4 // One of the steps failed
	StatusV2_Run_SKIPPED     StatusV2_Run_Status = 6 // Run has been skipped
)

// Enum value maps for StatusV2_Run_Status.
var (
	StatusV2_Run_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "COMPLETE",
		2: "PENDING",
		3: "EXECUTING",
		4: "RUN_ERROR",
		6: "SKIPPED",
	}
	StatusV2_Run_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"COMPLETE":    1,
		"PENDING":     2,
		"EXECUTING":   3,
		"RUN_ERROR":   4,
		"SKIPPED":     6,
	}
)

func (x StatusV2_Run_Status) Enum() *StatusV2_Run_Status {
	p := new(StatusV2_Run_Status)
	*p = x
	return p
}

func (x StatusV2_Run_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusV2_Run_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_executor_status_v2_proto_enumTypes[1].Descriptor()
}

func (StatusV2_Run_Status) Type() protoreflect.EnumType {
	return &file_eolymp_executor_status_v2_proto_enumTypes[1]
}

func (x StatusV2_Run_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusV2_Run_Status.Descriptor instead.
func (StatusV2_Run_Status) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 1, 0}
}

type StatusV2_ExecuteOp_Status int32

const (
	StatusV2_ExecuteOp_UNSPECIFIED     StatusV2_ExecuteOp_Status = 0 // Should not be used.
	StatusV2_ExecuteOp_SUCCESS         StatusV2_ExecuteOp_Status = 1 // Execution finished without error.
	StatusV2_ExecuteOp_TIMEOUT         StatusV2_ExecuteOp_Status = 2 // Timeout reached (wall time usage reached).
	StatusV2_ExecuteOp_CPU_EXHAUSTED   StatusV2_ExecuteOp_Status = 3 // CPU exhausted (cpu time usage reached).
	StatusV2_ExecuteOp_MEMORY_OVERFLOW StatusV2_ExecuteOp_Status = 4 // Memory limit reached.
	StatusV2_ExecuteOp_RUNTIME_ERROR   StatusV2_ExecuteOp_Status = 5 // Executed, but exit code was non-zero.
	StatusV2_ExecuteOp_SKIPPED         StatusV2_ExecuteOp_Status = 6 // Execution was skipped.
)

// Enum value maps for StatusV2_ExecuteOp_Status.
var (
	StatusV2_ExecuteOp_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "SUCCESS",
		2: "TIMEOUT",
		3: "CPU_EXHAUSTED",
		4: "MEMORY_OVERFLOW",
		5: "RUNTIME_ERROR",
		6: "SKIPPED",
	}
	StatusV2_ExecuteOp_Status_value = map[string]int32{
		"UNSPECIFIED":     0,
		"SUCCESS":         1,
		"TIMEOUT":         2,
		"CPU_EXHAUSTED":   3,
		"MEMORY_OVERFLOW": 4,
		"RUNTIME_ERROR":   5,
		"SKIPPED":         6,
	}
)

func (x StatusV2_ExecuteOp_Status) Enum() *StatusV2_ExecuteOp_Status {
	p := new(StatusV2_ExecuteOp_Status)
	*p = x
	return p
}

func (x StatusV2_ExecuteOp_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusV2_ExecuteOp_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_executor_status_v2_proto_enumTypes[2].Descriptor()
}

func (StatusV2_ExecuteOp_Status) Type() protoreflect.EnumType {
	return &file_eolymp_executor_status_v2_proto_enumTypes[2]
}

func (x StatusV2_ExecuteOp_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusV2_ExecuteOp_Status.Descriptor instead.
func (StatusV2_ExecuteOp_Status) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 5, 0}
}

// Status represents results of the executing task.
type StatusV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task reference as set when task was created.
	Reference string `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	// Originator of the task (service which created task)
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	// Report type, see explanation to Type enumeration
	Type StatusV2_Type `protobuf:"varint,10,opt,name=type,proto3,enum=eolymp.executor.StatusV2_Type" json:"type,omitempty"`
	// Always increasing report version.
	//
	// Each time agent emits a report it would increase version, so listener can put reports in the right order: process
	// newer and ignore older.
	//
	// In case runs of a single task are distributed among multiple agents, each agent will report version independently,
	// so listener must track versions per run (eg. run #1 last update is v.15, run #2 last update is v.41, if listener
	// receives run #1 v.20 it's newer and should be processed, but run #2 v.20 should be ignored).
	Version uint32 `protobuf:"varint,100,opt,name=version,proto3" json:"version,omitempty"`
	// Unique identifier of the agent which executed task.
	Agent string `protobuf:"bytes,110,opt,name=agent,proto3" json:"agent,omitempty"`
	// Actor statuses.
	Actors []*StatusV2_Actor `protobuf:"bytes,50,rep,name=actors,proto3" json:"actors,omitempty"`
	// Runs for UPDATE report.
	Runs []*StatusV2_Run `protobuf:"bytes,40,rep,name=runs,proto3" json:"runs,omitempty"`
	// Error message for ERROR report.
	Error string `protobuf:"bytes,20,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusV2) Reset() {
	*x = StatusV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2) ProtoMessage() {}

func (x *StatusV2) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2.ProtoReflect.Descriptor instead.
func (*StatusV2) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0}
}

func (x *StatusV2) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *StatusV2) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *StatusV2) GetType() StatusV2_Type {
	if x != nil {
		return x.Type
	}
	return StatusV2_UNSPECIFIED
}

func (x *StatusV2) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StatusV2) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *StatusV2) GetActors() []*StatusV2_Actor {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *StatusV2) GetRuns() []*StatusV2_Run {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *StatusV2) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Communicates status of the actor
type StatusV2_Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actor name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Source code signature is a unique fingerprint of the code, calculated by agent for a specific language.
	// It should be used to find identical or similar source codes.
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Actor related error message, for example compilation error. If empty actor considered to be initialized correctly.
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusV2_Actor) Reset() {
	*x = StatusV2_Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_Actor) ProtoMessage() {}

func (x *StatusV2_Actor) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_Actor.ProtoReflect.Descriptor instead.
func (*StatusV2_Actor) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StatusV2_Actor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusV2_Actor) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *StatusV2_Actor) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Run represents a single execution scenario. Runs consist of multiple steps.
type StatusV2_Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference string              `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`                                     // Run reference as set by originator.
	Status    StatusV2_Run_Status `protobuf:"varint,2,opt,name=status,proto3,enum=eolymp.executor.StatusV2_Run_Status" json:"status,omitempty"` // Overall run status.
	Steps     []*StatusV2_Step    `protobuf:"bytes,10,rep,name=steps,proto3" json:"steps,omitempty"`                                            // Statuses for steps.
}

func (x *StatusV2_Run) Reset() {
	*x = StatusV2_Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_Run) ProtoMessage() {}

func (x *StatusV2_Run) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_Run.ProtoReflect.Descriptor instead.
func (*StatusV2_Run) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 1}
}

func (x *StatusV2_Run) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *StatusV2_Run) GetStatus() StatusV2_Run_Status {
	if x != nil {
		return x.Status
	}
	return StatusV2_Run_UNSPECIFIED
}

func (x *StatusV2_Run) GetSteps() []*StatusV2_Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

// Step represents a status for a single run operation.
type StatusV2_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Write   []*StatusV2_WriteOp   `protobuf:"bytes,10,rep,name=write,proto3" json:"write,omitempty"`
	Copy    []*StatusV2_CopyOp    `protobuf:"bytes,11,rep,name=copy,proto3" json:"copy,omitempty"`
	Execute []*StatusV2_ExecuteOp `protobuf:"bytes,12,rep,name=execute,proto3" json:"execute,omitempty"`
	Upload  []*StatusV2_UploadOp  `protobuf:"bytes,13,rep,name=upload,proto3" json:"upload,omitempty"`
}

func (x *StatusV2_Step) Reset() {
	*x = StatusV2_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_Step) ProtoMessage() {}

func (x *StatusV2_Step) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_Step.ProtoReflect.Descriptor instead.
func (*StatusV2_Step) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 2}
}

func (x *StatusV2_Step) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusV2_Step) GetWrite() []*StatusV2_WriteOp {
	if x != nil {
		return x.Write
	}
	return nil
}

func (x *StatusV2_Step) GetCopy() []*StatusV2_CopyOp {
	if x != nil {
		return x.Copy
	}
	return nil
}

func (x *StatusV2_Step) GetExecute() []*StatusV2_ExecuteOp {
	if x != nil {
		return x.Execute
	}
	return nil
}

func (x *StatusV2_Step) GetUpload() []*StatusV2_UploadOp {
	if x != nil {
		return x.Upload
	}
	return nil
}

type StatusV2_WriteOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusV2_WriteOp) Reset() {
	*x = StatusV2_WriteOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_WriteOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_WriteOp) ProtoMessage() {}

func (x *StatusV2_WriteOp) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_WriteOp.ProtoReflect.Descriptor instead.
func (*StatusV2_WriteOp) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 3}
}

type StatusV2_CopyOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusV2_CopyOp) Reset() {
	*x = StatusV2_CopyOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_CopyOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_CopyOp) ProtoMessage() {}

func (x *StatusV2_CopyOp) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_CopyOp.ProtoReflect.Descriptor instead.
func (*StatusV2_CopyOp) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 4}
}

type StatusV2_ExecuteOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor         string                    `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	Status        StatusV2_ExecuteOp_Status `protobuf:"varint,2,opt,name=status,proto3,enum=eolymp.executor.StatusV2_ExecuteOp_Status" json:"status,omitempty"`
	WallTimeUsage uint32                    `protobuf:"varint,51,opt,name=wall_time_usage,json=wallTimeUsage,proto3" json:"wall_time_usage,omitempty"` // Wall time usage in milliseconds
	WallTimeLimit uint32                    `protobuf:"varint,61,opt,name=wall_time_limit,json=wallTimeLimit,proto3" json:"wall_time_limit,omitempty"` // Wall time limit in milliseconds
	CpuTimeUsage  uint32                    `protobuf:"varint,52,opt,name=cpu_time_usage,json=cpuTimeUsage,proto3" json:"cpu_time_usage,omitempty"`    // CPU time usage in milliseconds
	CpuTimeLimit  uint32                    `protobuf:"varint,62,opt,name=cpu_time_limit,json=cpuTimeLimit,proto3" json:"cpu_time_limit,omitempty"`    // CPU time limit in milliseconds
	MemoryUsage   uint64                    `protobuf:"varint,53,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`         // Memory usage in bytes
	MemoryLimit   uint64                    `protobuf:"varint,63,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`         // Memory limit in bytes
	ExitCode      uint32                    `protobuf:"varint,70,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`                  // program exit code
	Signal        uint32                    `protobuf:"varint,71,opt,name=signal,proto3" json:"signal,omitempty"`                                      // might contain signal used to kill program
}

func (x *StatusV2_ExecuteOp) Reset() {
	*x = StatusV2_ExecuteOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_ExecuteOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_ExecuteOp) ProtoMessage() {}

func (x *StatusV2_ExecuteOp) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_ExecuteOp.ProtoReflect.Descriptor instead.
func (*StatusV2_ExecuteOp) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 5}
}

func (x *StatusV2_ExecuteOp) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *StatusV2_ExecuteOp) GetStatus() StatusV2_ExecuteOp_Status {
	if x != nil {
		return x.Status
	}
	return StatusV2_ExecuteOp_UNSPECIFIED
}

func (x *StatusV2_ExecuteOp) GetWallTimeUsage() uint32 {
	if x != nil {
		return x.WallTimeUsage
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetWallTimeLimit() uint32 {
	if x != nil {
		return x.WallTimeLimit
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetCpuTimeUsage() uint32 {
	if x != nil {
		return x.CpuTimeUsage
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetCpuTimeLimit() uint32 {
	if x != nil {
		return x.CpuTimeLimit
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetMemoryLimit() uint64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetExitCode() uint32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *StatusV2_ExecuteOp) GetSignal() uint32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

type StatusV2_UploadOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetName string `protobuf:"bytes,1,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	TargetErn  string `protobuf:"bytes,2,opt,name=target_ern,json=targetErn,proto3" json:"target_ern,omitempty"`
}

func (x *StatusV2_UploadOp) Reset() {
	*x = StatusV2_UploadOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_executor_status_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusV2_UploadOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusV2_UploadOp) ProtoMessage() {}

func (x *StatusV2_UploadOp) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_executor_status_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusV2_UploadOp.ProtoReflect.Descriptor instead.
func (*StatusV2_UploadOp) Descriptor() ([]byte, []int) {
	return file_eolymp_executor_status_v2_proto_rawDescGZIP(), []int{0, 6}
}

func (x *StatusV2_UploadOp) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *StatusV2_UploadOp) GetTargetErn() string {
	if x != nil {
		return x.TargetErn
	}
	return ""
}

var File_eolymp_executor_status_v2_proto protoreflect.FileDescriptor

var file_eolymp_executor_status_v2_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x22, 0x86, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x52,
	0x04, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x4f, 0x0a, 0x05, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xf8, 0x01, 0x0a,
	0x03, 0x52, 0x75, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x52, 0x75,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x5f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x55, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b,
	0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x06, 0x1a, 0x84, 0x02, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x04, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x70, 0x52, 0x04, 0x63,
	0x6f, 0x70, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x09,
	0x0a, 0x07, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x1a, 0x08, 0x0a, 0x06, 0x43, 0x6f, 0x70,
	0x79, 0x4f, 0x70, 0x1a, 0xf9, 0x03, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x56, 0x32, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x77,
	0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x77, 0x61,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x70, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x22, 0x7b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49,
	0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x50, 0x55, 0x5f, 0x45,
	0x58, 0x48, 0x41, 0x55, 0x53, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x45,
	0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x06, 0x1a,
	0x4a, 0x0a, 0x08, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x72, 0x6e, 0x22, 0x2e, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x3b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_executor_status_v2_proto_rawDescOnce sync.Once
	file_eolymp_executor_status_v2_proto_rawDescData = file_eolymp_executor_status_v2_proto_rawDesc
)

func file_eolymp_executor_status_v2_proto_rawDescGZIP() []byte {
	file_eolymp_executor_status_v2_proto_rawDescOnce.Do(func() {
		file_eolymp_executor_status_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_executor_status_v2_proto_rawDescData)
	})
	return file_eolymp_executor_status_v2_proto_rawDescData
}

var file_eolymp_executor_status_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_eolymp_executor_status_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_eolymp_executor_status_v2_proto_goTypes = []interface{}{
	(StatusV2_Type)(0),             // 0: eolymp.executor.StatusV2.Type
	(StatusV2_Run_Status)(0),       // 1: eolymp.executor.StatusV2.Run.Status
	(StatusV2_ExecuteOp_Status)(0), // 2: eolymp.executor.StatusV2.ExecuteOp.Status
	(*StatusV2)(nil),               // 3: eolymp.executor.StatusV2
	(*StatusV2_Actor)(nil),         // 4: eolymp.executor.StatusV2.Actor
	(*StatusV2_Run)(nil),           // 5: eolymp.executor.StatusV2.Run
	(*StatusV2_Step)(nil),          // 6: eolymp.executor.StatusV2.Step
	(*StatusV2_WriteOp)(nil),       // 7: eolymp.executor.StatusV2.WriteOp
	(*StatusV2_CopyOp)(nil),        // 8: eolymp.executor.StatusV2.CopyOp
	(*StatusV2_ExecuteOp)(nil),     // 9: eolymp.executor.StatusV2.ExecuteOp
	(*StatusV2_UploadOp)(nil),      // 10: eolymp.executor.StatusV2.UploadOp
}
var file_eolymp_executor_status_v2_proto_depIdxs = []int32{
	0,  // 0: eolymp.executor.StatusV2.type:type_name -> eolymp.executor.StatusV2.Type
	4,  // 1: eolymp.executor.StatusV2.actors:type_name -> eolymp.executor.StatusV2.Actor
	5,  // 2: eolymp.executor.StatusV2.runs:type_name -> eolymp.executor.StatusV2.Run
	1,  // 3: eolymp.executor.StatusV2.Run.status:type_name -> eolymp.executor.StatusV2.Run.Status
	6,  // 4: eolymp.executor.StatusV2.Run.steps:type_name -> eolymp.executor.StatusV2.Step
	7,  // 5: eolymp.executor.StatusV2.Step.write:type_name -> eolymp.executor.StatusV2.WriteOp
	8,  // 6: eolymp.executor.StatusV2.Step.copy:type_name -> eolymp.executor.StatusV2.CopyOp
	9,  // 7: eolymp.executor.StatusV2.Step.execute:type_name -> eolymp.executor.StatusV2.ExecuteOp
	10, // 8: eolymp.executor.StatusV2.Step.upload:type_name -> eolymp.executor.StatusV2.UploadOp
	2,  // 9: eolymp.executor.StatusV2.ExecuteOp.status:type_name -> eolymp.executor.StatusV2.ExecuteOp.Status
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eolymp_executor_status_v2_proto_init() }
func file_eolymp_executor_status_v2_proto_init() {
	if File_eolymp_executor_status_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eolymp_executor_status_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_WriteOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_CopyOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_ExecuteOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_executor_status_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusV2_UploadOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_executor_status_v2_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_executor_status_v2_proto_goTypes,
		DependencyIndexes: file_eolymp_executor_status_v2_proto_depIdxs,
		EnumInfos:         file_eolymp_executor_status_v2_proto_enumTypes,
		MessageInfos:      file_eolymp_executor_status_v2_proto_msgTypes,
	}.Build()
	File_eolymp_executor_status_v2_proto = out.File
	file_eolymp_executor_status_v2_proto_rawDesc = nil
	file_eolymp_executor_status_v2_proto_goTypes = nil
	file_eolymp_executor_status_v2_proto_depIdxs = nil
}
