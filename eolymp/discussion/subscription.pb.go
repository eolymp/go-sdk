// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/discussion/subscription.proto

package discussion

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Subscription_Type int32

const (
	Subscription_NONE       Subscription_Type = 0
	Subscription_MUTED      Subscription_Type = 1
	Subscription_SUBSCRIBED Subscription_Type = 2
	Subscription_WATCHING   Subscription_Type = 3
)

// Enum value maps for Subscription_Type.
var (
	Subscription_Type_name = map[int32]string{
		0: "NONE",
		1: "MUTED",
		2: "SUBSCRIBED",
		3: "WATCHING",
	}
	Subscription_Type_value = map[string]int32{
		"NONE":       0,
		"MUTED":      1,
		"SUBSCRIBED": 2,
		"WATCHING":   3,
	}
)

func (x Subscription_Type) Enum() *Subscription_Type {
	p := new(Subscription_Type)
	*p = x
	return p
}

func (x Subscription_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subscription_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_discussion_subscription_proto_enumTypes[0].Descriptor()
}

func (Subscription_Type) Type() protoreflect.EnumType {
	return &file_eolymp_discussion_subscription_proto_enumTypes[0]
}

func (x Subscription_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subscription_Type.Descriptor instead.
func (Subscription_Type) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_discussion_subscription_proto_rawDescGZIP(), []int{0, 0}
}

type Subscription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Subscription_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=eolymp.discussion.Subscription_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_eolymp_discussion_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *Subscription) GetType() Subscription_Type {
	if x != nil {
		return x.Type
	}
	return Subscription_NONE
}

var File_eolymp_discussion_subscription_proto protoreflect.FileDescriptor

const file_eolymp_discussion_subscription_proto_rawDesc = "" +
	"\n" +
	"$eolymp/discussion/subscription.proto\x12\x11eolymp.discussion\"\x83\x01\n" +
	"\fSubscription\x128\n" +
	"\x04type\x18\x01 \x01(\x0e2$.eolymp.discussion.Subscription.TypeR\x04type\"9\n" +
	"\x04Type\x12\b\n" +
	"\x04NONE\x10\x00\x12\t\n" +
	"\x05MUTED\x10\x01\x12\x0e\n" +
	"\n" +
	"SUBSCRIBED\x10\x02\x12\f\n" +
	"\bWATCHING\x10\x03B7Z5github.com/eolymp/go-sdk/eolymp/discussion;discussionb\x06proto3"

var (
	file_eolymp_discussion_subscription_proto_rawDescOnce sync.Once
	file_eolymp_discussion_subscription_proto_rawDescData []byte
)

func file_eolymp_discussion_subscription_proto_rawDescGZIP() []byte {
	file_eolymp_discussion_subscription_proto_rawDescOnce.Do(func() {
		file_eolymp_discussion_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_discussion_subscription_proto_rawDesc), len(file_eolymp_discussion_subscription_proto_rawDesc)))
	})
	return file_eolymp_discussion_subscription_proto_rawDescData
}

var file_eolymp_discussion_subscription_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_discussion_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eolymp_discussion_subscription_proto_goTypes = []any{
	(Subscription_Type)(0), // 0: eolymp.discussion.Subscription.Type
	(*Subscription)(nil),   // 1: eolymp.discussion.Subscription
}
var file_eolymp_discussion_subscription_proto_depIdxs = []int32{
	0, // 0: eolymp.discussion.Subscription.type:type_name -> eolymp.discussion.Subscription.Type
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_eolymp_discussion_subscription_proto_init() }
func file_eolymp_discussion_subscription_proto_init() {
	if File_eolymp_discussion_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_discussion_subscription_proto_rawDesc), len(file_eolymp_discussion_subscription_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_discussion_subscription_proto_goTypes,
		DependencyIndexes: file_eolymp_discussion_subscription_proto_depIdxs,
		EnumInfos:         file_eolymp_discussion_subscription_proto_enumTypes,
		MessageInfos:      file_eolymp_discussion_subscription_proto_msgTypes,
	}.Build()
	File_eolymp_discussion_subscription_proto = out.File
	file_eolymp_discussion_subscription_proto_goTypes = nil
	file_eolymp_discussion_subscription_proto_depIdxs = nil
}
