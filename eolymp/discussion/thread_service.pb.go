// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/discussion/thread_service.proto

package discussion

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DescribeThreadInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locale        string                 `protobuf:"bytes,10,opt,name=locale,proto3" json:"locale,omitempty"` // locale preference
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeThreadInput) Reset() {
	*x = DescribeThreadInput{}
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeThreadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeThreadInput) ProtoMessage() {}

func (x *DescribeThreadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeThreadInput.ProtoReflect.Descriptor instead.
func (*DescribeThreadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_thread_service_proto_rawDescGZIP(), []int{0}
}

func (x *DescribeThreadInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type DescribeThreadOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Thread        *Thread                `protobuf:"bytes,1,opt,name=thread,proto3" json:"thread,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeThreadOutput) Reset() {
	*x = DescribeThreadOutput{}
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeThreadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeThreadOutput) ProtoMessage() {}

func (x *DescribeThreadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeThreadOutput.ProtoReflect.Descriptor instead.
func (*DescribeThreadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_thread_service_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeThreadOutput) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

type VoteThreadInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Vote          int32                  `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteThreadInput) Reset() {
	*x = VoteThreadInput{}
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteThreadInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteThreadInput) ProtoMessage() {}

func (x *VoteThreadInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteThreadInput.ProtoReflect.Descriptor instead.
func (*VoteThreadInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_thread_service_proto_rawDescGZIP(), []int{2}
}

func (x *VoteThreadInput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *VoteThreadInput) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type VoteThreadOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoteCount     int32                  `protobuf:"varint,1,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteThreadOutput) Reset() {
	*x = VoteThreadOutput{}
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteThreadOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteThreadOutput) ProtoMessage() {}

func (x *VoteThreadOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_thread_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteThreadOutput.ProtoReflect.Descriptor instead.
func (*VoteThreadOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_thread_service_proto_rawDescGZIP(), []int{3}
}

func (x *VoteThreadOutput) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

var File_eolymp_discussion_thread_service_proto protoreflect.FileDescriptor

const file_eolymp_discussion_thread_service_proto_rawDesc = "" +
	"\n" +
	"&eolymp/discussion/thread_service.proto\x12\x11eolymp.discussion\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/namespace.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a'eolymp/discussion/message_service.proto\x1a,eolymp/discussion/subscription_service.proto\x1a\x1eeolymp/discussion/thread.proto\"-\n" +
	"\x13DescribeThreadInput\x12\x16\n" +
	"\x06locale\x18\n" +
	" \x01(\tR\x06locale\"I\n" +
	"\x14DescribeThreadOutput\x121\n" +
	"\x06thread\x18\x01 \x01(\v2\x19.eolymp.discussion.ThreadR\x06thread\"D\n" +
	"\x0fVoteThreadInput\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x12\n" +
	"\x04vote\x18\x02 \x01(\x05R\x04vote\"1\n" +
	"\x10VoteThreadOutput\x12\x1d\n" +
	"\n" +
	"vote_count\x18\x01 \x01(\x05R\tvoteCount2\xe9\r\n" +
	"\rThreadService\x12\x81\x01\n" +
	"\x0eDescribeThread\x12&.eolymp.discussion.DescribeThreadInput\x1a'.eolymp.discussion.DescribeThreadOutput\"\x1e\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xd3\xe4\x93\x02\t\x12\a/thread\x12z\n" +
	"\n" +
	"VoteThread\x12\".eolymp.discussion.VoteThreadInput\x1a#.eolymp.discussion.VoteThreadOutput\"#\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xd3\xe4\x93\x02\x0e\"\f/thread/vote\x12\xbf\x01\n" +
	"\x12UpdateSubscription\x12*.eolymp.discussion.UpdateSubscriptionInput\x1a+.eolymp.discussion.UpdateSubscriptionOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"!\x8a\xe3\n" +
	"\x1ddiscussion:subscription:write\x82\xd3\xe4\x93\x02\x16\x1a\x14/thread/subscription\x12\xba\x01\n" +
	"\x0fDescribeMessage\x12'.eolymp.discussion.DescribeMessageInput\x1a(.eolymp.discussion.DescribeMessageOutput\"T\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"\xf4\x03\x82\xe3\n" +
	"\x1b\x8a\xe3\n" +
	"\x17discussion:message:read\x82\xd3\xe4\x93\x02\x1f\x12\x1d/thread/messages/{message_id}\x12\xa3\x01\n" +
	"\fListMessages\x12$.eolymp.discussion.ListMessagesInput\x1a%.eolymp.discussion.ListMessagesOutput\"F\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x1b\x8a\xe3\n" +
	"\x17discussion:message:read\x82\xd3\xe4\x93\x02\x12\x12\x10/thread/messages\x12\xa1\x01\n" +
	"\vPostMessage\x12#.eolymp.discussion.PostMessageInput\x1a$.eolymp.discussion.PostMessageOutput\"G\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x02\x82\xe3\n" +
	"\x1c\x8a\xe3\n" +
	"\x18discussion:message:write\x82\xd3\xe4\x93\x02\x12\"\x10/thread/messages\x12\xb4\x01\n" +
	"\rUpdateMessage\x12%.eolymp.discussion.UpdateMessageInput\x1a&.eolymp.discussion.UpdateMessageOutput\"T\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x02\x82\xe3\n" +
	"\x1c\x8a\xe3\n" +
	"\x18discussion:message:write\x82\xd3\xe4\x93\x02\x1f\x1a\x1d/thread/messages/{message_id}\x12\xad\x01\n" +
	"\rDeleteMessage\x12%.eolymp.discussion.DeleteMessageInput\x1a&.eolymp.discussion.DeleteMessageOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x1c\x8a\xe3\n" +
	"\x18discussion:message:write\x82\xd3\xe4\x93\x02\x18*\x16/messages/{message_id}\x12\xac\x01\n" +
	"\vVoteMessage\x12#.eolymp.discussion.VoteMessageInput\x1a$.eolymp.discussion.VoteMessageOutput\"R\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x02\x82\xe3\n" +
	"\x1c\x8a\xe3\n" +
	"\x18discussion:message:write\x82\xd3\xe4\x93\x02\x1d\"\x1b/messages/{message_id}/vote\x12\xc3\x01\n" +
	"\x12ListMessageChanges\x12*.eolymp.discussion.ListMessageChangesInput\x1a+.eolymp.discussion.ListMessageChangesOutput\"T\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x1b\x8a\xe3\n" +
	"\x17discussion:message:read\x82\xd3\xe4\x93\x02 \x12\x1e/messages/{message_id}/changes\x1a3\x82\xf0\xf0\xe4\x01\x14eolymp.atlas.Problem\x82\xf0\xf0\xe4\x01\x13eolymp.content.PostB7Z5github.com/eolymp/go-sdk/eolymp/discussion;discussionb\x06proto3"

var (
	file_eolymp_discussion_thread_service_proto_rawDescOnce sync.Once
	file_eolymp_discussion_thread_service_proto_rawDescData []byte
)

func file_eolymp_discussion_thread_service_proto_rawDescGZIP() []byte {
	file_eolymp_discussion_thread_service_proto_rawDescOnce.Do(func() {
		file_eolymp_discussion_thread_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_discussion_thread_service_proto_rawDesc), len(file_eolymp_discussion_thread_service_proto_rawDesc)))
	})
	return file_eolymp_discussion_thread_service_proto_rawDescData
}

var file_eolymp_discussion_thread_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eolymp_discussion_thread_service_proto_goTypes = []any{
	(*DescribeThreadInput)(nil),      // 0: eolymp.discussion.DescribeThreadInput
	(*DescribeThreadOutput)(nil),     // 1: eolymp.discussion.DescribeThreadOutput
	(*VoteThreadInput)(nil),          // 2: eolymp.discussion.VoteThreadInput
	(*VoteThreadOutput)(nil),         // 3: eolymp.discussion.VoteThreadOutput
	(*Thread)(nil),                   // 4: eolymp.discussion.Thread
	(*UpdateSubscriptionInput)(nil),  // 5: eolymp.discussion.UpdateSubscriptionInput
	(*DescribeMessageInput)(nil),     // 6: eolymp.discussion.DescribeMessageInput
	(*ListMessagesInput)(nil),        // 7: eolymp.discussion.ListMessagesInput
	(*PostMessageInput)(nil),         // 8: eolymp.discussion.PostMessageInput
	(*UpdateMessageInput)(nil),       // 9: eolymp.discussion.UpdateMessageInput
	(*DeleteMessageInput)(nil),       // 10: eolymp.discussion.DeleteMessageInput
	(*VoteMessageInput)(nil),         // 11: eolymp.discussion.VoteMessageInput
	(*ListMessageChangesInput)(nil),  // 12: eolymp.discussion.ListMessageChangesInput
	(*UpdateSubscriptionOutput)(nil), // 13: eolymp.discussion.UpdateSubscriptionOutput
	(*DescribeMessageOutput)(nil),    // 14: eolymp.discussion.DescribeMessageOutput
	(*ListMessagesOutput)(nil),       // 15: eolymp.discussion.ListMessagesOutput
	(*PostMessageOutput)(nil),        // 16: eolymp.discussion.PostMessageOutput
	(*UpdateMessageOutput)(nil),      // 17: eolymp.discussion.UpdateMessageOutput
	(*DeleteMessageOutput)(nil),      // 18: eolymp.discussion.DeleteMessageOutput
	(*VoteMessageOutput)(nil),        // 19: eolymp.discussion.VoteMessageOutput
	(*ListMessageChangesOutput)(nil), // 20: eolymp.discussion.ListMessageChangesOutput
}
var file_eolymp_discussion_thread_service_proto_depIdxs = []int32{
	4,  // 0: eolymp.discussion.DescribeThreadOutput.thread:type_name -> eolymp.discussion.Thread
	0,  // 1: eolymp.discussion.ThreadService.DescribeThread:input_type -> eolymp.discussion.DescribeThreadInput
	2,  // 2: eolymp.discussion.ThreadService.VoteThread:input_type -> eolymp.discussion.VoteThreadInput
	5,  // 3: eolymp.discussion.ThreadService.UpdateSubscription:input_type -> eolymp.discussion.UpdateSubscriptionInput
	6,  // 4: eolymp.discussion.ThreadService.DescribeMessage:input_type -> eolymp.discussion.DescribeMessageInput
	7,  // 5: eolymp.discussion.ThreadService.ListMessages:input_type -> eolymp.discussion.ListMessagesInput
	8,  // 6: eolymp.discussion.ThreadService.PostMessage:input_type -> eolymp.discussion.PostMessageInput
	9,  // 7: eolymp.discussion.ThreadService.UpdateMessage:input_type -> eolymp.discussion.UpdateMessageInput
	10, // 8: eolymp.discussion.ThreadService.DeleteMessage:input_type -> eolymp.discussion.DeleteMessageInput
	11, // 9: eolymp.discussion.ThreadService.VoteMessage:input_type -> eolymp.discussion.VoteMessageInput
	12, // 10: eolymp.discussion.ThreadService.ListMessageChanges:input_type -> eolymp.discussion.ListMessageChangesInput
	1,  // 11: eolymp.discussion.ThreadService.DescribeThread:output_type -> eolymp.discussion.DescribeThreadOutput
	3,  // 12: eolymp.discussion.ThreadService.VoteThread:output_type -> eolymp.discussion.VoteThreadOutput
	13, // 13: eolymp.discussion.ThreadService.UpdateSubscription:output_type -> eolymp.discussion.UpdateSubscriptionOutput
	14, // 14: eolymp.discussion.ThreadService.DescribeMessage:output_type -> eolymp.discussion.DescribeMessageOutput
	15, // 15: eolymp.discussion.ThreadService.ListMessages:output_type -> eolymp.discussion.ListMessagesOutput
	16, // 16: eolymp.discussion.ThreadService.PostMessage:output_type -> eolymp.discussion.PostMessageOutput
	17, // 17: eolymp.discussion.ThreadService.UpdateMessage:output_type -> eolymp.discussion.UpdateMessageOutput
	18, // 18: eolymp.discussion.ThreadService.DeleteMessage:output_type -> eolymp.discussion.DeleteMessageOutput
	19, // 19: eolymp.discussion.ThreadService.VoteMessage:output_type -> eolymp.discussion.VoteMessageOutput
	20, // 20: eolymp.discussion.ThreadService.ListMessageChanges:output_type -> eolymp.discussion.ListMessageChangesOutput
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_eolymp_discussion_thread_service_proto_init() }
func file_eolymp_discussion_thread_service_proto_init() {
	if File_eolymp_discussion_thread_service_proto != nil {
		return
	}
	file_eolymp_discussion_message_service_proto_init()
	file_eolymp_discussion_subscription_service_proto_init()
	file_eolymp_discussion_thread_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_discussion_thread_service_proto_rawDesc), len(file_eolymp_discussion_thread_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_discussion_thread_service_proto_goTypes,
		DependencyIndexes: file_eolymp_discussion_thread_service_proto_depIdxs,
		MessageInfos:      file_eolymp_discussion_thread_service_proto_msgTypes,
	}.Build()
	File_eolymp_discussion_thread_service_proto = out.File
	file_eolymp_discussion_thread_service_proto_goTypes = nil
	file_eolymp_discussion_thread_service_proto_depIdxs = nil
}
