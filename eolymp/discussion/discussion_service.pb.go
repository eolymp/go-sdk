// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: eolymp/discussion/discussion_service.proto

package discussion

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DescribeDiscussionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussionId string `protobuf:"bytes,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	Render       bool   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
}

func (x *DescribeDiscussionInput) Reset() {
	*x = DescribeDiscussionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDiscussionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDiscussionInput) ProtoMessage() {}

func (x *DescribeDiscussionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDiscussionInput.ProtoReflect.Descriptor instead.
func (*DescribeDiscussionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{0}
}

func (x *DescribeDiscussionInput) GetDiscussionId() string {
	if x != nil {
		return x.DiscussionId
	}
	return ""
}

func (x *DescribeDiscussionInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

type DescribeDiscussionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discussion *Discussion `protobuf:"bytes,1,opt,name=discussion,proto3" json:"discussion,omitempty"`
}

func (x *DescribeDiscussionOutput) Reset() {
	*x = DescribeDiscussionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDiscussionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDiscussionOutput) ProtoMessage() {}

func (x *DescribeDiscussionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDiscussionOutput.ProtoReflect.Descriptor instead.
func (*DescribeDiscussionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeDiscussionOutput) GetDiscussion() *Discussion {
	if x != nil {
		return x.Discussion
	}
	return nil
}

type ListDiscussionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Render bool `protobuf:"varint,1,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListDiscussionsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListDiscussionsInput) Reset() {
	*x = ListDiscussionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscussionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscussionsInput) ProtoMessage() {}

func (x *ListDiscussionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscussionsInput.ProtoReflect.Descriptor instead.
func (*ListDiscussionsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListDiscussionsInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListDiscussionsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDiscussionsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListDiscussionsInput) GetFilters() *ListDiscussionsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListDiscussionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Discussion `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListDiscussionsOutput) Reset() {
	*x = ListDiscussionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscussionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscussionsOutput) ProtoMessage() {}

func (x *ListDiscussionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscussionsOutput.ProtoReflect.Descriptor instead.
func (*ListDiscussionsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListDiscussionsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDiscussionsOutput) GetItems() []*Discussion {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateDiscussionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discussion *Discussion `protobuf:"bytes,1,opt,name=discussion,proto3" json:"discussion,omitempty"`
}

func (x *CreateDiscussionInput) Reset() {
	*x = CreateDiscussionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiscussionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiscussionInput) ProtoMessage() {}

func (x *CreateDiscussionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiscussionInput.ProtoReflect.Descriptor instead.
func (*CreateDiscussionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDiscussionInput) GetDiscussion() *Discussion {
	if x != nil {
		return x.Discussion
	}
	return nil
}

type CreateDiscussionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussionId string `protobuf:"bytes,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
}

func (x *CreateDiscussionOutput) Reset() {
	*x = CreateDiscussionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiscussionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiscussionOutput) ProtoMessage() {}

func (x *CreateDiscussionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiscussionOutput.ProtoReflect.Descriptor instead.
func (*CreateDiscussionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDiscussionOutput) GetDiscussionId() string {
	if x != nil {
		return x.DiscussionId
	}
	return ""
}

type UpdateDiscussionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussionId string      `protobuf:"bytes,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	Discussion   *Discussion `protobuf:"bytes,2,opt,name=discussion,proto3" json:"discussion,omitempty"`
}

func (x *UpdateDiscussionInput) Reset() {
	*x = UpdateDiscussionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiscussionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiscussionInput) ProtoMessage() {}

func (x *UpdateDiscussionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiscussionInput.ProtoReflect.Descriptor instead.
func (*UpdateDiscussionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDiscussionInput) GetDiscussionId() string {
	if x != nil {
		return x.DiscussionId
	}
	return ""
}

func (x *UpdateDiscussionInput) GetDiscussion() *Discussion {
	if x != nil {
		return x.Discussion
	}
	return nil
}

type UpdateDiscussionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDiscussionOutput) Reset() {
	*x = UpdateDiscussionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiscussionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiscussionOutput) ProtoMessage() {}

func (x *UpdateDiscussionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiscussionOutput.ProtoReflect.Descriptor instead.
func (*UpdateDiscussionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{7}
}

type DeleteDiscussionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussionId string `protobuf:"bytes,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
}

func (x *DeleteDiscussionInput) Reset() {
	*x = DeleteDiscussionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDiscussionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiscussionInput) ProtoMessage() {}

func (x *DeleteDiscussionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiscussionInput.ProtoReflect.Descriptor instead.
func (*DeleteDiscussionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDiscussionInput) GetDiscussionId() string {
	if x != nil {
		return x.DiscussionId
	}
	return ""
}

type DeleteDiscussionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDiscussionOutput) Reset() {
	*x = DeleteDiscussionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDiscussionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiscussionOutput) ProtoMessage() {}

func (x *DeleteDiscussionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiscussionOutput.ProtoReflect.Descriptor instead.
func (*DeleteDiscussionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{9}
}

type VoteDiscussionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussionId string `protobuf:"bytes,1,opt,name=discussion_id,json=discussionId,proto3" json:"discussion_id,omitempty"`
	Vote         int32  `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *VoteDiscussionInput) Reset() {
	*x = VoteDiscussionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteDiscussionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteDiscussionInput) ProtoMessage() {}

func (x *VoteDiscussionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteDiscussionInput.ProtoReflect.Descriptor instead.
func (*VoteDiscussionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{10}
}

func (x *VoteDiscussionInput) GetDiscussionId() string {
	if x != nil {
		return x.DiscussionId
	}
	return ""
}

func (x *VoteDiscussionInput) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type VoteDiscussionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteCount int32 `protobuf:"varint,1,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
}

func (x *VoteDiscussionOutput) Reset() {
	*x = VoteDiscussionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteDiscussionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteDiscussionOutput) ProtoMessage() {}

func (x *VoteDiscussionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteDiscussionOutput.ProtoReflect.Descriptor instead.
func (*VoteDiscussionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{11}
}

func (x *VoteDiscussionOutput) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

type ListDiscussionsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string                    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id    []*wellknown.ExpressionID `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *ListDiscussionsInput_Filter) Reset() {
	*x = ListDiscussionsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscussionsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscussionsInput_Filter) ProtoMessage() {}

func (x *ListDiscussionsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_discussion_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscussionsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListDiscussionsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_discussion_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListDiscussionsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListDiscussionsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_eolymp_discussion_discussion_service_proto protoreflect.FileDescriptor

var file_eolymp_discussion_discussion_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x17, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x22, 0x59, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a,
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf4, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x1a, 0x4e, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x56, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x3d, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7b,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0x0a,
	0x13, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x35, 0x0a,
	0x14, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0x80, 0x09, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc5, 0x01, 0x0a, 0x12, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2b, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x56, 0xea, 0xe2, 0x0a, 0x0c,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0xf4, 0x03, 0x82, 0xe3, 0x0a, 0x1e,
	0x8a, 0xe3, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x64,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x45, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x1e, 0x8a, 0xe3,
	0x0a, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0xaf, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x46, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x1f, 0x8a,
	0xe3, 0x0a, 0x1b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0e, 0x22, 0x0c, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0xbf, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x56, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a,
	0x1f, 0x8a, 0xe3, 0x0a, 0x1b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a, 0x1c, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x56,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82,
	0xe3, 0x0a, 0x1f, 0x8a, 0xe3, 0x0a, 0x1b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x2a, 0x1c, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xbe, 0x01, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5b, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1f, 0x8a,
	0xe3, 0x0a, 0x1b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x22, 0x21, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_discussion_discussion_service_proto_rawDescOnce sync.Once
	file_eolymp_discussion_discussion_service_proto_rawDescData = file_eolymp_discussion_discussion_service_proto_rawDesc
)

func file_eolymp_discussion_discussion_service_proto_rawDescGZIP() []byte {
	file_eolymp_discussion_discussion_service_proto_rawDescOnce.Do(func() {
		file_eolymp_discussion_discussion_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_discussion_discussion_service_proto_rawDescData)
	})
	return file_eolymp_discussion_discussion_service_proto_rawDescData
}

var file_eolymp_discussion_discussion_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_eolymp_discussion_discussion_service_proto_goTypes = []interface{}{
	(*DescribeDiscussionInput)(nil),     // 0: eolymp.discussion.DescribeDiscussionInput
	(*DescribeDiscussionOutput)(nil),    // 1: eolymp.discussion.DescribeDiscussionOutput
	(*ListDiscussionsInput)(nil),        // 2: eolymp.discussion.ListDiscussionsInput
	(*ListDiscussionsOutput)(nil),       // 3: eolymp.discussion.ListDiscussionsOutput
	(*CreateDiscussionInput)(nil),       // 4: eolymp.discussion.CreateDiscussionInput
	(*CreateDiscussionOutput)(nil),      // 5: eolymp.discussion.CreateDiscussionOutput
	(*UpdateDiscussionInput)(nil),       // 6: eolymp.discussion.UpdateDiscussionInput
	(*UpdateDiscussionOutput)(nil),      // 7: eolymp.discussion.UpdateDiscussionOutput
	(*DeleteDiscussionInput)(nil),       // 8: eolymp.discussion.DeleteDiscussionInput
	(*DeleteDiscussionOutput)(nil),      // 9: eolymp.discussion.DeleteDiscussionOutput
	(*VoteDiscussionInput)(nil),         // 10: eolymp.discussion.VoteDiscussionInput
	(*VoteDiscussionOutput)(nil),        // 11: eolymp.discussion.VoteDiscussionOutput
	(*ListDiscussionsInput_Filter)(nil), // 12: eolymp.discussion.ListDiscussionsInput.Filter
	(*Discussion)(nil),                  // 13: eolymp.discussion.Discussion
	(*wellknown.ExpressionID)(nil),      // 14: eolymp.wellknown.ExpressionID
}
var file_eolymp_discussion_discussion_service_proto_depIdxs = []int32{
	13, // 0: eolymp.discussion.DescribeDiscussionOutput.discussion:type_name -> eolymp.discussion.Discussion
	12, // 1: eolymp.discussion.ListDiscussionsInput.filters:type_name -> eolymp.discussion.ListDiscussionsInput.Filter
	13, // 2: eolymp.discussion.ListDiscussionsOutput.items:type_name -> eolymp.discussion.Discussion
	13, // 3: eolymp.discussion.CreateDiscussionInput.discussion:type_name -> eolymp.discussion.Discussion
	13, // 4: eolymp.discussion.UpdateDiscussionInput.discussion:type_name -> eolymp.discussion.Discussion
	14, // 5: eolymp.discussion.ListDiscussionsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	0,  // 6: eolymp.discussion.DiscussionService.DescribeDiscussion:input_type -> eolymp.discussion.DescribeDiscussionInput
	2,  // 7: eolymp.discussion.DiscussionService.ListDiscussions:input_type -> eolymp.discussion.ListDiscussionsInput
	4,  // 8: eolymp.discussion.DiscussionService.CreateDiscussion:input_type -> eolymp.discussion.CreateDiscussionInput
	6,  // 9: eolymp.discussion.DiscussionService.UpdateDiscussion:input_type -> eolymp.discussion.UpdateDiscussionInput
	8,  // 10: eolymp.discussion.DiscussionService.DeleteDiscussion:input_type -> eolymp.discussion.DeleteDiscussionInput
	10, // 11: eolymp.discussion.DiscussionService.VoteDiscussion:input_type -> eolymp.discussion.VoteDiscussionInput
	1,  // 12: eolymp.discussion.DiscussionService.DescribeDiscussion:output_type -> eolymp.discussion.DescribeDiscussionOutput
	3,  // 13: eolymp.discussion.DiscussionService.ListDiscussions:output_type -> eolymp.discussion.ListDiscussionsOutput
	5,  // 14: eolymp.discussion.DiscussionService.CreateDiscussion:output_type -> eolymp.discussion.CreateDiscussionOutput
	7,  // 15: eolymp.discussion.DiscussionService.UpdateDiscussion:output_type -> eolymp.discussion.UpdateDiscussionOutput
	9,  // 16: eolymp.discussion.DiscussionService.DeleteDiscussion:output_type -> eolymp.discussion.DeleteDiscussionOutput
	11, // 17: eolymp.discussion.DiscussionService.VoteDiscussion:output_type -> eolymp.discussion.VoteDiscussionOutput
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_eolymp_discussion_discussion_service_proto_init() }
func file_eolymp_discussion_discussion_service_proto_init() {
	if File_eolymp_discussion_discussion_service_proto != nil {
		return
	}
	file_eolymp_discussion_discussion_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_discussion_discussion_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDiscussionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDiscussionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscussionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscussionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiscussionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiscussionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiscussionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiscussionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDiscussionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDiscussionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteDiscussionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteDiscussionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_discussion_discussion_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscussionsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_discussion_discussion_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_discussion_discussion_service_proto_goTypes,
		DependencyIndexes: file_eolymp_discussion_discussion_service_proto_depIdxs,
		MessageInfos:      file_eolymp_discussion_discussion_service_proto_msgTypes,
	}.Build()
	File_eolymp_discussion_discussion_service_proto = out.File
	file_eolymp_discussion_discussion_service_proto_rawDesc = nil
	file_eolymp_discussion_discussion_service_proto_goTypes = nil
	file_eolymp_discussion_discussion_service_proto_depIdxs = nil
}
