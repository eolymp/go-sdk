// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: eolymp/discussion/thread.proto

package discussion

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Thread struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Vote          int32                  `protobuf:"varint,12,opt,name=vote,proto3" json:"vote,omitempty"`                               // vote of authenticated user (+1 or -1)
	VoteCount     int32                  `protobuf:"varint,10,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`    // total vote count
	ReplyCount    int32                  `protobuf:"varint,11,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"` // total number of replies
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Thread) Reset() {
	*x = Thread{}
	mi := &file_eolymp_discussion_thread_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_thread_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_thread_proto_rawDescGZIP(), []int{0}
}

func (x *Thread) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Thread) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Thread) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Thread) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

func (x *Thread) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

func (x *Thread) GetReplyCount() int32 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

var File_eolymp_discussion_thread_proto protoreflect.FileDescriptor

const file_eolymp_discussion_thread_proto_rawDesc = "" +
	"\n" +
	"\x1eeolymp/discussion/thread.proto\x12\x11eolymp.discussion\"\x92\x01\n" +
	"\x06Thread\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04vote\x18\f \x01(\x05R\x04vote\x12\x1d\n" +
	"\n" +
	"vote_count\x18\n" +
	" \x01(\x05R\tvoteCount\x12\x1f\n" +
	"\vreply_count\x18\v \x01(\x05R\n" +
	"replyCountB7Z5github.com/eolymp/go-sdk/eolymp/discussion;discussionb\x06proto3"

var (
	file_eolymp_discussion_thread_proto_rawDescOnce sync.Once
	file_eolymp_discussion_thread_proto_rawDescData []byte
)

func file_eolymp_discussion_thread_proto_rawDescGZIP() []byte {
	file_eolymp_discussion_thread_proto_rawDescOnce.Do(func() {
		file_eolymp_discussion_thread_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_discussion_thread_proto_rawDesc), len(file_eolymp_discussion_thread_proto_rawDesc)))
	})
	return file_eolymp_discussion_thread_proto_rawDescData
}

var file_eolymp_discussion_thread_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eolymp_discussion_thread_proto_goTypes = []any{
	(*Thread)(nil), // 0: eolymp.discussion.Thread
}
var file_eolymp_discussion_thread_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_eolymp_discussion_thread_proto_init() }
func file_eolymp_discussion_thread_proto_init() {
	if File_eolymp_discussion_thread_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_discussion_thread_proto_rawDesc), len(file_eolymp_discussion_thread_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_discussion_thread_proto_goTypes,
		DependencyIndexes: file_eolymp_discussion_thread_proto_depIdxs,
		MessageInfos:      file_eolymp_discussion_thread_proto_msgTypes,
	}.Build()
	File_eolymp_discussion_thread_proto = out.File
	file_eolymp_discussion_thread_proto_goTypes = nil
	file_eolymp_discussion_thread_proto_depIdxs = nil
}
