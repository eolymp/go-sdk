// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v4.24.4
// source: eolymp/discussion/message_service.proto

package discussion

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	ecm "github.com/eolymp/go-sdk/eolymp/ecm"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListMessagesInput_Sortable int32

const (
	ListMessagesInput_DEFAULT     ListMessagesInput_Sortable = 0
	ListMessagesInput_POSTED_AT   ListMessagesInput_Sortable = 1
	ListMessagesInput_VOTE_COUNT  ListMessagesInput_Sortable = 2
	ListMessagesInput_REPLY_COUNT ListMessagesInput_Sortable = 3
)

// Enum value maps for ListMessagesInput_Sortable.
var (
	ListMessagesInput_Sortable_name = map[int32]string{
		0: "DEFAULT",
		1: "POSTED_AT",
		2: "VOTE_COUNT",
		3: "REPLY_COUNT",
	}
	ListMessagesInput_Sortable_value = map[string]int32{
		"DEFAULT":     0,
		"POSTED_AT":   1,
		"VOTE_COUNT":  2,
		"REPLY_COUNT": 3,
	}
)

func (x ListMessagesInput_Sortable) Enum() *ListMessagesInput_Sortable {
	p := new(ListMessagesInput_Sortable)
	*p = x
	return p
}

func (x ListMessagesInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMessagesInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_discussion_message_service_proto_enumTypes[0].Descriptor()
}

func (ListMessagesInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_discussion_message_service_proto_enumTypes[0]
}

func (x ListMessagesInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMessagesInput_Sortable.Descriptor instead.
func (ListMessagesInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{3, 0}
}

type MessageChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,10,opt,name=scope,proto3" json:"scope,omitempty"`
	Before        *Message               `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *Message               `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageChangedEvent) Reset() {
	*x = MessageChangedEvent{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChangedEvent) ProtoMessage() {}

func (x *MessageChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChangedEvent.ProtoReflect.Descriptor instead.
func (*MessageChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{0}
}

func (x *MessageChangedEvent) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *MessageChangedEvent) GetBefore() *Message {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *MessageChangedEvent) GetAfter() *Message {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *MessageChangedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DescribeMessageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Render        bool                   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
	Extra         []Message_Extra        `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.discussion.Message_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeMessageInput) Reset() {
	*x = DescribeMessageInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMessageInput) ProtoMessage() {}

func (x *DescribeMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMessageInput.ProtoReflect.Descriptor instead.
func (*DescribeMessageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeMessageInput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DescribeMessageInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *DescribeMessageInput) GetExtra() []Message_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeMessageOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeMessageOutput) Reset() {
	*x = DescribeMessageOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMessageOutput) ProtoMessage() {}

func (x *DescribeMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMessageOutput.ProtoReflect.Descriptor instead.
func (*DescribeMessageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeMessageOutput) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ListMessagesInput struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Render bool                   `protobuf:"varint,1,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	After string                     `protobuf:"bytes,10,opt,name=after,proto3" json:"after,omitempty"`
	Size  int32                      `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Sort  ListMessagesInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.discussion.ListMessagesInput_Sortable" json:"sort,omitempty"`
	Order wellknown.Direction        `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	// data filters
	Filters       *ListMessagesInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Extra         []Message_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.discussion.Message_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessagesInput) Reset() {
	*x = ListMessagesInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessagesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesInput) ProtoMessage() {}

func (x *ListMessagesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesInput.ProtoReflect.Descriptor instead.
func (*ListMessagesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListMessagesInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListMessagesInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListMessagesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListMessagesInput) GetSort() ListMessagesInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListMessagesInput_DEFAULT
}

func (x *ListMessagesInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListMessagesInput) GetFilters() *ListMessagesInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListMessagesInput) GetExtra() []Message_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListMessagesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Message             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessagesOutput) Reset() {
	*x = ListMessagesOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessagesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesOutput) ProtoMessage() {}

func (x *ListMessagesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesOutput.ProtoReflect.Descriptor instead.
func (*ListMessagesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListMessagesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMessagesOutput) GetItems() []*Message {
	if x != nil {
		return x.Items
	}
	return nil
}

type PostMessageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ReplyTo       string                 `protobuf:"bytes,2,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostMessageInput) Reset() {
	*x = PostMessageInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMessageInput) ProtoMessage() {}

func (x *PostMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMessageInput.ProtoReflect.Descriptor instead.
func (*PostMessageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{5}
}

func (x *PostMessageInput) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PostMessageInput) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

type PostMessageOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostMessageOutput) Reset() {
	*x = PostMessageOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMessageOutput) ProtoMessage() {}

func (x *PostMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMessageOutput.ProtoReflect.Descriptor instead.
func (*PostMessageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{6}
}

func (x *PostMessageOutput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type UpdateMessageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Message       *Message               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMessageInput) Reset() {
	*x = UpdateMessageInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageInput) ProtoMessage() {}

func (x *UpdateMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageInput.ProtoReflect.Descriptor instead.
func (*UpdateMessageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMessageInput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *UpdateMessageInput) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type UpdateMessageOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMessageOutput) Reset() {
	*x = UpdateMessageOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageOutput) ProtoMessage() {}

func (x *UpdateMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageOutput.ProtoReflect.Descriptor instead.
func (*UpdateMessageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{8}
}

type DeleteMessageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageInput) Reset() {
	*x = DeleteMessageInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageInput) ProtoMessage() {}

func (x *DeleteMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageInput.ProtoReflect.Descriptor instead.
func (*DeleteMessageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMessageInput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DeleteMessageInput) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DeleteMessageOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageOutput) Reset() {
	*x = DeleteMessageOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageOutput) ProtoMessage() {}

func (x *DeleteMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageOutput.ProtoReflect.Descriptor instead.
func (*DeleteMessageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{10}
}

type VoteMessageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Vote          int32                  `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteMessageInput) Reset() {
	*x = VoteMessageInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteMessageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteMessageInput) ProtoMessage() {}

func (x *VoteMessageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteMessageInput.ProtoReflect.Descriptor instead.
func (*VoteMessageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{11}
}

func (x *VoteMessageInput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *VoteMessageInput) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type VoteMessageOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoteCount     int32                  `protobuf:"varint,1,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteMessageOutput) Reset() {
	*x = VoteMessageOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteMessageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteMessageOutput) ProtoMessage() {}

func (x *VoteMessageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteMessageOutput.ProtoReflect.Descriptor instead.
func (*VoteMessageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{12}
}

func (x *VoteMessageOutput) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

type ListMessageChangesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessageChangesInput) Reset() {
	*x = ListMessageChangesInput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessageChangesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageChangesInput) ProtoMessage() {}

func (x *ListMessageChangesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageChangesInput.ProtoReflect.Descriptor instead.
func (*ListMessageChangesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListMessageChangesInput) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ListMessageChangesOutput struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	History       []*ListMessageChangesOutput_Record `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessageChangesOutput) Reset() {
	*x = ListMessageChangesOutput{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessageChangesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageChangesOutput) ProtoMessage() {}

func (x *ListMessageChangesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageChangesOutput.ProtoReflect.Descriptor instead.
func (*ListMessageChangesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListMessageChangesOutput) GetHistory() []*ListMessageChangesOutput_Record {
	if x != nil {
		return x.History
	}
	return nil
}

type ListMessagesInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Query         string                           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id            []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	ReplyTo       []*wellknown.ExpressionID        `protobuf:"bytes,3,rep,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	MemberId      []*wellknown.ExpressionID        `protobuf:"bytes,4,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	ThreadId      []*wellknown.ExpressionID        `protobuf:"bytes,5,rep,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	VoteCount     []*wellknown.ExpressionInt       `protobuf:"bytes,6,rep,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
	ReplyCount    []*wellknown.ExpressionInt       `protobuf:"bytes,7,rep,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	PostedAt      []*wellknown.ExpressionTimestamp `protobuf:"bytes,8,rep,name=posted_at,json=postedAt,proto3" json:"posted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessagesInput_Filter) Reset() {
	*x = ListMessagesInput_Filter{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessagesInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesInput_Filter) ProtoMessage() {}

func (x *ListMessagesInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesInput_Filter.ProtoReflect.Descriptor instead.
func (*ListMessagesInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListMessagesInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListMessagesInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListMessagesInput_Filter) GetReplyTo() []*wellknown.ExpressionID {
	if x != nil {
		return x.ReplyTo
	}
	return nil
}

func (x *ListMessagesInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListMessagesInput_Filter) GetThreadId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ThreadId
	}
	return nil
}

func (x *ListMessagesInput_Filter) GetVoteCount() []*wellknown.ExpressionInt {
	if x != nil {
		return x.VoteCount
	}
	return nil
}

func (x *ListMessagesInput_Filter) GetReplyCount() []*wellknown.ExpressionInt {
	if x != nil {
		return x.ReplyCount
	}
	return nil
}

func (x *ListMessagesInput_Filter) GetPostedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.PostedAt
	}
	return nil
}

type ListMessageChangesOutput_Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      int32                  `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message       *ecm.Content           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessageChangesOutput_Record) Reset() {
	*x = ListMessageChangesOutput_Record{}
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessageChangesOutput_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageChangesOutput_Record) ProtoMessage() {}

func (x *ListMessageChangesOutput_Record) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_discussion_message_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageChangesOutput_Record.ProtoReflect.Descriptor instead.
func (*ListMessageChangesOutput_Record) Descriptor() ([]byte, []int) {
	return file_eolymp_discussion_message_service_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ListMessageChangesOutput_Record) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *ListMessageChangesOutput_Record) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ListMessageChangesOutput_Record) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_eolymp_discussion_message_service_proto protoreflect.FileDescriptor

var file_eolymp_discussion_message_service_proto_rawDesc = string([]byte{
	0x0a, 0x27, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1d, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x65, 0x63, 0x6d, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa9, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x32,
	0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a,
	0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x4d, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xe0, 0x06, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x31, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x1a, 0xc9, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x3b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x52, 0x09, 0x76,
	0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x47,
	0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x53, 0x54, 0x45,
	0x44, 0x5f, 0x41, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x22, 0x5c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x22, 0x32, 0x0a, 0x11, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x69,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x15, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x45, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x56,
	0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x38, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x1a, 0x8d, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x65, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xd7, 0x09, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4d,
	0xea, 0xe2, 0x0a, 0x0c, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0xf4, 0x03,
	0x82, 0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2f, 0x7b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9c, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3f, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x1b,
	0x8a, 0xe3, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x12, 0x09, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x9a, 0x01, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x40, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1c, 0x8a, 0xe3, 0x0a, 0x18,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0xad, 0x01, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4d, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1c, 0x8a,
	0xe3, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x1a, 0x16, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xad, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4d, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1c, 0x8a,
	0xe3, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x2a, 0x16, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xac, 0x01, 0x0a, 0x0b, 0x56, 0x6f,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x52, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1c, 0x8a, 0xe3, 0x0a, 0x18, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x1b, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x12, 0xc3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x54, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2,
	0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a,
	0x17, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x37,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_eolymp_discussion_message_service_proto_rawDescOnce sync.Once
	file_eolymp_discussion_message_service_proto_rawDescData []byte
)

func file_eolymp_discussion_message_service_proto_rawDescGZIP() []byte {
	file_eolymp_discussion_message_service_proto_rawDescOnce.Do(func() {
		file_eolymp_discussion_message_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_discussion_message_service_proto_rawDesc), len(file_eolymp_discussion_message_service_proto_rawDesc)))
	})
	return file_eolymp_discussion_message_service_proto_rawDescData
}

var file_eolymp_discussion_message_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_discussion_message_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_eolymp_discussion_message_service_proto_goTypes = []any{
	(ListMessagesInput_Sortable)(0),         // 0: eolymp.discussion.ListMessagesInput.Sortable
	(*MessageChangedEvent)(nil),             // 1: eolymp.discussion.MessageChangedEvent
	(*DescribeMessageInput)(nil),            // 2: eolymp.discussion.DescribeMessageInput
	(*DescribeMessageOutput)(nil),           // 3: eolymp.discussion.DescribeMessageOutput
	(*ListMessagesInput)(nil),               // 4: eolymp.discussion.ListMessagesInput
	(*ListMessagesOutput)(nil),              // 5: eolymp.discussion.ListMessagesOutput
	(*PostMessageInput)(nil),                // 6: eolymp.discussion.PostMessageInput
	(*PostMessageOutput)(nil),               // 7: eolymp.discussion.PostMessageOutput
	(*UpdateMessageInput)(nil),              // 8: eolymp.discussion.UpdateMessageInput
	(*UpdateMessageOutput)(nil),             // 9: eolymp.discussion.UpdateMessageOutput
	(*DeleteMessageInput)(nil),              // 10: eolymp.discussion.DeleteMessageInput
	(*DeleteMessageOutput)(nil),             // 11: eolymp.discussion.DeleteMessageOutput
	(*VoteMessageInput)(nil),                // 12: eolymp.discussion.VoteMessageInput
	(*VoteMessageOutput)(nil),               // 13: eolymp.discussion.VoteMessageOutput
	(*ListMessageChangesInput)(nil),         // 14: eolymp.discussion.ListMessageChangesInput
	(*ListMessageChangesOutput)(nil),        // 15: eolymp.discussion.ListMessageChangesOutput
	(*ListMessagesInput_Filter)(nil),        // 16: eolymp.discussion.ListMessagesInput.Filter
	(*ListMessageChangesOutput_Record)(nil), // 17: eolymp.discussion.ListMessageChangesOutput.Record
	(*Message)(nil),                         // 18: eolymp.discussion.Message
	(Message_Extra)(0),                      // 19: eolymp.discussion.Message.Extra
	(wellknown.Direction)(0),                // 20: eolymp.wellknown.Direction
	(*wellknown.ExpressionID)(nil),          // 21: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionInt)(nil),         // 22: eolymp.wellknown.ExpressionInt
	(*wellknown.ExpressionTimestamp)(nil),   // 23: eolymp.wellknown.ExpressionTimestamp
	(*timestamppb.Timestamp)(nil),           // 24: google.protobuf.Timestamp
	(*ecm.Content)(nil),                     // 25: eolymp.ecm.Content
}
var file_eolymp_discussion_message_service_proto_depIdxs = []int32{
	18, // 0: eolymp.discussion.MessageChangedEvent.before:type_name -> eolymp.discussion.Message
	18, // 1: eolymp.discussion.MessageChangedEvent.after:type_name -> eolymp.discussion.Message
	19, // 2: eolymp.discussion.DescribeMessageInput.extra:type_name -> eolymp.discussion.Message.Extra
	18, // 3: eolymp.discussion.DescribeMessageOutput.message:type_name -> eolymp.discussion.Message
	0,  // 4: eolymp.discussion.ListMessagesInput.sort:type_name -> eolymp.discussion.ListMessagesInput.Sortable
	20, // 5: eolymp.discussion.ListMessagesInput.order:type_name -> eolymp.wellknown.Direction
	16, // 6: eolymp.discussion.ListMessagesInput.filters:type_name -> eolymp.discussion.ListMessagesInput.Filter
	19, // 7: eolymp.discussion.ListMessagesInput.extra:type_name -> eolymp.discussion.Message.Extra
	18, // 8: eolymp.discussion.ListMessagesOutput.items:type_name -> eolymp.discussion.Message
	18, // 9: eolymp.discussion.PostMessageInput.message:type_name -> eolymp.discussion.Message
	18, // 10: eolymp.discussion.UpdateMessageInput.message:type_name -> eolymp.discussion.Message
	17, // 11: eolymp.discussion.ListMessageChangesOutput.history:type_name -> eolymp.discussion.ListMessageChangesOutput.Record
	21, // 12: eolymp.discussion.ListMessagesInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	21, // 13: eolymp.discussion.ListMessagesInput.Filter.reply_to:type_name -> eolymp.wellknown.ExpressionID
	21, // 14: eolymp.discussion.ListMessagesInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	21, // 15: eolymp.discussion.ListMessagesInput.Filter.thread_id:type_name -> eolymp.wellknown.ExpressionID
	22, // 16: eolymp.discussion.ListMessagesInput.Filter.vote_count:type_name -> eolymp.wellknown.ExpressionInt
	22, // 17: eolymp.discussion.ListMessagesInput.Filter.reply_count:type_name -> eolymp.wellknown.ExpressionInt
	23, // 18: eolymp.discussion.ListMessagesInput.Filter.posted_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	24, // 19: eolymp.discussion.ListMessageChangesOutput.Record.timestamp:type_name -> google.protobuf.Timestamp
	25, // 20: eolymp.discussion.ListMessageChangesOutput.Record.message:type_name -> eolymp.ecm.Content
	2,  // 21: eolymp.discussion.MessageService.DescribeMessage:input_type -> eolymp.discussion.DescribeMessageInput
	4,  // 22: eolymp.discussion.MessageService.ListMessages:input_type -> eolymp.discussion.ListMessagesInput
	6,  // 23: eolymp.discussion.MessageService.PostMessage:input_type -> eolymp.discussion.PostMessageInput
	8,  // 24: eolymp.discussion.MessageService.UpdateMessage:input_type -> eolymp.discussion.UpdateMessageInput
	10, // 25: eolymp.discussion.MessageService.DeleteMessage:input_type -> eolymp.discussion.DeleteMessageInput
	12, // 26: eolymp.discussion.MessageService.VoteMessage:input_type -> eolymp.discussion.VoteMessageInput
	14, // 27: eolymp.discussion.MessageService.ListMessageChanges:input_type -> eolymp.discussion.ListMessageChangesInput
	3,  // 28: eolymp.discussion.MessageService.DescribeMessage:output_type -> eolymp.discussion.DescribeMessageOutput
	5,  // 29: eolymp.discussion.MessageService.ListMessages:output_type -> eolymp.discussion.ListMessagesOutput
	7,  // 30: eolymp.discussion.MessageService.PostMessage:output_type -> eolymp.discussion.PostMessageOutput
	9,  // 31: eolymp.discussion.MessageService.UpdateMessage:output_type -> eolymp.discussion.UpdateMessageOutput
	11, // 32: eolymp.discussion.MessageService.DeleteMessage:output_type -> eolymp.discussion.DeleteMessageOutput
	13, // 33: eolymp.discussion.MessageService.VoteMessage:output_type -> eolymp.discussion.VoteMessageOutput
	15, // 34: eolymp.discussion.MessageService.ListMessageChanges:output_type -> eolymp.discussion.ListMessageChangesOutput
	28, // [28:35] is the sub-list for method output_type
	21, // [21:28] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_eolymp_discussion_message_service_proto_init() }
func file_eolymp_discussion_message_service_proto_init() {
	if File_eolymp_discussion_message_service_proto != nil {
		return
	}
	file_eolymp_discussion_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_discussion_message_service_proto_rawDesc), len(file_eolymp_discussion_message_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_discussion_message_service_proto_goTypes,
		DependencyIndexes: file_eolymp_discussion_message_service_proto_depIdxs,
		EnumInfos:         file_eolymp_discussion_message_service_proto_enumTypes,
		MessageInfos:      file_eolymp_discussion_message_service_proto_msgTypes,
	}.Build()
	File_eolymp_discussion_message_service_proto = out.File
	file_eolymp_discussion_message_service_proto_goTypes = nil
	file_eolymp_discussion_message_service_proto_depIdxs = nil
}
