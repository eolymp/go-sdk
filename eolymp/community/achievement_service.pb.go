// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.4
// source: eolymp/community/achievement_service.proto

package community

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignAchievementInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AchievementId string                 `protobuf:"bytes,2,opt,name=achievement_id,json=achievementId,proto3" json:"achievement_id,omitempty"`
	// Types that are valid to be assigned to Quantity:
	//
	//	*AssignAchievementInput_SetTo
	//	*AssignAchievementInput_IncBy
	Quantity      isAssignAchievementInput_Quantity `protobuf_oneof:"quantity"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignAchievementInput) Reset() {
	*x = AssignAchievementInput{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignAchievementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAchievementInput) ProtoMessage() {}

func (x *AssignAchievementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAchievementInput.ProtoReflect.Descriptor instead.
func (*AssignAchievementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{0}
}

func (x *AssignAchievementInput) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

func (x *AssignAchievementInput) GetQuantity() isAssignAchievementInput_Quantity {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *AssignAchievementInput) GetSetTo() int32 {
	if x != nil {
		if x, ok := x.Quantity.(*AssignAchievementInput_SetTo); ok {
			return x.SetTo
		}
	}
	return 0
}

func (x *AssignAchievementInput) GetIncBy() int32 {
	if x != nil {
		if x, ok := x.Quantity.(*AssignAchievementInput_IncBy); ok {
			return x.IncBy
		}
	}
	return 0
}

type isAssignAchievementInput_Quantity interface {
	isAssignAchievementInput_Quantity()
}

type AssignAchievementInput_SetTo struct {
	SetTo int32 `protobuf:"varint,3,opt,name=set_to,json=setTo,proto3,oneof"`
}

type AssignAchievementInput_IncBy struct {
	IncBy int32 `protobuf:"varint,4,opt,name=inc_by,json=incBy,proto3,oneof"`
}

func (*AssignAchievementInput_SetTo) isAssignAchievementInput_Quantity() {}

func (*AssignAchievementInput_IncBy) isAssignAchievementInput_Quantity() {}

type AssignAchievementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignAchievementOutput) Reset() {
	*x = AssignAchievementOutput{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignAchievementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAchievementOutput) ProtoMessage() {}

func (x *AssignAchievementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAchievementOutput.ProtoReflect.Descriptor instead.
func (*AssignAchievementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{1}
}

func (x *AssignAchievementOutput) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type UnassignAchievementInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AchievementId string                 `protobuf:"bytes,2,opt,name=achievement_id,json=achievementId,proto3" json:"achievement_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnassignAchievementInput) Reset() {
	*x = UnassignAchievementInput{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignAchievementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignAchievementInput) ProtoMessage() {}

func (x *UnassignAchievementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignAchievementInput.ProtoReflect.Descriptor instead.
func (*UnassignAchievementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{2}
}

func (x *UnassignAchievementInput) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

type UnassignAchievementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnassignAchievementOutput) Reset() {
	*x = UnassignAchievementOutput{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignAchievementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignAchievementOutput) ProtoMessage() {}

func (x *UnassignAchievementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignAchievementOutput.ProtoReflect.Descriptor instead.
func (*UnassignAchievementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{3}
}

type ListAchievementsInput struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Locale        string                        `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"`
	After         string                        `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Size          int32                         `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Offset        int32                         `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Filters       *ListAchievementsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Extra         []Achievement_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.community.Achievement_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAchievementsInput) Reset() {
	*x = ListAchievementsInput{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAchievementsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAchievementsInput) ProtoMessage() {}

func (x *ListAchievementsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAchievementsInput.ProtoReflect.Descriptor instead.
func (*ListAchievementsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListAchievementsInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *ListAchievementsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListAchievementsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAchievementsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListAchievementsInput) GetFilters() *ListAchievementsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListAchievementsInput) GetExtra() []Achievement_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListAchievementsOutput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	NextPageCursor string                 `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	Items          []*Achievement         `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListAchievementsOutput) Reset() {
	*x = ListAchievementsOutput{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAchievementsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAchievementsOutput) ProtoMessage() {}

func (x *ListAchievementsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAchievementsOutput.ProtoReflect.Descriptor instead.
func (*ListAchievementsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListAchievementsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAchievementsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

func (x *ListAchievementsOutput) GetItems() []*Achievement {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListAchievementsInput_Filter struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Query         string                    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id            []*wellknown.ExpressionID `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAchievementsInput_Filter) Reset() {
	*x = ListAchievementsInput_Filter{}
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAchievementsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAchievementsInput_Filter) ProtoMessage() {}

func (x *ListAchievementsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_achievement_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAchievementsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListAchievementsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_community_achievement_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListAchievementsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListAchievementsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_eolymp_community_achievement_service_proto protoreflect.FileDescriptor

const file_eolymp_community_achievement_service_proto_rawDesc = "" +
	"\n" +
	"*eolymp/community/achievement_service.proto\x12\x10eolymp.community\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\"eolymp/community/achievement.proto\x1a!eolymp/wellknown/expression.proto\"}\n" +
	"\x16AssignAchievementInput\x12%\n" +
	"\x0eachievement_id\x18\x02 \x01(\tR\rachievementId\x12\x17\n" +
	"\x06set_to\x18\x03 \x01(\x05H\x00R\x05setTo\x12\x17\n" +
	"\x06inc_by\x18\x04 \x01(\x05H\x00R\x05incByB\n" +
	"\n" +
	"\bquantity\"5\n" +
	"\x17AssignAchievementOutput\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\"A\n" +
	"\x18UnassignAchievementInput\x12%\n" +
	"\x0eachievement_id\x18\x02 \x01(\tR\rachievementId\"\x1b\n" +
	"\x19UnassignAchievementOutput\"\xc7\x02\n" +
	"\x15ListAchievementsInput\x12\x16\n" +
	"\x06locale\x18\x01 \x01(\tR\x06locale\x12\x14\n" +
	"\x05after\x18\f \x01(\tR\x05after\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12H\n" +
	"\afilters\x18( \x01(\v2..eolymp.community.ListAchievementsInput.FilterR\afilters\x12:\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2#.eolymp.community.Achievement.ExtraR\x05extra\x1aN\n" +
	"\x06Filter\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12.\n" +
	"\x02id\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\"\x8d\x01\n" +
	"\x16ListAchievementsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12(\n" +
	"\x10next_page_cursor\x18\x03 \x01(\tR\x0enextPageCursor\x123\n" +
	"\x05items\x18\x02 \x03(\v2\x1d.eolymp.community.AchievementR\x05items2\xc5\x04\n" +
	"\x12AchievementService\x12\xbd\x01\n" +
	"\x11AssignAchievement\x12(.eolymp.community.AssignAchievementInput\x1a).eolymp.community.AssignAchievementOutput\"S\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x1a\x8a\xe3\n" +
	"\x16community:member:write\x82\xd3\xe4\x93\x02 \x1a\x1e/achievements/{achievement_id}\x12\xc3\x01\n" +
	"\x13UnassignAchievement\x12*.eolymp.community.UnassignAchievementInput\x1a+.eolymp.community.UnassignAchievementOutput\"S\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x1a\x8a\xe3\n" +
	"\x16community:member:write\x82\xd3\xe4\x93\x02 *\x1e/achievements/{achievement_id}\x12\xa8\x01\n" +
	"\x10ListAchievements\x12'.eolymp.community.ListAchievementsInput\x1a(.eolymp.community.ListAchievementsOutput\"A\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15community:member:read\x82\xd3\xe4\x93\x02\x0f\x12\r/achievementsB5Z3github.com/eolymp/go-sdk/eolymp/community;communityb\x06proto3"

var (
	file_eolymp_community_achievement_service_proto_rawDescOnce sync.Once
	file_eolymp_community_achievement_service_proto_rawDescData []byte
)

func file_eolymp_community_achievement_service_proto_rawDescGZIP() []byte {
	file_eolymp_community_achievement_service_proto_rawDescOnce.Do(func() {
		file_eolymp_community_achievement_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_community_achievement_service_proto_rawDesc), len(file_eolymp_community_achievement_service_proto_rawDesc)))
	})
	return file_eolymp_community_achievement_service_proto_rawDescData
}

var file_eolymp_community_achievement_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_eolymp_community_achievement_service_proto_goTypes = []any{
	(*AssignAchievementInput)(nil),       // 0: eolymp.community.AssignAchievementInput
	(*AssignAchievementOutput)(nil),      // 1: eolymp.community.AssignAchievementOutput
	(*UnassignAchievementInput)(nil),     // 2: eolymp.community.UnassignAchievementInput
	(*UnassignAchievementOutput)(nil),    // 3: eolymp.community.UnassignAchievementOutput
	(*ListAchievementsInput)(nil),        // 4: eolymp.community.ListAchievementsInput
	(*ListAchievementsOutput)(nil),       // 5: eolymp.community.ListAchievementsOutput
	(*ListAchievementsInput_Filter)(nil), // 6: eolymp.community.ListAchievementsInput.Filter
	(Achievement_Extra)(0),               // 7: eolymp.community.Achievement.Extra
	(*Achievement)(nil),                  // 8: eolymp.community.Achievement
	(*wellknown.ExpressionID)(nil),       // 9: eolymp.wellknown.ExpressionID
}
var file_eolymp_community_achievement_service_proto_depIdxs = []int32{
	6, // 0: eolymp.community.ListAchievementsInput.filters:type_name -> eolymp.community.ListAchievementsInput.Filter
	7, // 1: eolymp.community.ListAchievementsInput.extra:type_name -> eolymp.community.Achievement.Extra
	8, // 2: eolymp.community.ListAchievementsOutput.items:type_name -> eolymp.community.Achievement
	9, // 3: eolymp.community.ListAchievementsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	0, // 4: eolymp.community.AchievementService.AssignAchievement:input_type -> eolymp.community.AssignAchievementInput
	2, // 5: eolymp.community.AchievementService.UnassignAchievement:input_type -> eolymp.community.UnassignAchievementInput
	4, // 6: eolymp.community.AchievementService.ListAchievements:input_type -> eolymp.community.ListAchievementsInput
	1, // 7: eolymp.community.AchievementService.AssignAchievement:output_type -> eolymp.community.AssignAchievementOutput
	3, // 8: eolymp.community.AchievementService.UnassignAchievement:output_type -> eolymp.community.UnassignAchievementOutput
	5, // 9: eolymp.community.AchievementService.ListAchievements:output_type -> eolymp.community.ListAchievementsOutput
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_eolymp_community_achievement_service_proto_init() }
func file_eolymp_community_achievement_service_proto_init() {
	if File_eolymp_community_achievement_service_proto != nil {
		return
	}
	file_eolymp_community_achievement_proto_init()
	file_eolymp_community_achievement_service_proto_msgTypes[0].OneofWrappers = []any{
		(*AssignAchievementInput_SetTo)(nil),
		(*AssignAchievementInput_IncBy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_community_achievement_service_proto_rawDesc), len(file_eolymp_community_achievement_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_community_achievement_service_proto_goTypes,
		DependencyIndexes: file_eolymp_community_achievement_service_proto_depIdxs,
		MessageInfos:      file_eolymp_community_achievement_service_proto_msgTypes,
	}.Build()
	File_eolymp_community_achievement_service_proto = out.File
	file_eolymp_community_achievement_service_proto_goTypes = nil
	file_eolymp_community_achievement_service_proto_depIdxs = nil
}
