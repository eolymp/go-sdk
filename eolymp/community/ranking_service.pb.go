// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: eolymp/community/ranking_service.proto

package community

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateRankingEventInput_Patch int32

const (
	UpdateRankingEventInput_ALL        UpdateRankingEventInput_Patch = 0
	UpdateRankingEventInput_NAME       UpdateRankingEventInput_Patch = 1
	UpdateRankingEventInput_TIMESTAMP  UpdateRankingEventInput_Patch = 2
	UpdateRankingEventInput_CONTEST_ID UpdateRankingEventInput_Patch = 3
)

// Enum value maps for UpdateRankingEventInput_Patch.
var (
	UpdateRankingEventInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "NAME",
		2: "TIMESTAMP",
		3: "CONTEST_ID",
	}
	UpdateRankingEventInput_Patch_value = map[string]int32{
		"ALL":        0,
		"NAME":       1,
		"TIMESTAMP":  2,
		"CONTEST_ID": 3,
	}
)

func (x UpdateRankingEventInput_Patch) Enum() *UpdateRankingEventInput_Patch {
	p := new(UpdateRankingEventInput_Patch)
	*p = x
	return p
}

func (x UpdateRankingEventInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateRankingEventInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_community_ranking_service_proto_enumTypes[0].Descriptor()
}

func (UpdateRankingEventInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_community_ranking_service_proto_enumTypes[0]
}

func (x UpdateRankingEventInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateRankingEventInput_Patch.Descriptor instead.
func (UpdateRankingEventInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{2, 0}
}

type ListRankingEventsInput_Sortable int32

const (
	ListRankingEventsInput_TIMESTAMP ListRankingEventsInput_Sortable = 0
	ListRankingEventsInput_NAME      ListRankingEventsInput_Sortable = 1
)

// Enum value maps for ListRankingEventsInput_Sortable.
var (
	ListRankingEventsInput_Sortable_name = map[int32]string{
		0: "TIMESTAMP",
		1: "NAME",
	}
	ListRankingEventsInput_Sortable_value = map[string]int32{
		"TIMESTAMP": 0,
		"NAME":      1,
	}
)

func (x ListRankingEventsInput_Sortable) Enum() *ListRankingEventsInput_Sortable {
	p := new(ListRankingEventsInput_Sortable)
	*p = x
	return p
}

func (x ListRankingEventsInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListRankingEventsInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_community_ranking_service_proto_enumTypes[1].Descriptor()
}

func (ListRankingEventsInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_community_ranking_service_proto_enumTypes[1]
}

func (x ListRankingEventsInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListRankingEventsInput_Sortable.Descriptor instead.
func (ListRankingEventsInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{8, 0}
}

type ListRankingPointsInput_Sortable int32

const (
	ListRankingPointsInput_TIMESTAMP ListRankingPointsInput_Sortable = 0
)

// Enum value maps for ListRankingPointsInput_Sortable.
var (
	ListRankingPointsInput_Sortable_name = map[int32]string{
		0: "TIMESTAMP",
	}
	ListRankingPointsInput_Sortable_value = map[string]int32{
		"TIMESTAMP": 0,
	}
)

func (x ListRankingPointsInput_Sortable) Enum() *ListRankingPointsInput_Sortable {
	p := new(ListRankingPointsInput_Sortable)
	*p = x
	return p
}

func (x ListRankingPointsInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListRankingPointsInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_community_ranking_service_proto_enumTypes[2].Descriptor()
}

func (ListRankingPointsInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_community_ranking_service_proto_enumTypes[2]
}

func (x ListRankingPointsInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListRankingPointsInput_Sortable.Descriptor instead.
func (ListRankingPointsInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{16, 0}
}

type CreateRankingEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *RankingEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *CreateRankingEventInput) Reset() {
	*x = CreateRankingEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRankingEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRankingEventInput) ProtoMessage() {}

func (x *CreateRankingEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRankingEventInput.ProtoReflect.Descriptor instead.
func (*CreateRankingEventInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRankingEventInput) GetEvent() *RankingEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreateRankingEventOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *CreateRankingEventOutput) Reset() {
	*x = CreateRankingEventOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRankingEventOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRankingEventOutput) ProtoMessage() {}

func (x *CreateRankingEventOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRankingEventOutput.ProtoReflect.Descriptor instead.
func (*CreateRankingEventOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRankingEventOutput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type UpdateRankingEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patch   []UpdateRankingEventInput_Patch `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.community.UpdateRankingEventInput_Patch" json:"patch,omitempty"` // defines rankingEvent props to be updated, empty means update everything
	EventId string                          `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Event   *RankingEvent                   `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *UpdateRankingEventInput) Reset() {
	*x = UpdateRankingEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRankingEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRankingEventInput) ProtoMessage() {}

func (x *UpdateRankingEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRankingEventInput.ProtoReflect.Descriptor instead.
func (*UpdateRankingEventInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRankingEventInput) GetPatch() []UpdateRankingEventInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateRankingEventInput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *UpdateRankingEventInput) GetEvent() *RankingEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type UpdateRankingEventOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRankingEventOutput) Reset() {
	*x = UpdateRankingEventOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRankingEventOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRankingEventOutput) ProtoMessage() {}

func (x *UpdateRankingEventOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRankingEventOutput.ProtoReflect.Descriptor instead.
func (*UpdateRankingEventOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{3}
}

type DeleteRankingEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *DeleteRankingEventInput) Reset() {
	*x = DeleteRankingEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRankingEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRankingEventInput) ProtoMessage() {}

func (x *DeleteRankingEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRankingEventInput.ProtoReflect.Descriptor instead.
func (*DeleteRankingEventInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRankingEventInput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DeleteRankingEventOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRankingEventOutput) Reset() {
	*x = DeleteRankingEventOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRankingEventOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRankingEventOutput) ProtoMessage() {}

func (x *DeleteRankingEventOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRankingEventOutput.ProtoReflect.Descriptor instead.
func (*DeleteRankingEventOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{5}
}

type DescribeRankingEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *DescribeRankingEventInput) Reset() {
	*x = DescribeRankingEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRankingEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRankingEventInput) ProtoMessage() {}

func (x *DescribeRankingEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRankingEventInput.ProtoReflect.Descriptor instead.
func (*DescribeRankingEventInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeRankingEventInput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DescribeRankingEventOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *RankingEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *DescribeRankingEventOutput) Reset() {
	*x = DescribeRankingEventOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRankingEventOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRankingEventOutput) ProtoMessage() {}

func (x *DescribeRankingEventOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRankingEventOutput.ProtoReflect.Descriptor instead.
func (*DescribeRankingEventOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeRankingEventOutput) GetEvent() *RankingEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type ListRankingEventsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  int32                           `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size    int32                           `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Filters *ListRankingEventsInput_Filter  `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort    ListRankingEventsInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.community.ListRankingEventsInput_Sortable" json:"sort,omitempty"`
	Order   wellknown.Direction             `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
}

func (x *ListRankingEventsInput) Reset() {
	*x = ListRankingEventsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRankingEventsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRankingEventsInput) ProtoMessage() {}

func (x *ListRankingEventsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRankingEventsInput.ProtoReflect.Descriptor instead.
func (*ListRankingEventsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListRankingEventsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRankingEventsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListRankingEventsInput) GetFilters() *ListRankingEventsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListRankingEventsInput) GetSort() ListRankingEventsInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListRankingEventsInput_TIMESTAMP
}

func (x *ListRankingEventsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

type ListRankingEventsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*RankingEvent `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRankingEventsOutput) Reset() {
	*x = ListRankingEventsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRankingEventsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRankingEventsOutput) ProtoMessage() {}

func (x *ListRankingEventsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRankingEventsOutput.ProtoReflect.Descriptor instead.
func (*ListRankingEventsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListRankingEventsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRankingEventsOutput) GetItems() []*RankingEvent {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateRankingPointInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string        `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	EventId  string        `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Point    *RankingPoint `protobuf:"bytes,10,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *UpdateRankingPointInput) Reset() {
	*x = UpdateRankingPointInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRankingPointInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRankingPointInput) ProtoMessage() {}

func (x *UpdateRankingPointInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRankingPointInput.ProtoReflect.Descriptor instead.
func (*UpdateRankingPointInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRankingPointInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *UpdateRankingPointInput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *UpdateRankingPointInput) GetPoint() *RankingPoint {
	if x != nil {
		return x.Point
	}
	return nil
}

type UpdateRankingPointOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRankingPointOutput) Reset() {
	*x = UpdateRankingPointOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRankingPointOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRankingPointOutput) ProtoMessage() {}

func (x *UpdateRankingPointOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRankingPointOutput.ProtoReflect.Descriptor instead.
func (*UpdateRankingPointOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{11}
}

type DeleteRankingPointInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string        `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	EventId  string        `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Point    *RankingPoint `protobuf:"bytes,10,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *DeleteRankingPointInput) Reset() {
	*x = DeleteRankingPointInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRankingPointInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRankingPointInput) ProtoMessage() {}

func (x *DeleteRankingPointInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRankingPointInput.ProtoReflect.Descriptor instead.
func (*DeleteRankingPointInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRankingPointInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *DeleteRankingPointInput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *DeleteRankingPointInput) GetPoint() *RankingPoint {
	if x != nil {
		return x.Point
	}
	return nil
}

type DeleteRankingPointOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRankingPointOutput) Reset() {
	*x = DeleteRankingPointOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRankingPointOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRankingPointOutput) ProtoMessage() {}

func (x *DeleteRankingPointOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRankingPointOutput.ProtoReflect.Descriptor instead.
func (*DeleteRankingPointOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{13}
}

type DescribeRankingPointInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	EventId  string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *DescribeRankingPointInput) Reset() {
	*x = DescribeRankingPointInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRankingPointInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRankingPointInput) ProtoMessage() {}

func (x *DescribeRankingPointInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRankingPointInput.ProtoReflect.Descriptor instead.
func (*DescribeRankingPointInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeRankingPointInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *DescribeRankingPointInput) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DescribeRankingPointOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point *RankingPoint `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *DescribeRankingPointOutput) Reset() {
	*x = DescribeRankingPointOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRankingPointOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRankingPointOutput) ProtoMessage() {}

func (x *DescribeRankingPointOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRankingPointOutput.ProtoReflect.Descriptor instead.
func (*DescribeRankingPointOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeRankingPointOutput) GetPoint() *RankingPoint {
	if x != nil {
		return x.Point
	}
	return nil
}

type ListRankingPointsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string                          `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Offset   int32                           `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size     int32                           `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Filters  *ListRankingPointsInput_Filter  `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort     ListRankingPointsInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.community.ListRankingPointsInput_Sortable" json:"sort,omitempty"`
	Order    wellknown.Direction             `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
}

func (x *ListRankingPointsInput) Reset() {
	*x = ListRankingPointsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRankingPointsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRankingPointsInput) ProtoMessage() {}

func (x *ListRankingPointsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRankingPointsInput.ProtoReflect.Descriptor instead.
func (*ListRankingPointsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListRankingPointsInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ListRankingPointsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRankingPointsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListRankingPointsInput) GetFilters() *ListRankingPointsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListRankingPointsInput) GetSort() ListRankingPointsInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListRankingPointsInput_TIMESTAMP
}

func (x *ListRankingPointsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

type ListRankingPointsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*RankingPoint `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRankingPointsOutput) Reset() {
	*x = ListRankingPointsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRankingPointsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRankingPointsOutput) ProtoMessage() {}

func (x *ListRankingPointsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRankingPointsOutput.ProtoReflect.Descriptor instead.
func (*ListRankingPointsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListRankingPointsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRankingPointsOutput) GetItems() []*RankingPoint {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListRankingEventsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []*wellknown.ExpressionID        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Name      []*wellknown.ExpressionString    `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`
	Timestamp []*wellknown.ExpressionTimestamp `protobuf:"bytes,3,rep,name=timestamp,proto3" json:"timestamp,omitempty"`
	ContestId []*wellknown.ExpressionID        `protobuf:"bytes,100,rep,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
}

func (x *ListRankingEventsInput_Filter) Reset() {
	*x = ListRankingEventsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRankingEventsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRankingEventsInput_Filter) ProtoMessage() {}

func (x *ListRankingEventsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRankingEventsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListRankingEventsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListRankingEventsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListRankingEventsInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListRankingEventsInput_Filter) GetTimestamp() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ListRankingEventsInput_Filter) GetContestId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ContestId
	}
	return nil
}

type ListRankingPointsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      []*wellknown.ExpressionID `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	EventId []*wellknown.ExpressionID `protobuf:"bytes,2,rep,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *ListRankingPointsInput_Filter) Reset() {
	*x = ListRankingPointsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_community_ranking_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRankingPointsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRankingPointsInput_Filter) ProtoMessage() {}

func (x *ListRankingPointsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_ranking_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRankingPointsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListRankingPointsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_community_ranking_service_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ListRankingPointsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListRankingPointsInput_Filter) GetEventId() []*wellknown.ExpressionID {
	if x != nil {
		return x.EventId
	}
	return nil
}

var File_eolymp_community_ranking_service_proto protoreflect.FileDescriptor

var file_eolymp_community_ranking_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f,
	0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x35, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x2f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x05, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54,
	0x41, 0x4d, 0x50, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x53, 0x54,
	0x5f, 0x49, 0x44, 0x10, 0x03, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x34, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x36, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1a, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0xa5, 0x04, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x45, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0xf4, 0x01, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x23, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x22, 0x65, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x87,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x1a,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x53, 0x0a, 0x19, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x52, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a,
	0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x22, 0xb6, 0x03, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x45, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x73, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x19, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x00, 0x22, 0x65, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x32, 0xef, 0x0d, 0x0a, 0x0e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb1, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x44, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0f, 0x2f, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xbc, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4f, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2,
	0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f,
	0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xbc, 0x01, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4f, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc1, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2c,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a,
	0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x12, 0x1a, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xad, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x29, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x43, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x72, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xcf, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2a,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x62, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1a, 0x8a,
	0xe3, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x1a,
	0x2d, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xcf,
	0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x62, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a,
	0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x2a, 0x2d, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xd5, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x62, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xba, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x28,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x50, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40,
	0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x3a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_community_ranking_service_proto_rawDescOnce sync.Once
	file_eolymp_community_ranking_service_proto_rawDescData = file_eolymp_community_ranking_service_proto_rawDesc
)

func file_eolymp_community_ranking_service_proto_rawDescGZIP() []byte {
	file_eolymp_community_ranking_service_proto_rawDescOnce.Do(func() {
		file_eolymp_community_ranking_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_community_ranking_service_proto_rawDescData)
	})
	return file_eolymp_community_ranking_service_proto_rawDescData
}

var file_eolymp_community_ranking_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_eolymp_community_ranking_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_eolymp_community_ranking_service_proto_goTypes = []interface{}{
	(UpdateRankingEventInput_Patch)(0),    // 0: eolymp.community.UpdateRankingEventInput.Patch
	(ListRankingEventsInput_Sortable)(0),  // 1: eolymp.community.ListRankingEventsInput.Sortable
	(ListRankingPointsInput_Sortable)(0),  // 2: eolymp.community.ListRankingPointsInput.Sortable
	(*CreateRankingEventInput)(nil),       // 3: eolymp.community.CreateRankingEventInput
	(*CreateRankingEventOutput)(nil),      // 4: eolymp.community.CreateRankingEventOutput
	(*UpdateRankingEventInput)(nil),       // 5: eolymp.community.UpdateRankingEventInput
	(*UpdateRankingEventOutput)(nil),      // 6: eolymp.community.UpdateRankingEventOutput
	(*DeleteRankingEventInput)(nil),       // 7: eolymp.community.DeleteRankingEventInput
	(*DeleteRankingEventOutput)(nil),      // 8: eolymp.community.DeleteRankingEventOutput
	(*DescribeRankingEventInput)(nil),     // 9: eolymp.community.DescribeRankingEventInput
	(*DescribeRankingEventOutput)(nil),    // 10: eolymp.community.DescribeRankingEventOutput
	(*ListRankingEventsInput)(nil),        // 11: eolymp.community.ListRankingEventsInput
	(*ListRankingEventsOutput)(nil),       // 12: eolymp.community.ListRankingEventsOutput
	(*UpdateRankingPointInput)(nil),       // 13: eolymp.community.UpdateRankingPointInput
	(*UpdateRankingPointOutput)(nil),      // 14: eolymp.community.UpdateRankingPointOutput
	(*DeleteRankingPointInput)(nil),       // 15: eolymp.community.DeleteRankingPointInput
	(*DeleteRankingPointOutput)(nil),      // 16: eolymp.community.DeleteRankingPointOutput
	(*DescribeRankingPointInput)(nil),     // 17: eolymp.community.DescribeRankingPointInput
	(*DescribeRankingPointOutput)(nil),    // 18: eolymp.community.DescribeRankingPointOutput
	(*ListRankingPointsInput)(nil),        // 19: eolymp.community.ListRankingPointsInput
	(*ListRankingPointsOutput)(nil),       // 20: eolymp.community.ListRankingPointsOutput
	(*ListRankingEventsInput_Filter)(nil), // 21: eolymp.community.ListRankingEventsInput.Filter
	(*ListRankingPointsInput_Filter)(nil), // 22: eolymp.community.ListRankingPointsInput.Filter
	(*RankingEvent)(nil),                  // 23: eolymp.community.RankingEvent
	(wellknown.Direction)(0),              // 24: eolymp.wellknown.Direction
	(*RankingPoint)(nil),                  // 25: eolymp.community.RankingPoint
	(*wellknown.ExpressionID)(nil),        // 26: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil),    // 27: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionTimestamp)(nil), // 28: eolymp.wellknown.ExpressionTimestamp
}
var file_eolymp_community_ranking_service_proto_depIdxs = []int32{
	23, // 0: eolymp.community.CreateRankingEventInput.event:type_name -> eolymp.community.RankingEvent
	0,  // 1: eolymp.community.UpdateRankingEventInput.patch:type_name -> eolymp.community.UpdateRankingEventInput.Patch
	23, // 2: eolymp.community.UpdateRankingEventInput.event:type_name -> eolymp.community.RankingEvent
	23, // 3: eolymp.community.DescribeRankingEventOutput.event:type_name -> eolymp.community.RankingEvent
	21, // 4: eolymp.community.ListRankingEventsInput.filters:type_name -> eolymp.community.ListRankingEventsInput.Filter
	1,  // 5: eolymp.community.ListRankingEventsInput.sort:type_name -> eolymp.community.ListRankingEventsInput.Sortable
	24, // 6: eolymp.community.ListRankingEventsInput.order:type_name -> eolymp.wellknown.Direction
	23, // 7: eolymp.community.ListRankingEventsOutput.items:type_name -> eolymp.community.RankingEvent
	25, // 8: eolymp.community.UpdateRankingPointInput.point:type_name -> eolymp.community.RankingPoint
	25, // 9: eolymp.community.DeleteRankingPointInput.point:type_name -> eolymp.community.RankingPoint
	25, // 10: eolymp.community.DescribeRankingPointOutput.point:type_name -> eolymp.community.RankingPoint
	22, // 11: eolymp.community.ListRankingPointsInput.filters:type_name -> eolymp.community.ListRankingPointsInput.Filter
	2,  // 12: eolymp.community.ListRankingPointsInput.sort:type_name -> eolymp.community.ListRankingPointsInput.Sortable
	24, // 13: eolymp.community.ListRankingPointsInput.order:type_name -> eolymp.wellknown.Direction
	25, // 14: eolymp.community.ListRankingPointsOutput.items:type_name -> eolymp.community.RankingPoint
	26, // 15: eolymp.community.ListRankingEventsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	27, // 16: eolymp.community.ListRankingEventsInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	28, // 17: eolymp.community.ListRankingEventsInput.Filter.timestamp:type_name -> eolymp.wellknown.ExpressionTimestamp
	26, // 18: eolymp.community.ListRankingEventsInput.Filter.contest_id:type_name -> eolymp.wellknown.ExpressionID
	26, // 19: eolymp.community.ListRankingPointsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	26, // 20: eolymp.community.ListRankingPointsInput.Filter.event_id:type_name -> eolymp.wellknown.ExpressionID
	3,  // 21: eolymp.community.RankingService.CreateRankingEvent:input_type -> eolymp.community.CreateRankingEventInput
	5,  // 22: eolymp.community.RankingService.UpdateRankingEvent:input_type -> eolymp.community.UpdateRankingEventInput
	7,  // 23: eolymp.community.RankingService.DeleteRankingEvent:input_type -> eolymp.community.DeleteRankingEventInput
	9,  // 24: eolymp.community.RankingService.DescribeRankingEvent:input_type -> eolymp.community.DescribeRankingEventInput
	11, // 25: eolymp.community.RankingService.ListRankingEvents:input_type -> eolymp.community.ListRankingEventsInput
	13, // 26: eolymp.community.RankingService.UpdateRankingPoint:input_type -> eolymp.community.UpdateRankingPointInput
	15, // 27: eolymp.community.RankingService.DeleteRankingPoint:input_type -> eolymp.community.DeleteRankingPointInput
	17, // 28: eolymp.community.RankingService.DescribeRankingPoint:input_type -> eolymp.community.DescribeRankingPointInput
	19, // 29: eolymp.community.RankingService.ListRankingPoints:input_type -> eolymp.community.ListRankingPointsInput
	4,  // 30: eolymp.community.RankingService.CreateRankingEvent:output_type -> eolymp.community.CreateRankingEventOutput
	6,  // 31: eolymp.community.RankingService.UpdateRankingEvent:output_type -> eolymp.community.UpdateRankingEventOutput
	8,  // 32: eolymp.community.RankingService.DeleteRankingEvent:output_type -> eolymp.community.DeleteRankingEventOutput
	10, // 33: eolymp.community.RankingService.DescribeRankingEvent:output_type -> eolymp.community.DescribeRankingEventOutput
	12, // 34: eolymp.community.RankingService.ListRankingEvents:output_type -> eolymp.community.ListRankingEventsOutput
	14, // 35: eolymp.community.RankingService.UpdateRankingPoint:output_type -> eolymp.community.UpdateRankingPointOutput
	16, // 36: eolymp.community.RankingService.DeleteRankingPoint:output_type -> eolymp.community.DeleteRankingPointOutput
	18, // 37: eolymp.community.RankingService.DescribeRankingPoint:output_type -> eolymp.community.DescribeRankingPointOutput
	20, // 38: eolymp.community.RankingService.ListRankingPoints:output_type -> eolymp.community.ListRankingPointsOutput
	30, // [30:39] is the sub-list for method output_type
	21, // [21:30] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_eolymp_community_ranking_service_proto_init() }
func file_eolymp_community_ranking_service_proto_init() {
	if File_eolymp_community_ranking_service_proto != nil {
		return
	}
	file_eolymp_community_ranking_event_proto_init()
	file_eolymp_community_ranking_point_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_community_ranking_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRankingEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRankingEventOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRankingEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRankingEventOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRankingEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRankingEventOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRankingEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRankingEventOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRankingEventsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRankingEventsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRankingPointInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRankingPointOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRankingPointInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRankingPointOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRankingPointInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRankingPointOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRankingPointsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRankingPointsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRankingEventsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_community_ranking_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRankingPointsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_community_ranking_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_community_ranking_service_proto_goTypes,
		DependencyIndexes: file_eolymp_community_ranking_service_proto_depIdxs,
		EnumInfos:         file_eolymp_community_ranking_service_proto_enumTypes,
		MessageInfos:      file_eolymp_community_ranking_service_proto_msgTypes,
	}.Build()
	File_eolymp_community_ranking_service_proto = out.File
	file_eolymp_community_ranking_service_proto_rawDesc = nil
	file_eolymp_community_ranking_service_proto_goTypes = nil
	file_eolymp_community_ranking_service_proto_depIdxs = nil
}
