// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: eolymp/community/attribute.proto

package community

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attribute_Patch int32

const (
	Attribute_PATCH_ALL         Attribute_Patch = 0
	Attribute_PATCH_LABEL       Attribute_Patch = 1
	Attribute_PATCH_HELP        Attribute_Patch = 2
	Attribute_PATCH_TYPE        Attribute_Patch = 3
	Attribute_PATCH_INDEX       Attribute_Patch = 4
	Attribute_PATCH_REQUIRED    Attribute_Patch = 5
	Attribute_PATCH_READONLY    Attribute_Patch = 6
	Attribute_PATCH_VISIBILITY  Attribute_Patch = 7
	Attribute_PATCH_REGEXP      Attribute_Patch = 8
	Attribute_PATCH_MIN         Attribute_Patch = 9
	Attribute_PATCH_MAX         Attribute_Patch = 10
	Attribute_PATCH_CHOICES     Attribute_Patch = 11
	Attribute_PATCH_CONSTRAINTS Attribute_Patch = 12
)

// Enum value maps for Attribute_Patch.
var (
	Attribute_Patch_name = map[int32]string{
		0:  "PATCH_ALL",
		1:  "PATCH_LABEL",
		2:  "PATCH_HELP",
		3:  "PATCH_TYPE",
		4:  "PATCH_INDEX",
		5:  "PATCH_REQUIRED",
		6:  "PATCH_READONLY",
		7:  "PATCH_VISIBILITY",
		8:  "PATCH_REGEXP",
		9:  "PATCH_MIN",
		10: "PATCH_MAX",
		11: "PATCH_CHOICES",
		12: "PATCH_CONSTRAINTS",
	}
	Attribute_Patch_value = map[string]int32{
		"PATCH_ALL":         0,
		"PATCH_LABEL":       1,
		"PATCH_HELP":        2,
		"PATCH_TYPE":        3,
		"PATCH_INDEX":       4,
		"PATCH_REQUIRED":    5,
		"PATCH_READONLY":    6,
		"PATCH_VISIBILITY":  7,
		"PATCH_REGEXP":      8,
		"PATCH_MIN":         9,
		"PATCH_MAX":         10,
		"PATCH_CHOICES":     11,
		"PATCH_CONSTRAINTS": 12,
	}
)

func (x Attribute_Patch) Enum() *Attribute_Patch {
	p := new(Attribute_Patch)
	*p = x
	return p
}

func (x Attribute_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_community_attribute_proto_enumTypes[0].Descriptor()
}

func (Attribute_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_community_attribute_proto_enumTypes[0]
}

func (x Attribute_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_Patch.Descriptor instead.
func (Attribute_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_community_attribute_proto_rawDescGZIP(), []int{0, 0}
}

// Field type defines looks and type of the data for the field.
type Attribute_Type int32

const (
	Attribute_UNKNOWN_TYPE Attribute_Type = 0
	// Single line of text.
	//
	// Validation:
	//   - required - string must be non-empty
	//   - min - minimal string length
	//   - max - maximal string length
	//   - regexp - regular expression (RE2) which string must match completely (add .* to configure partial match)
	Attribute_STRING Attribute_Type = 1
	// Multiline text.
	//
	// Validation:
	//   - required - text must be non-empty
	//   - min - minimal text length
	//   - max - maximal text length
	//   - regexp - regular expression (RE2)
	Attribute_TEXT Attribute_Type = 2
	// An integer number.
	//
	// Validation:
	//   - required - field must be non-empty (0 is considered non-empty value)
	//   - min - minimal value
	//   - max - maximal value
	Attribute_NUMBER Attribute_Type = 3
	// Choice, a dropdown with options.
	//
	// Validation:
	//   - required - field must be non-empty
	//   - choices - available values
	Attribute_CHOICE Attribute_Type = 4
	// Date picker.
	//
	// Validation:
	//   - required - field must be non-empty
	Attribute_DATE Attribute_Type = 5
	// Email.
	//
	// Validation:
	//   - required - field must be non-empty
	Attribute_EMAIL Attribute_Type = 6
	// Checkbox gives simple yes/no value.
	//
	// Validation:
	//   - required - field must be checked
	Attribute_CHECKBOX Attribute_Type = 7
	// Country value.
	//
	// Validation:
	//   - required - field must be non-empty
	Attribute_COUNTRY Attribute_Type = 8
	// Country and Region value.
	//
	// Validation:
	//   - required  - field must be non-empty
	//   - countries - region must belong to a specific country
	Attribute_REGION Attribute_Type = 9
	// Country and Region value.
	//
	// Validation:
	//   - required  - field must be non-empty
	//
	// Constraints:
	//   - governance:public
	//   - governance:private
	//   - governance:charter
	//   - level:preschool
	//   - level:primary
	//   - level:secondary
	//   - level:tertiary
	//   - country:[two-letter]
	Attribute_INSTITUTION Attribute_Type = 10
	// An image as a URL to eolympusercontent.com.
	//
	// Validation:
	//   - required - field must be non-empty
	//   - max      - maximal file size in bytes
	//   - min      - minimal file size in bytes
	//
	// Constraints:
	//   - type:[mime-type]
	Attribute_IMAGE Attribute_Type = 11
	// A file value as a URL to eolympusercontent.com.
	//
	// Validation:
	//   - required - field must be non-empty
	//   - max      - maximal file size in bytes
	//   - min      - minimal file size in bytes
	//
	// Constraints:
	//   - type:[mime-type]
	Attribute_FILE Attribute_Type = 12
)

// Enum value maps for Attribute_Type.
var (
	Attribute_Type_name = map[int32]string{
		0:  "UNKNOWN_TYPE",
		1:  "STRING",
		2:  "TEXT",
		3:  "NUMBER",
		4:  "CHOICE",
		5:  "DATE",
		6:  "EMAIL",
		7:  "CHECKBOX",
		8:  "COUNTRY",
		9:  "REGION",
		10: "INSTITUTION",
		11: "IMAGE",
		12: "FILE",
	}
	Attribute_Type_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"STRING":       1,
		"TEXT":         2,
		"NUMBER":       3,
		"CHOICE":       4,
		"DATE":         5,
		"EMAIL":        6,
		"CHECKBOX":     7,
		"COUNTRY":      8,
		"REGION":       9,
		"INSTITUTION":  10,
		"IMAGE":        11,
		"FILE":         12,
	}
)

func (x Attribute_Type) Enum() *Attribute_Type {
	p := new(Attribute_Type)
	*p = x
	return p
}

func (x Attribute_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_community_attribute_proto_enumTypes[1].Descriptor()
}

func (Attribute_Type) Type() protoreflect.EnumType {
	return &file_eolymp_community_attribute_proto_enumTypes[1]
}

func (x Attribute_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_Type.Descriptor instead.
func (Attribute_Type) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_community_attribute_proto_rawDescGZIP(), []int{0, 1}
}

type Attribute_Visibility int32

const (
	Attribute_UNKNOWN_VISIBILITY Attribute_Visibility = 0 // unused
	Attribute_PRIVATE            Attribute_Visibility = 1 // visible only to administrators and member itself
	Attribute_PUBLIC             Attribute_Visibility = 2 // visible to everyone
	Attribute_INTERNAL           Attribute_Visibility = 3 // visible only to administrators
)

// Enum value maps for Attribute_Visibility.
var (
	Attribute_Visibility_name = map[int32]string{
		0: "UNKNOWN_VISIBILITY",
		1: "PRIVATE",
		2: "PUBLIC",
		3: "INTERNAL",
	}
	Attribute_Visibility_value = map[string]int32{
		"UNKNOWN_VISIBILITY": 0,
		"PRIVATE":            1,
		"PUBLIC":             2,
		"INTERNAL":           3,
	}
)

func (x Attribute_Visibility) Enum() *Attribute_Visibility {
	p := new(Attribute_Visibility)
	*p = x
	return p
}

func (x Attribute_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_community_attribute_proto_enumTypes[2].Descriptor()
}

func (Attribute_Visibility) Type() protoreflect.EnumType {
	return &file_eolymp_community_attribute_proto_enumTypes[2]
}

func (x Attribute_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_Visibility.Descriptor instead.
func (Attribute_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_community_attribute_proto_rawDescGZIP(), []int{0, 2}
}

type Attribute struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Key        string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                          // unique field identifier (should be unique within the form, not globally unique)
	Label      string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`                                      // label, normally displayed above the field
	Help       string                 `protobuf:"bytes,3,opt,name=help,proto3" json:"help,omitempty"`                                        // help message, normally displayed right below the field
	Type       Attribute_Type         `protobuf:"varint,20,opt,name=type,proto3,enum=eolymp.community.Attribute_Type" json:"type,omitempty"` // type of the field
	Index      uint32                 `protobuf:"varint,21,opt,name=index,proto3" json:"index,omitempty"`
	Required   bool                   `protobuf:"varint,31,opt,name=required,proto3" json:"required,omitempty"` // value is required (see field types for details)
	Readonly   bool                   `protobuf:"varint,33,opt,name=readonly,proto3" json:"readonly,omitempty"` // only administrator can change the value (member can be set during registration)
	Hidden     bool                   `protobuf:"varint,32,opt,name=hidden,proto3" json:"hidden,omitempty"`     // field is hidden (only visible to admin), deprecated, use visibility instead
	Visibility Attribute_Visibility   `protobuf:"varint,34,opt,name=visibility,proto3,enum=eolymp.community.Attribute_Visibility" json:"visibility,omitempty"`
	// validation
	Regexp        string   `protobuf:"bytes,100,opt,name=regexp,proto3" json:"regexp,omitempty"`           // regexp validation (see field types for details)
	Min           int32    `protobuf:"varint,101,opt,name=min,proto3" json:"min,omitempty"`                // min value validation (see field types for details)
	Max           int32    `protobuf:"varint,102,opt,name=max,proto3" json:"max,omitempty"`                // max value validation (see field types for details)
	Choices       []string `protobuf:"bytes,103,rep,name=choices,proto3" json:"choices,omitempty"`         // possible choices validation (see field types for details)
	Country       string   `protobuf:"bytes,104,opt,name=country,proto3" json:"country,omitempty"`         // restrict region selector to a specific country
	Constraints   []string `protobuf:"bytes,105,rep,name=constraints,proto3" json:"constraints,omitempty"` // additional constraints
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_eolymp_community_attribute_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_attribute_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_eolymp_community_attribute_proto_rawDescGZIP(), []int{0}
}

func (x *Attribute) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Attribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Attribute) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Attribute) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Attribute) GetType() Attribute_Type {
	if x != nil {
		return x.Type
	}
	return Attribute_UNKNOWN_TYPE
}

func (x *Attribute) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Attribute) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Attribute) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *Attribute) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Attribute) GetVisibility() Attribute_Visibility {
	if x != nil {
		return x.Visibility
	}
	return Attribute_UNKNOWN_VISIBILITY
}

func (x *Attribute) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Attribute) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Attribute) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Attribute) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *Attribute) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Attribute) GetConstraints() []string {
	if x != nil {
		return x.Constraints
	}
	return nil
}

// Description provides localized information about field.
type Attribute_Description struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locale        string                 `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`   // locale
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`     // label, normally displayed above the field
	Help          string                 `protobuf:"bytes,4,opt,name=help,proto3" json:"help,omitempty"`       // help message, normally displayed right below the field
	Choices       []string               `protobuf:"bytes,5,rep,name=choices,proto3" json:"choices,omitempty"` // translation for choices (must be in the same order)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute_Description) Reset() {
	*x = Attribute_Description{}
	mi := &file_eolymp_community_attribute_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_Description) ProtoMessage() {}

func (x *Attribute_Description) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_attribute_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_Description.ProtoReflect.Descriptor instead.
func (*Attribute_Description) Descriptor() ([]byte, []int) {
	return file_eolymp_community_attribute_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Attribute_Description) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Attribute_Description) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Attribute_Description) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Attribute_Description) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

// Attribute value
type Attribute_Value struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttributeKey  string                 `protobuf:"bytes,1,opt,name=attribute_key,json=attributeKey,proto3" json:"attribute_key,omitempty"`
	AttributeType Attribute_Type         `protobuf:"varint,2,opt,name=attribute_type,json=attributeType,proto3,enum=eolymp.community.Attribute_Type" json:"attribute_type,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*Attribute_Value_String_
	//	*Attribute_Value_Number
	Value         isAttribute_Value_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute_Value) Reset() {
	*x = Attribute_Value{}
	mi := &file_eolymp_community_attribute_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_Value) ProtoMessage() {}

func (x *Attribute_Value) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_community_attribute_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_Value.ProtoReflect.Descriptor instead.
func (*Attribute_Value) Descriptor() ([]byte, []int) {
	return file_eolymp_community_attribute_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Attribute_Value) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *Attribute_Value) GetAttributeType() Attribute_Type {
	if x != nil {
		return x.AttributeType
	}
	return Attribute_UNKNOWN_TYPE
}

func (x *Attribute_Value) GetValue() isAttribute_Value_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Attribute_Value) GetString_() string {
	if x != nil {
		if x, ok := x.Value.(*Attribute_Value_String_); ok {
			return x.String_
		}
	}
	return ""
}

func (x *Attribute_Value) GetNumber() int32 {
	if x != nil {
		if x, ok := x.Value.(*Attribute_Value_Number); ok {
			return x.Number
		}
	}
	return 0
}

type isAttribute_Value_Value interface {
	isAttribute_Value_Value()
}

type Attribute_Value_String_ struct {
	String_ string `protobuf:"bytes,10,opt,name=string,proto3,oneof"`
}

type Attribute_Value_Number struct {
	Number int32 `protobuf:"varint,11,opt,name=number,proto3,oneof"`
}

func (*Attribute_Value_String_) isAttribute_Value_Value() {}

func (*Attribute_Value_Number) isAttribute_Value_Value() {}

var File_eolymp_community_attribute_proto protoreflect.FileDescriptor

const file_eolymp_community_attribute_proto_rawDesc = "" +
	"\n" +
	" eolymp/community/attribute.proto\x12\x10eolymp.community\"\xd8\t\n" +
	"\tAttribute\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\tR\x02id\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x12\n" +
	"\x04help\x18\x03 \x01(\tR\x04help\x124\n" +
	"\x04type\x18\x14 \x01(\x0e2 .eolymp.community.Attribute.TypeR\x04type\x12\x14\n" +
	"\x05index\x18\x15 \x01(\rR\x05index\x12\x1a\n" +
	"\brequired\x18\x1f \x01(\bR\brequired\x12\x1a\n" +
	"\breadonly\x18! \x01(\bR\breadonly\x12\x16\n" +
	"\x06hidden\x18  \x01(\bR\x06hidden\x12F\n" +
	"\n" +
	"visibility\x18\" \x01(\x0e2&.eolymp.community.Attribute.VisibilityR\n" +
	"visibility\x12\x16\n" +
	"\x06regexp\x18d \x01(\tR\x06regexp\x12\x10\n" +
	"\x03min\x18e \x01(\x05R\x03min\x12\x10\n" +
	"\x03max\x18f \x01(\x05R\x03max\x12\x18\n" +
	"\achoices\x18g \x03(\tR\achoices\x12\x18\n" +
	"\acountry\x18h \x01(\tR\acountry\x12 \n" +
	"\vconstraints\x18i \x03(\tR\vconstraints\x1ai\n" +
	"\vDescription\x12\x16\n" +
	"\x06locale\x18\x02 \x01(\tR\x06locale\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x12\n" +
	"\x04help\x18\x04 \x01(\tR\x04help\x12\x18\n" +
	"\achoices\x18\x05 \x03(\tR\achoices\x1a\xb2\x01\n" +
	"\x05Value\x12#\n" +
	"\rattribute_key\x18\x01 \x01(\tR\fattributeKey\x12G\n" +
	"\x0eattribute_type\x18\x02 \x01(\x0e2 .eolymp.community.Attribute.TypeR\rattributeType\x12\x18\n" +
	"\x06string\x18\n" +
	" \x01(\tH\x00R\x06string\x12\x18\n" +
	"\x06number\x18\v \x01(\x05H\x00R\x06numberB\a\n" +
	"\x05value\"\xf0\x01\n" +
	"\x05Patch\x12\r\n" +
	"\tPATCH_ALL\x10\x00\x12\x0f\n" +
	"\vPATCH_LABEL\x10\x01\x12\x0e\n" +
	"\n" +
	"PATCH_HELP\x10\x02\x12\x0e\n" +
	"\n" +
	"PATCH_TYPE\x10\x03\x12\x0f\n" +
	"\vPATCH_INDEX\x10\x04\x12\x12\n" +
	"\x0ePATCH_REQUIRED\x10\x05\x12\x12\n" +
	"\x0ePATCH_READONLY\x10\x06\x12\x14\n" +
	"\x10PATCH_VISIBILITY\x10\a\x12\x10\n" +
	"\fPATCH_REGEXP\x10\b\x12\r\n" +
	"\tPATCH_MIN\x10\t\x12\r\n" +
	"\tPATCH_MAX\x10\n" +
	"\x12\x11\n" +
	"\rPATCH_CHOICES\x10\v\x12\x15\n" +
	"\x11PATCH_CONSTRAINTS\x10\f\"\xa8\x01\n" +
	"\x04Type\x12\x10\n" +
	"\fUNKNOWN_TYPE\x10\x00\x12\n" +
	"\n" +
	"\x06STRING\x10\x01\x12\b\n" +
	"\x04TEXT\x10\x02\x12\n" +
	"\n" +
	"\x06NUMBER\x10\x03\x12\n" +
	"\n" +
	"\x06CHOICE\x10\x04\x12\b\n" +
	"\x04DATE\x10\x05\x12\t\n" +
	"\x05EMAIL\x10\x06\x12\f\n" +
	"\bCHECKBOX\x10\a\x12\v\n" +
	"\aCOUNTRY\x10\b\x12\n" +
	"\n" +
	"\x06REGION\x10\t\x12\x0f\n" +
	"\vINSTITUTION\x10\n" +
	"\x12\t\n" +
	"\x05IMAGE\x10\v\x12\b\n" +
	"\x04FILE\x10\f\"K\n" +
	"\n" +
	"Visibility\x12\x16\n" +
	"\x12UNKNOWN_VISIBILITY\x10\x00\x12\v\n" +
	"\aPRIVATE\x10\x01\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x02\x12\f\n" +
	"\bINTERNAL\x10\x03B5Z3github.com/eolymp/go-sdk/eolymp/community;communityb\x06proto3"

var (
	file_eolymp_community_attribute_proto_rawDescOnce sync.Once
	file_eolymp_community_attribute_proto_rawDescData []byte
)

func file_eolymp_community_attribute_proto_rawDescGZIP() []byte {
	file_eolymp_community_attribute_proto_rawDescOnce.Do(func() {
		file_eolymp_community_attribute_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_community_attribute_proto_rawDesc), len(file_eolymp_community_attribute_proto_rawDesc)))
	})
	return file_eolymp_community_attribute_proto_rawDescData
}

var file_eolymp_community_attribute_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_eolymp_community_attribute_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_eolymp_community_attribute_proto_goTypes = []any{
	(Attribute_Patch)(0),          // 0: eolymp.community.Attribute.Patch
	(Attribute_Type)(0),           // 1: eolymp.community.Attribute.Type
	(Attribute_Visibility)(0),     // 2: eolymp.community.Attribute.Visibility
	(*Attribute)(nil),             // 3: eolymp.community.Attribute
	(*Attribute_Description)(nil), // 4: eolymp.community.Attribute.Description
	(*Attribute_Value)(nil),       // 5: eolymp.community.Attribute.Value
}
var file_eolymp_community_attribute_proto_depIdxs = []int32{
	1, // 0: eolymp.community.Attribute.type:type_name -> eolymp.community.Attribute.Type
	2, // 1: eolymp.community.Attribute.visibility:type_name -> eolymp.community.Attribute.Visibility
	1, // 2: eolymp.community.Attribute.Value.attribute_type:type_name -> eolymp.community.Attribute.Type
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_eolymp_community_attribute_proto_init() }
func file_eolymp_community_attribute_proto_init() {
	if File_eolymp_community_attribute_proto != nil {
		return
	}
	file_eolymp_community_attribute_proto_msgTypes[2].OneofWrappers = []any{
		(*Attribute_Value_String_)(nil),
		(*Attribute_Value_Number)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_community_attribute_proto_rawDesc), len(file_eolymp_community_attribute_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_community_attribute_proto_goTypes,
		DependencyIndexes: file_eolymp_community_attribute_proto_depIdxs,
		EnumInfos:         file_eolymp_community_attribute_proto_enumTypes,
		MessageInfos:      file_eolymp_community_attribute_proto_msgTypes,
	}.Build()
	File_eolymp_community_attribute_proto = out.File
	file_eolymp_community_attribute_proto_goTypes = nil
	file_eolymp_community_attribute_proto_depIdxs = nil
}
