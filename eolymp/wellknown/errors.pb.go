// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: eolymp/wellknown/errors.proto

package wellknown

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorReport error details. This structure can be returned with an error to provide "trace back" information about an
// error. This report_id returned with an error can be associated with the server log information, for example stack
// trace or database query data.
type ErrorReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"` // Report ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorReport) Reset() {
	*x = ErrorReport{}
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReport) ProtoMessage() {}

func (x *ErrorReport) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorReport.ProtoReflect.Descriptor instead.
func (*ErrorReport) Descriptor() ([]byte, []int) {
	return file_eolymp_wellknown_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorReport) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

// InvalidArgument error details. This structure can be returned with and error to provide name of the argument which
// has failed validation.
type InvalidArgument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArgumentPath  string                 `protobuf:"bytes,1,opt,name=argument_path,json=argumentPath,proto3" json:"argument_path,omitempty"` // deprecated: argument path, instead see validation errors with list of arguments
	Validation    []*Validation          `protobuf:"bytes,2,rep,name=validation,proto3" json:"validation,omitempty"`                         // validation errors
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvalidArgument) Reset() {
	*x = InvalidArgument{}
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidArgument) ProtoMessage() {}

func (x *InvalidArgument) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidArgument.ProtoReflect.Descriptor instead.
func (*InvalidArgument) Descriptor() ([]byte, []int) {
	return file_eolymp_wellknown_errors_proto_rawDescGZIP(), []int{1}
}

func (x *InvalidArgument) GetArgumentPath() string {
	if x != nil {
		return x.ArgumentPath
	}
	return ""
}

func (x *InvalidArgument) GetValidation() []*Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

// ValidationError
type Validation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArgumentPath  []string               `protobuf:"bytes,1,rep,name=argument_path,json=argumentPath,proto3" json:"argument_path,omitempty"` // argument path
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // basic error message
	Localization  *ErrorLocalization     `protobuf:"bytes,3,opt,name=localization,proto3" json:"localization,omitempty"`                     // optionally localization data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Validation) Reset() {
	*x = Validation{}
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_eolymp_wellknown_errors_proto_rawDescGZIP(), []int{2}
}

func (x *Validation) GetArgumentPath() []string {
	if x != nil {
		return x.ArgumentPath
	}
	return nil
}

func (x *Validation) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Validation) GetLocalization() *ErrorLocalization {
	if x != nil {
		return x.Localization
	}
	return nil
}

// QuotaExceeded error details. This structure can be returned with an error to provide details about quota usage.
type QuotaExceeded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quota         int32                  `protobuf:"varint,1,opt,name=quota,proto3" json:"quota,omitempty"` // Quota available to the user
	Usage         int32                  `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"` // Actual quota usage
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuotaExceeded) Reset() {
	*x = QuotaExceeded{}
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuotaExceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaExceeded) ProtoMessage() {}

func (x *QuotaExceeded) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaExceeded.ProtoReflect.Descriptor instead.
func (*QuotaExceeded) Descriptor() ([]byte, []int) {
	return file_eolymp_wellknown_errors_proto_rawDescGZIP(), []int{3}
}

func (x *QuotaExceeded) GetQuota() int32 {
	if x != nil {
		return x.Quota
	}
	return 0
}

func (x *QuotaExceeded) GetUsage() int32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

// ErrorLocalization details. This structure can be returned with an error to provide localization data for systems
// where errors need to be translated for users.
type ErrorLocalization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PhraseKey     string                 `protobuf:"bytes,1,opt,name=phrase_key,json=phraseKey,proto3" json:"phrase_key,omitempty"`                                                                                    // Phrase key uniquely identifies error message
	PhraseParams  map[string]string      `protobuf:"bytes,2,rep,name=phrase_params,json=phraseParams,proto3" json:"phrase_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Phrase parameters define "variables" in the phrase
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorLocalization) Reset() {
	*x = ErrorLocalization{}
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorLocalization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorLocalization) ProtoMessage() {}

func (x *ErrorLocalization) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_wellknown_errors_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorLocalization.ProtoReflect.Descriptor instead.
func (*ErrorLocalization) Descriptor() ([]byte, []int) {
	return file_eolymp_wellknown_errors_proto_rawDescGZIP(), []int{4}
}

func (x *ErrorLocalization) GetPhraseKey() string {
	if x != nil {
		return x.PhraseKey
	}
	return ""
}

func (x *ErrorLocalization) GetPhraseParams() map[string]string {
	if x != nil {
		return x.PhraseParams
	}
	return nil
}

var File_eolymp_wellknown_errors_proto protoreflect.FileDescriptor

const file_eolymp_wellknown_errors_proto_rawDesc = "" +
	"\n" +
	"\x1deolymp/wellknown/errors.proto\x12\x10eolymp.wellknown\"*\n" +
	"\vErrorReport\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\"t\n" +
	"\x0fInvalidArgument\x12#\n" +
	"\rargument_path\x18\x01 \x01(\tR\fargumentPath\x12<\n" +
	"\n" +
	"validation\x18\x02 \x03(\v2\x1c.eolymp.wellknown.ValidationR\n" +
	"validation\"\x9f\x01\n" +
	"\n" +
	"Validation\x12#\n" +
	"\rargument_path\x18\x01 \x03(\tR\fargumentPath\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12G\n" +
	"\flocalization\x18\x03 \x01(\v2#.eolymp.wellknown.ErrorLocalizationR\flocalization\";\n" +
	"\rQuotaExceeded\x12\x14\n" +
	"\x05quota\x18\x01 \x01(\x05R\x05quota\x12\x14\n" +
	"\x05usage\x18\x02 \x01(\x05R\x05usage\"\xcf\x01\n" +
	"\x11ErrorLocalization\x12\x1d\n" +
	"\n" +
	"phrase_key\x18\x01 \x01(\tR\tphraseKey\x12Z\n" +
	"\rphrase_params\x18\x02 \x03(\v25.eolymp.wellknown.ErrorLocalization.PhraseParamsEntryR\fphraseParams\x1a?\n" +
	"\x11PhraseParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B5Z3github.com/eolymp/go-sdk/eolymp/wellknown;wellknownb\x06proto3"

var (
	file_eolymp_wellknown_errors_proto_rawDescOnce sync.Once
	file_eolymp_wellknown_errors_proto_rawDescData []byte
)

func file_eolymp_wellknown_errors_proto_rawDescGZIP() []byte {
	file_eolymp_wellknown_errors_proto_rawDescOnce.Do(func() {
		file_eolymp_wellknown_errors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_wellknown_errors_proto_rawDesc), len(file_eolymp_wellknown_errors_proto_rawDesc)))
	})
	return file_eolymp_wellknown_errors_proto_rawDescData
}

var file_eolymp_wellknown_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_eolymp_wellknown_errors_proto_goTypes = []any{
	(*ErrorReport)(nil),       // 0: eolymp.wellknown.ErrorReport
	(*InvalidArgument)(nil),   // 1: eolymp.wellknown.InvalidArgument
	(*Validation)(nil),        // 2: eolymp.wellknown.Validation
	(*QuotaExceeded)(nil),     // 3: eolymp.wellknown.QuotaExceeded
	(*ErrorLocalization)(nil), // 4: eolymp.wellknown.ErrorLocalization
	nil,                       // 5: eolymp.wellknown.ErrorLocalization.PhraseParamsEntry
}
var file_eolymp_wellknown_errors_proto_depIdxs = []int32{
	2, // 0: eolymp.wellknown.InvalidArgument.validation:type_name -> eolymp.wellknown.Validation
	4, // 1: eolymp.wellknown.Validation.localization:type_name -> eolymp.wellknown.ErrorLocalization
	5, // 2: eolymp.wellknown.ErrorLocalization.phrase_params:type_name -> eolymp.wellknown.ErrorLocalization.PhraseParamsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_eolymp_wellknown_errors_proto_init() }
func file_eolymp_wellknown_errors_proto_init() {
	if File_eolymp_wellknown_errors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_wellknown_errors_proto_rawDesc), len(file_eolymp_wellknown_errors_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_wellknown_errors_proto_goTypes,
		DependencyIndexes: file_eolymp_wellknown_errors_proto_depIdxs,
		MessageInfos:      file_eolymp_wellknown_errors_proto_msgTypes,
	}.Build()
	File_eolymp_wellknown_errors_proto = out.File
	file_eolymp_wellknown_errors_proto_goTypes = nil
	file_eolymp_wellknown_errors_proto_depIdxs = nil
}
