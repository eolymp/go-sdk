// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package keeper

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// KeeperClient is the client API for Keeper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KeeperClient interface {
	CreateObject(ctx context.Context, in *CreateObjectInput, opts ...grpc.CallOption) (*CreateObjectOutput, error)
	DescribeObject(ctx context.Context, in *DescribeObjectInput, opts ...grpc.CallOption) (*DescribeObjectOutput, error)
	DownloadObject(ctx context.Context, in *DownloadObjectInput, opts ...grpc.CallOption) (*DownloadObjectOutput, error)
}

type keeperClient struct {
	cc grpc.ClientConnInterface
}

func NewKeeperClient(cc grpc.ClientConnInterface) KeeperClient {
	return &keeperClient{cc}
}

func (c *keeperClient) CreateObject(ctx context.Context, in *CreateObjectInput, opts ...grpc.CallOption) (*CreateObjectOutput, error) {
	out := new(CreateObjectOutput)
	err := c.cc.Invoke(ctx, "/eolymp.keeper.Keeper/CreateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) DescribeObject(ctx context.Context, in *DescribeObjectInput, opts ...grpc.CallOption) (*DescribeObjectOutput, error) {
	out := new(DescribeObjectOutput)
	err := c.cc.Invoke(ctx, "/eolymp.keeper.Keeper/DescribeObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) DownloadObject(ctx context.Context, in *DownloadObjectInput, opts ...grpc.CallOption) (*DownloadObjectOutput, error) {
	out := new(DownloadObjectOutput)
	err := c.cc.Invoke(ctx, "/eolymp.keeper.Keeper/DownloadObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeeperServer is the server API for Keeper service.
// All implementations must embed UnimplementedKeeperServer
// for forward compatibility
type KeeperServer interface {
	CreateObject(context.Context, *CreateObjectInput) (*CreateObjectOutput, error)
	DescribeObject(context.Context, *DescribeObjectInput) (*DescribeObjectOutput, error)
	DownloadObject(context.Context, *DownloadObjectInput) (*DownloadObjectOutput, error)
	mustEmbedUnimplementedKeeperServer()
}

// UnimplementedKeeperServer must be embedded to have forward compatible implementations.
type UnimplementedKeeperServer struct {
}

func (UnimplementedKeeperServer) CreateObject(context.Context, *CreateObjectInput) (*CreateObjectOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObject not implemented")
}
func (UnimplementedKeeperServer) DescribeObject(context.Context, *DescribeObjectInput) (*DescribeObjectOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeObject not implemented")
}
func (UnimplementedKeeperServer) DownloadObject(context.Context, *DownloadObjectInput) (*DownloadObjectOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadObject not implemented")
}
func (UnimplementedKeeperServer) mustEmbedUnimplementedKeeperServer() {}

// UnsafeKeeperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KeeperServer will
// result in compilation errors.
type UnsafeKeeperServer interface {
	mustEmbedUnimplementedKeeperServer()
}

func RegisterKeeperServer(s grpc.ServiceRegistrar, srv KeeperServer) {
	s.RegisterService(&Keeper_ServiceDesc, srv)
}

func _Keeper_CreateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).CreateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eolymp.keeper.Keeper/CreateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).CreateObject(ctx, req.(*CreateObjectInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_DescribeObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeObjectInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).DescribeObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eolymp.keeper.Keeper/DescribeObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).DescribeObject(ctx, req.(*DescribeObjectInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_DownloadObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadObjectInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).DownloadObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eolymp.keeper.Keeper/DownloadObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).DownloadObject(ctx, req.(*DownloadObjectInput))
	}
	return interceptor(ctx, in, info, handler)
}

// Keeper_ServiceDesc is the grpc.ServiceDesc for Keeper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Keeper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eolymp.keeper.Keeper",
	HandlerType: (*KeeperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateObject",
			Handler:    _Keeper_CreateObject_Handler,
		},
		{
			MethodName: "DescribeObject",
			Handler:    _Keeper_DescribeObject_Handler,
		},
		{
			MethodName: "DownloadObject",
			Handler:    _Keeper_DownloadObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eolymp/keeper/keeper.proto",
}
