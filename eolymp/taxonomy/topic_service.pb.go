// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.18.1
// source: eolymp/taxonomy/topic_service.proto

package taxonomy

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateTopicInput_Patch int32

const (
	UpdateTopicInput_ALL                 UpdateTopicInput_Patch = 0 // replace descriptors with value in the request
	UpdateTopicInput_APPEND_DESCRIPTORS  UpdateTopicInput_Patch = 1 // append descriptors with value in the request (but remove duplicated locales)
	UpdateTopicInput_EXCLUDE_DESCRIPTORS UpdateTopicInput_Patch = 2 // remove descriptors with locale matching these in the request
)

// Enum value maps for UpdateTopicInput_Patch.
var (
	UpdateTopicInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "APPEND_DESCRIPTORS",
		2: "EXCLUDE_DESCRIPTORS",
	}
	UpdateTopicInput_Patch_value = map[string]int32{
		"ALL":                 0,
		"APPEND_DESCRIPTORS":  1,
		"EXCLUDE_DESCRIPTORS": 2,
	}
)

func (x UpdateTopicInput_Patch) Enum() *UpdateTopicInput_Patch {
	p := new(UpdateTopicInput_Patch)
	*p = x
	return p
}

func (x UpdateTopicInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTopicInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_taxonomy_topic_service_proto_enumTypes[0].Descriptor()
}

func (UpdateTopicInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_taxonomy_topic_service_proto_enumTypes[0]
}

func (x UpdateTopicInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTopicInput_Patch.Descriptor instead.
func (UpdateTopicInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{4, 0}
}

type CreateTopicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *CreateTopicInput) Reset() {
	*x = CreateTopicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicInput) ProtoMessage() {}

func (x *CreateTopicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicInput.ProtoReflect.Descriptor instead.
func (*CreateTopicInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTopicInput) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type CreateTopicOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *CreateTopicOutput) Reset() {
	*x = CreateTopicOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopicOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicOutput) ProtoMessage() {}

func (x *CreateTopicOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicOutput.ProtoReflect.Descriptor instead.
func (*CreateTopicOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTopicOutput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type DeleteTopicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *DeleteTopicInput) Reset() {
	*x = DeleteTopicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicInput) ProtoMessage() {}

func (x *DeleteTopicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicInput.ProtoReflect.Descriptor instead.
func (*DeleteTopicInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTopicInput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type DeleteTopicOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTopicOutput) Reset() {
	*x = DeleteTopicOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTopicOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTopicOutput) ProtoMessage() {}

func (x *DeleteTopicOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTopicOutput.ProtoReflect.Descriptor instead.
func (*DeleteTopicOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{3}
}

type UpdateTopicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patch   []UpdateTopicInput_Patch `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.taxonomy.UpdateTopicInput_Patch" json:"patch,omitempty"` // patch defines how update should be performed
	TopicId string                   `protobuf:"bytes,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`                                  // topic to update
	Topic   *Topic                   `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`                                                     // value to set (id field is ignored during update)
}

func (x *UpdateTopicInput) Reset() {
	*x = UpdateTopicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopicInput) ProtoMessage() {}

func (x *UpdateTopicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopicInput.ProtoReflect.Descriptor instead.
func (*UpdateTopicInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTopicInput) GetPatch() []UpdateTopicInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateTopicInput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *UpdateTopicInput) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type UpdateTopicOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTopicOutput) Reset() {
	*x = UpdateTopicOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopicOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopicOutput) ProtoMessage() {}

func (x *UpdateTopicOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopicOutput.ProtoReflect.Descriptor instead.
func (*UpdateTopicOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{5}
}

type DescribeTopicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
}

func (x *DescribeTopicInput) Reset() {
	*x = DescribeTopicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTopicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTopicInput) ProtoMessage() {}

func (x *DescribeTopicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTopicInput.ProtoReflect.Descriptor instead.
func (*DescribeTopicInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeTopicInput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type DescribeTopicOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *DescribeTopicOutput) Reset() {
	*x = DescribeTopicOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTopicOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTopicOutput) ProtoMessage() {}

func (x *DescribeTopicOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTopicOutput.ProtoReflect.Descriptor instead.
func (*DescribeTopicOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeTopicOutput) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type ListTopicsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListTopicsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListTopicsInput) Reset() {
	*x = ListTopicsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopicsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsInput) ProtoMessage() {}

func (x *ListTopicsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsInput.ProtoReflect.Descriptor instead.
func (*ListTopicsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListTopicsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTopicsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTopicsInput) GetFilters() *ListTopicsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListTopicsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Topic `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTopicsOutput) Reset() {
	*x = ListTopicsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopicsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsOutput) ProtoMessage() {}

func (x *ListTopicsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsOutput.ProtoReflect.Descriptor instead.
func (*ListTopicsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListTopicsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTopicsOutput) GetItems() []*Topic {
	if x != nil {
		return x.Items
	}
	return nil
}

type TranslateTopicInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId     string             `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Locale      string             `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	Translation *Topic_Translation `protobuf:"bytes,3,opt,name=translation,proto3" json:"translation,omitempty"`
}

func (x *TranslateTopicInput) Reset() {
	*x = TranslateTopicInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateTopicInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateTopicInput) ProtoMessage() {}

func (x *TranslateTopicInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateTopicInput.ProtoReflect.Descriptor instead.
func (*TranslateTopicInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{10}
}

func (x *TranslateTopicInput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *TranslateTopicInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *TranslateTopicInput) GetTranslation() *Topic_Translation {
	if x != nil {
		return x.Translation
	}
	return nil
}

type TranslateTopicOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TranslateTopicOutput) Reset() {
	*x = TranslateTopicOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateTopicOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateTopicOutput) ProtoMessage() {}

func (x *TranslateTopicOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateTopicOutput.ProtoReflect.Descriptor instead.
func (*TranslateTopicOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{11}
}

type DeleteTranslationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Locale  string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
}

func (x *DeleteTranslationInput) Reset() {
	*x = DeleteTranslationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTranslationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranslationInput) ProtoMessage() {}

func (x *DeleteTranslationInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranslationInput.ProtoReflect.Descriptor instead.
func (*DeleteTranslationInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteTranslationInput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *DeleteTranslationInput) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type DeleteTranslationOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTranslationOutput) Reset() {
	*x = DeleteTranslationOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTranslationOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranslationOutput) ProtoMessage() {}

func (x *DeleteTranslationOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranslationOutput.ProtoReflect.Descriptor instead.
func (*DeleteTranslationOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{13}
}

type ListTranslationsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListTranslationsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListTranslationsInput) Reset() {
	*x = ListTranslationsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTranslationsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTranslationsInput) ProtoMessage() {}

func (x *ListTranslationsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTranslationsInput.ProtoReflect.Descriptor instead.
func (*ListTranslationsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListTranslationsInput) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *ListTranslationsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTranslationsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTranslationsInput) GetFilters() *ListTranslationsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListTranslationsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Topic_Translation `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTranslationsOutput) Reset() {
	*x = ListTranslationsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTranslationsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTranslationsOutput) ProtoMessage() {}

func (x *ListTranslationsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTranslationsOutput.ProtoReflect.Descriptor instead.
func (*ListTranslationsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListTranslationsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTranslationsOutput) GetItems() []*Topic_Translation {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListTopicsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string                        `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id    []*wellknown.ExpressionID     `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	Name  []*wellknown.ExpressionString `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *ListTopicsInput_Filter) Reset() {
	*x = ListTopicsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopicsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsInput_Filter) ProtoMessage() {}

func (x *ListTopicsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListTopicsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListTopicsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListTopicsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListTopicsInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

type ListTranslationsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale []*wellknown.ExpressionEnum `protobuf:"bytes,1,rep,name=locale,proto3" json:"locale,omitempty"`
}

func (x *ListTranslationsInput_Filter) Reset() {
	*x = ListTranslationsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTranslationsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTranslationsInput_Filter) ProtoMessage() {}

func (x *ListTranslationsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_taxonomy_topic_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTranslationsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListTranslationsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_taxonomy_topic_service_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ListTranslationsInput_Filter) GetLocale() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Locale
	}
	return nil
}

var File_eolymp_taxonomy_topic_service_proto protoreflect.FileDescriptor

var file_eolymp_taxonomy_topic_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61,
	0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x2e, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0xdd, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x41, 0x0a, 0x05,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x4f, 0x52, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44,
	0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x4f, 0x52, 0x53, 0x10, 0x02, 0x22,
	0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x86, 0x01,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x16, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4b, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0xeb, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x47, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x42, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x68, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xcb, 0x0a, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x3a, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05,
	0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x09, 0x22, 0x07, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x45, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8,
	0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f, 0x7b,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x45, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a,
	0x05, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x1a, 0x12, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa0, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x44, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x72, 0x65, 0x61, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f,
	0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x39,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82,
	0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3a,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09,
	0x12, 0x07, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x0e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x24, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3,
	0x0a, 0x14, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x1a, 0x28, 0x2f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x5b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05,
	0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x2a, 0x28, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x7d, 0x12, 0xb6, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x51, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8,
	0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x74, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x3a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x3b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_eolymp_taxonomy_topic_service_proto_rawDescOnce sync.Once
	file_eolymp_taxonomy_topic_service_proto_rawDescData = file_eolymp_taxonomy_topic_service_proto_rawDesc
)

func file_eolymp_taxonomy_topic_service_proto_rawDescGZIP() []byte {
	file_eolymp_taxonomy_topic_service_proto_rawDescOnce.Do(func() {
		file_eolymp_taxonomy_topic_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_taxonomy_topic_service_proto_rawDescData)
	})
	return file_eolymp_taxonomy_topic_service_proto_rawDescData
}

var file_eolymp_taxonomy_topic_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_taxonomy_topic_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_eolymp_taxonomy_topic_service_proto_goTypes = []interface{}{
	(UpdateTopicInput_Patch)(0),          // 0: eolymp.taxonomy.UpdateTopicInput.Patch
	(*CreateTopicInput)(nil),             // 1: eolymp.taxonomy.CreateTopicInput
	(*CreateTopicOutput)(nil),            // 2: eolymp.taxonomy.CreateTopicOutput
	(*DeleteTopicInput)(nil),             // 3: eolymp.taxonomy.DeleteTopicInput
	(*DeleteTopicOutput)(nil),            // 4: eolymp.taxonomy.DeleteTopicOutput
	(*UpdateTopicInput)(nil),             // 5: eolymp.taxonomy.UpdateTopicInput
	(*UpdateTopicOutput)(nil),            // 6: eolymp.taxonomy.UpdateTopicOutput
	(*DescribeTopicInput)(nil),           // 7: eolymp.taxonomy.DescribeTopicInput
	(*DescribeTopicOutput)(nil),          // 8: eolymp.taxonomy.DescribeTopicOutput
	(*ListTopicsInput)(nil),              // 9: eolymp.taxonomy.ListTopicsInput
	(*ListTopicsOutput)(nil),             // 10: eolymp.taxonomy.ListTopicsOutput
	(*TranslateTopicInput)(nil),          // 11: eolymp.taxonomy.TranslateTopicInput
	(*TranslateTopicOutput)(nil),         // 12: eolymp.taxonomy.TranslateTopicOutput
	(*DeleteTranslationInput)(nil),       // 13: eolymp.taxonomy.DeleteTranslationInput
	(*DeleteTranslationOutput)(nil),      // 14: eolymp.taxonomy.DeleteTranslationOutput
	(*ListTranslationsInput)(nil),        // 15: eolymp.taxonomy.ListTranslationsInput
	(*ListTranslationsOutput)(nil),       // 16: eolymp.taxonomy.ListTranslationsOutput
	(*ListTopicsInput_Filter)(nil),       // 17: eolymp.taxonomy.ListTopicsInput.Filter
	(*ListTranslationsInput_Filter)(nil), // 18: eolymp.taxonomy.ListTranslationsInput.Filter
	(*Topic)(nil),                        // 19: eolymp.taxonomy.Topic
	(*Topic_Translation)(nil),            // 20: eolymp.taxonomy.Topic.Translation
	(*wellknown.ExpressionID)(nil),       // 21: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil),   // 22: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionEnum)(nil),     // 23: eolymp.wellknown.ExpressionEnum
}
var file_eolymp_taxonomy_topic_service_proto_depIdxs = []int32{
	19, // 0: eolymp.taxonomy.CreateTopicInput.topic:type_name -> eolymp.taxonomy.Topic
	0,  // 1: eolymp.taxonomy.UpdateTopicInput.patch:type_name -> eolymp.taxonomy.UpdateTopicInput.Patch
	19, // 2: eolymp.taxonomy.UpdateTopicInput.topic:type_name -> eolymp.taxonomy.Topic
	19, // 3: eolymp.taxonomy.DescribeTopicOutput.topic:type_name -> eolymp.taxonomy.Topic
	17, // 4: eolymp.taxonomy.ListTopicsInput.filters:type_name -> eolymp.taxonomy.ListTopicsInput.Filter
	19, // 5: eolymp.taxonomy.ListTopicsOutput.items:type_name -> eolymp.taxonomy.Topic
	20, // 6: eolymp.taxonomy.TranslateTopicInput.translation:type_name -> eolymp.taxonomy.Topic.Translation
	18, // 7: eolymp.taxonomy.ListTranslationsInput.filters:type_name -> eolymp.taxonomy.ListTranslationsInput.Filter
	20, // 8: eolymp.taxonomy.ListTranslationsOutput.items:type_name -> eolymp.taxonomy.Topic.Translation
	21, // 9: eolymp.taxonomy.ListTopicsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	22, // 10: eolymp.taxonomy.ListTopicsInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	23, // 11: eolymp.taxonomy.ListTranslationsInput.Filter.locale:type_name -> eolymp.wellknown.ExpressionEnum
	1,  // 12: eolymp.taxonomy.TopicService.CreateTopic:input_type -> eolymp.taxonomy.CreateTopicInput
	3,  // 13: eolymp.taxonomy.TopicService.DeleteTopic:input_type -> eolymp.taxonomy.DeleteTopicInput
	5,  // 14: eolymp.taxonomy.TopicService.UpdateTopic:input_type -> eolymp.taxonomy.UpdateTopicInput
	7,  // 15: eolymp.taxonomy.TopicService.DescribeTopic:input_type -> eolymp.taxonomy.DescribeTopicInput
	9,  // 16: eolymp.taxonomy.TopicService.ListTopics:input_type -> eolymp.taxonomy.ListTopicsInput
	11, // 17: eolymp.taxonomy.TopicService.TranslateTopic:input_type -> eolymp.taxonomy.TranslateTopicInput
	13, // 18: eolymp.taxonomy.TopicService.DeleteTranslation:input_type -> eolymp.taxonomy.DeleteTranslationInput
	15, // 19: eolymp.taxonomy.TopicService.ListTranslations:input_type -> eolymp.taxonomy.ListTranslationsInput
	2,  // 20: eolymp.taxonomy.TopicService.CreateTopic:output_type -> eolymp.taxonomy.CreateTopicOutput
	4,  // 21: eolymp.taxonomy.TopicService.DeleteTopic:output_type -> eolymp.taxonomy.DeleteTopicOutput
	6,  // 22: eolymp.taxonomy.TopicService.UpdateTopic:output_type -> eolymp.taxonomy.UpdateTopicOutput
	8,  // 23: eolymp.taxonomy.TopicService.DescribeTopic:output_type -> eolymp.taxonomy.DescribeTopicOutput
	10, // 24: eolymp.taxonomy.TopicService.ListTopics:output_type -> eolymp.taxonomy.ListTopicsOutput
	12, // 25: eolymp.taxonomy.TopicService.TranslateTopic:output_type -> eolymp.taxonomy.TranslateTopicOutput
	14, // 26: eolymp.taxonomy.TopicService.DeleteTranslation:output_type -> eolymp.taxonomy.DeleteTranslationOutput
	16, // 27: eolymp.taxonomy.TopicService.ListTranslations:output_type -> eolymp.taxonomy.ListTranslationsOutput
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_eolymp_taxonomy_topic_service_proto_init() }
func file_eolymp_taxonomy_topic_service_proto_init() {
	if File_eolymp_taxonomy_topic_service_proto != nil {
		return
	}
	file_eolymp_taxonomy_topic_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_taxonomy_topic_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopicOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTopicOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopicOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTopicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTopicOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopicsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopicsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslateTopicInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslateTopicOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTranslationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTranslationOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTranslationsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTranslationsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopicsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_taxonomy_topic_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTranslationsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_taxonomy_topic_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_taxonomy_topic_service_proto_goTypes,
		DependencyIndexes: file_eolymp_taxonomy_topic_service_proto_depIdxs,
		EnumInfos:         file_eolymp_taxonomy_topic_service_proto_enumTypes,
		MessageInfos:      file_eolymp_taxonomy_topic_service_proto_msgTypes,
	}.Build()
	File_eolymp_taxonomy_topic_service_proto = out.File
	file_eolymp_taxonomy_topic_service_proto_rawDesc = nil
	file_eolymp_taxonomy_topic_service_proto_goTypes = nil
	file_eolymp_taxonomy_topic_service_proto_depIdxs = nil
}
