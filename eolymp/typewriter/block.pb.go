// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.2
// source: eolymp/typewriter/block.proto

package typewriter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block_Layout_Direction int32

const (
	Block_Layout_ROW    Block_Layout_Direction = 0
	Block_Layout_COLUMN Block_Layout_Direction = 1
)

// Enum value maps for Block_Layout_Direction.
var (
	Block_Layout_Direction_name = map[int32]string{
		0: "ROW",
		1: "COLUMN",
	}
	Block_Layout_Direction_value = map[string]int32{
		"ROW":    0,
		"COLUMN": 1,
	}
)

func (x Block_Layout_Direction) Enum() *Block_Layout_Direction {
	p := new(Block_Layout_Direction)
	*p = x
	return p
}

func (x Block_Layout_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_Layout_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_typewriter_block_proto_enumTypes[0].Descriptor()
}

func (Block_Layout_Direction) Type() protoreflect.EnumType {
	return &file_eolymp_typewriter_block_proto_enumTypes[0]
}

func (x Block_Layout_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_Layout_Direction.Descriptor instead.
func (Block_Layout_Direction) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 1, 0}
}

type Block_Layout_Alignment int32

const (
	Block_Layout_START  Block_Layout_Alignment = 0
	Block_Layout_CENTER Block_Layout_Alignment = 1
	Block_Layout_END    Block_Layout_Alignment = 2
)

// Enum value maps for Block_Layout_Alignment.
var (
	Block_Layout_Alignment_name = map[int32]string{
		0: "START",
		1: "CENTER",
		2: "END",
	}
	Block_Layout_Alignment_value = map[string]int32{
		"START":  0,
		"CENTER": 1,
		"END":    2,
	}
)

func (x Block_Layout_Alignment) Enum() *Block_Layout_Alignment {
	p := new(Block_Layout_Alignment)
	*p = x
	return p
}

func (x Block_Layout_Alignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_Layout_Alignment) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_typewriter_block_proto_enumTypes[1].Descriptor()
}

func (Block_Layout_Alignment) Type() protoreflect.EnumType {
	return &file_eolymp_typewriter_block_proto_enumTypes[1]
}

func (x Block_Layout_Alignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_Layout_Alignment.Descriptor instead.
func (Block_Layout_Alignment) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 1, 1}
}

type Block_List_Style int32

const (
	Block_List_UNORDERED Block_List_Style = 0
	Block_List_ORDERED   Block_List_Style = 1
)

// Enum value maps for Block_List_Style.
var (
	Block_List_Style_name = map[int32]string{
		0: "UNORDERED",
		1: "ORDERED",
	}
	Block_List_Style_value = map[string]int32{
		"UNORDERED": 0,
		"ORDERED":   1,
	}
)

func (x Block_List_Style) Enum() *Block_List_Style {
	p := new(Block_List_Style)
	*p = x
	return p
}

func (x Block_List_Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_List_Style) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_typewriter_block_proto_enumTypes[2].Descriptor()
}

func (Block_List_Style) Type() protoreflect.EnumType {
	return &file_eolymp_typewriter_block_proto_enumTypes[2]
}

func (x Block_List_Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_List_Style.Descriptor instead.
func (Block_List_Style) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 2, 0}
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*Block `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{0}
}

func (x *Container) GetChildren() []*Block {
	if x != nil {
		return x.Children
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Node:
	//	*Block_Paragraph_
	//	*Block_Layout_
	//	*Block_Code_
	//	*Block_Math_
	//	*Block_Image_
	//	*Block_Heading_
	//	*Block_List_
	//	*Block_Embed_
	//	*Block_Comment_
	Node isBlock_Node `protobuf_oneof:"node"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1}
}

func (m *Block) GetNode() isBlock_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (x *Block) GetParagraph() *Block_Paragraph {
	if x, ok := x.GetNode().(*Block_Paragraph_); ok {
		return x.Paragraph
	}
	return nil
}

func (x *Block) GetLayout() *Block_Layout {
	if x, ok := x.GetNode().(*Block_Layout_); ok {
		return x.Layout
	}
	return nil
}

func (x *Block) GetCode() *Block_Code {
	if x, ok := x.GetNode().(*Block_Code_); ok {
		return x.Code
	}
	return nil
}

func (x *Block) GetMath() *Block_Math {
	if x, ok := x.GetNode().(*Block_Math_); ok {
		return x.Math
	}
	return nil
}

func (x *Block) GetImage() *Block_Image {
	if x, ok := x.GetNode().(*Block_Image_); ok {
		return x.Image
	}
	return nil
}

func (x *Block) GetHeading() *Block_Heading {
	if x, ok := x.GetNode().(*Block_Heading_); ok {
		return x.Heading
	}
	return nil
}

func (x *Block) GetList() *Block_List {
	if x, ok := x.GetNode().(*Block_List_); ok {
		return x.List
	}
	return nil
}

func (x *Block) GetEmbed() *Block_Embed {
	if x, ok := x.GetNode().(*Block_Embed_); ok {
		return x.Embed
	}
	return nil
}

func (x *Block) GetComment() *Block_Comment {
	if x, ok := x.GetNode().(*Block_Comment_); ok {
		return x.Comment
	}
	return nil
}

type isBlock_Node interface {
	isBlock_Node()
}

type Block_Paragraph_ struct {
	Paragraph *Block_Paragraph `protobuf:"bytes,1,opt,name=paragraph,proto3,oneof"`
}

type Block_Layout_ struct {
	Layout *Block_Layout `protobuf:"bytes,2,opt,name=layout,proto3,oneof"`
}

type Block_Code_ struct {
	Code *Block_Code `protobuf:"bytes,3,opt,name=code,proto3,oneof"`
}

type Block_Math_ struct {
	Math *Block_Math `protobuf:"bytes,4,opt,name=math,proto3,oneof"`
}

type Block_Image_ struct {
	Image *Block_Image `protobuf:"bytes,5,opt,name=image,proto3,oneof"`
}

type Block_Heading_ struct {
	Heading *Block_Heading `protobuf:"bytes,6,opt,name=heading,proto3,oneof"`
}

type Block_List_ struct {
	List *Block_List `protobuf:"bytes,7,opt,name=list,proto3,oneof"`
}

type Block_Embed_ struct {
	Embed *Block_Embed `protobuf:"bytes,8,opt,name=embed,proto3,oneof"`
}

type Block_Comment_ struct {
	Comment *Block_Comment `protobuf:"bytes,1000,opt,name=comment,proto3,oneof"`
}

func (*Block_Paragraph_) isBlock_Node() {}

func (*Block_Layout_) isBlock_Node() {}

func (*Block_Code_) isBlock_Node() {}

func (*Block_Math_) isBlock_Node() {}

func (*Block_Image_) isBlock_Node() {}

func (*Block_Heading_) isBlock_Node() {}

func (*Block_List_) isBlock_Node() {}

func (*Block_Embed_) isBlock_Node() {}

func (*Block_Comment_) isBlock_Node() {}

type Block_Paragraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*Inline `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *Block_Paragraph) Reset() {
	*x = Block_Paragraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Paragraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Paragraph) ProtoMessage() {}

func (x *Block_Paragraph) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Paragraph.ProtoReflect.Descriptor instead.
func (*Block_Paragraph) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Block_Paragraph) GetChildren() []*Inline {
	if x != nil {
		return x.Children
	}
	return nil
}

type Block_Layout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction      Block_Layout_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=eolymp.typewriter.Block_Layout_Direction" json:"direction,omitempty"`
	AlignItems     Block_Layout_Alignment `protobuf:"varint,10,opt,name=align_items,json=alignItems,proto3,enum=eolymp.typewriter.Block_Layout_Alignment" json:"align_items,omitempty"`
	AlignContent   Block_Layout_Alignment `protobuf:"varint,11,opt,name=align_content,json=alignContent,proto3,enum=eolymp.typewriter.Block_Layout_Alignment" json:"align_content,omitempty"`
	JustifyItems   Block_Layout_Alignment `protobuf:"varint,12,opt,name=justify_items,json=justifyItems,proto3,enum=eolymp.typewriter.Block_Layout_Alignment" json:"justify_items,omitempty"`
	JustifyContent Block_Layout_Alignment `protobuf:"varint,13,opt,name=justify_content,json=justifyContent,proto3,enum=eolymp.typewriter.Block_Layout_Alignment" json:"justify_content,omitempty"`
	Gap            uint32                 `protobuf:"varint,20,opt,name=gap,proto3" json:"gap,omitempty"`
	Padding        []uint32               `protobuf:"varint,21,rep,packed,name=padding,proto3" json:"padding,omitempty"`
	Children       []*Container           `protobuf:"bytes,100,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *Block_Layout) Reset() {
	*x = Block_Layout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Layout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Layout) ProtoMessage() {}

func (x *Block_Layout) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Layout.ProtoReflect.Descriptor instead.
func (*Block_Layout) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Block_Layout) GetDirection() Block_Layout_Direction {
	if x != nil {
		return x.Direction
	}
	return Block_Layout_ROW
}

func (x *Block_Layout) GetAlignItems() Block_Layout_Alignment {
	if x != nil {
		return x.AlignItems
	}
	return Block_Layout_START
}

func (x *Block_Layout) GetAlignContent() Block_Layout_Alignment {
	if x != nil {
		return x.AlignContent
	}
	return Block_Layout_START
}

func (x *Block_Layout) GetJustifyItems() Block_Layout_Alignment {
	if x != nil {
		return x.JustifyItems
	}
	return Block_Layout_START
}

func (x *Block_Layout) GetJustifyContent() Block_Layout_Alignment {
	if x != nil {
		return x.JustifyContent
	}
	return Block_Layout_START
}

func (x *Block_Layout) GetGap() uint32 {
	if x != nil {
		return x.Gap
	}
	return 0
}

func (x *Block_Layout) GetPadding() []uint32 {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *Block_Layout) GetChildren() []*Container {
	if x != nil {
		return x.Children
	}
	return nil
}

type Block_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Style    Block_List_Style `protobuf:"varint,1,opt,name=style,proto3,enum=eolymp.typewriter.Block_List_Style" json:"style,omitempty"`
	Children []*Container     `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *Block_List) Reset() {
	*x = Block_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_List) ProtoMessage() {}

func (x *Block_List) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_List.ProtoReflect.Descriptor instead.
func (*Block_List) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Block_List) GetStyle() Block_List_Style {
	if x != nil {
		return x.Style
	}
	return Block_List_UNORDERED
}

func (x *Block_List) GetChildren() []*Container {
	if x != nil {
		return x.Children
	}
	return nil
}

type Block_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src      string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Alt      string `protobuf:"bytes,2,opt,name=alt,proto3" json:"alt,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Width    uint32 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height   uint32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Zoomable bool   `protobuf:"varint,6,opt,name=zoomable,proto3" json:"zoomable,omitempty"`
}

func (x *Block_Image) Reset() {
	*x = Block_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Image) ProtoMessage() {}

func (x *Block_Image) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Image.ProtoReflect.Descriptor instead.
func (*Block_Image) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Block_Image) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *Block_Image) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *Block_Image) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Block_Image) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Block_Image) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block_Image) GetZoomable() bool {
	if x != nil {
		return x.Zoomable
	}
	return false
}

type Block_Heading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level    uint32    `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Children []*Inline `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *Block_Heading) Reset() {
	*x = Block_Heading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Heading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Heading) ProtoMessage() {}

func (x *Block_Heading) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Heading.ProtoReflect.Descriptor instead.
func (*Block_Heading) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Block_Heading) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Block_Heading) GetChildren() []*Inline {
	if x != nil {
		return x.Children
	}
	return nil
}

type Block_Math struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Block_Math) Reset() {
	*x = Block_Math{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Math) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Math) ProtoMessage() {}

func (x *Block_Math) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Math.ProtoReflect.Descriptor instead.
func (*Block_Math) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 5}
}

func (x *Block_Math) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Block_Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang    string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Block_Code) Reset() {
	*x = Block_Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Code) ProtoMessage() {}

func (x *Block_Code) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Code.ProtoReflect.Descriptor instead.
func (*Block_Code) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 6}
}

func (x *Block_Code) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Block_Code) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Block_Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Block_Comment) Reset() {
	*x = Block_Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Comment) ProtoMessage() {}

func (x *Block_Comment) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Comment.ProtoReflect.Descriptor instead.
func (*Block_Comment) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 7}
}

func (x *Block_Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Block_Embed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string               `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Values []*Block_Embed_Value `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Block_Embed) Reset() {
	*x = Block_Embed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Embed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Embed) ProtoMessage() {}

func (x *Block_Embed) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Embed.ProtoReflect.Descriptor instead.
func (*Block_Embed) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 8}
}

func (x *Block_Embed) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Block_Embed) GetValues() []*Block_Embed_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type Block_Embed_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Block_Embed_Value) Reset() {
	*x = Block_Embed_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_typewriter_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Embed_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Embed_Value) ProtoMessage() {}

func (x *Block_Embed_Value) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_typewriter_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Embed_Value.ProtoReflect.Descriptor instead.
func (*Block_Embed_Value) Descriptor() ([]byte, []int) {
	return file_eolymp_typewriter_block_proto_rawDescGZIP(), []int{1, 8, 0}
}

func (x *Block_Embed_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Block_Embed_Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_eolymp_typewriter_block_proto protoreflect.FileDescriptor

var file_eolymp_typewriter_block_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xbc, 0x0e, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x42, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x39, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x33,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x61, 0x74, 0x68,
	0x48, 0x00, 0x52, 0x04, 0x6d, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x33,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x1a, 0xc6,
	0x04, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0b, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4e,
	0x0a, 0x0d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0c, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4e,
	0x0a, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0c, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x52,
	0x0a, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x67, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x38,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x20, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x10, 0x01, 0x22, 0x2b, 0x0a, 0x09, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x1a, 0xa0, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x23, 0x0a, 0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x4e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x8b, 0x01, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x7a, 0x6f, 0x6f, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x7a, 0x6f, 0x6f, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x56, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x1a, 0x20, 0x0a, 0x04, 0x4d, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x1a, 0x34, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x23, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x8c, 0x01,
	0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x31, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_typewriter_block_proto_rawDescOnce sync.Once
	file_eolymp_typewriter_block_proto_rawDescData = file_eolymp_typewriter_block_proto_rawDesc
)

func file_eolymp_typewriter_block_proto_rawDescGZIP() []byte {
	file_eolymp_typewriter_block_proto_rawDescOnce.Do(func() {
		file_eolymp_typewriter_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_typewriter_block_proto_rawDescData)
	})
	return file_eolymp_typewriter_block_proto_rawDescData
}

var file_eolymp_typewriter_block_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_eolymp_typewriter_block_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_eolymp_typewriter_block_proto_goTypes = []interface{}{
	(Block_Layout_Direction)(0), // 0: eolymp.typewriter.Block.Layout.Direction
	(Block_Layout_Alignment)(0), // 1: eolymp.typewriter.Block.Layout.Alignment
	(Block_List_Style)(0),       // 2: eolymp.typewriter.Block.List.Style
	(*Container)(nil),           // 3: eolymp.typewriter.Container
	(*Block)(nil),               // 4: eolymp.typewriter.Block
	(*Block_Paragraph)(nil),     // 5: eolymp.typewriter.Block.Paragraph
	(*Block_Layout)(nil),        // 6: eolymp.typewriter.Block.Layout
	(*Block_List)(nil),          // 7: eolymp.typewriter.Block.List
	(*Block_Image)(nil),         // 8: eolymp.typewriter.Block.Image
	(*Block_Heading)(nil),       // 9: eolymp.typewriter.Block.Heading
	(*Block_Math)(nil),          // 10: eolymp.typewriter.Block.Math
	(*Block_Code)(nil),          // 11: eolymp.typewriter.Block.Code
	(*Block_Comment)(nil),       // 12: eolymp.typewriter.Block.Comment
	(*Block_Embed)(nil),         // 13: eolymp.typewriter.Block.Embed
	(*Block_Embed_Value)(nil),   // 14: eolymp.typewriter.Block.Embed.Value
	(*Inline)(nil),              // 15: eolymp.typewriter.Inline
}
var file_eolymp_typewriter_block_proto_depIdxs = []int32{
	4,  // 0: eolymp.typewriter.Container.children:type_name -> eolymp.typewriter.Block
	5,  // 1: eolymp.typewriter.Block.paragraph:type_name -> eolymp.typewriter.Block.Paragraph
	6,  // 2: eolymp.typewriter.Block.layout:type_name -> eolymp.typewriter.Block.Layout
	11, // 3: eolymp.typewriter.Block.code:type_name -> eolymp.typewriter.Block.Code
	10, // 4: eolymp.typewriter.Block.math:type_name -> eolymp.typewriter.Block.Math
	8,  // 5: eolymp.typewriter.Block.image:type_name -> eolymp.typewriter.Block.Image
	9,  // 6: eolymp.typewriter.Block.heading:type_name -> eolymp.typewriter.Block.Heading
	7,  // 7: eolymp.typewriter.Block.list:type_name -> eolymp.typewriter.Block.List
	13, // 8: eolymp.typewriter.Block.embed:type_name -> eolymp.typewriter.Block.Embed
	12, // 9: eolymp.typewriter.Block.comment:type_name -> eolymp.typewriter.Block.Comment
	15, // 10: eolymp.typewriter.Block.Paragraph.children:type_name -> eolymp.typewriter.Inline
	0,  // 11: eolymp.typewriter.Block.Layout.direction:type_name -> eolymp.typewriter.Block.Layout.Direction
	1,  // 12: eolymp.typewriter.Block.Layout.align_items:type_name -> eolymp.typewriter.Block.Layout.Alignment
	1,  // 13: eolymp.typewriter.Block.Layout.align_content:type_name -> eolymp.typewriter.Block.Layout.Alignment
	1,  // 14: eolymp.typewriter.Block.Layout.justify_items:type_name -> eolymp.typewriter.Block.Layout.Alignment
	1,  // 15: eolymp.typewriter.Block.Layout.justify_content:type_name -> eolymp.typewriter.Block.Layout.Alignment
	3,  // 16: eolymp.typewriter.Block.Layout.children:type_name -> eolymp.typewriter.Container
	2,  // 17: eolymp.typewriter.Block.List.style:type_name -> eolymp.typewriter.Block.List.Style
	3,  // 18: eolymp.typewriter.Block.List.children:type_name -> eolymp.typewriter.Container
	15, // 19: eolymp.typewriter.Block.Heading.children:type_name -> eolymp.typewriter.Inline
	14, // 20: eolymp.typewriter.Block.Embed.values:type_name -> eolymp.typewriter.Block.Embed.Value
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_eolymp_typewriter_block_proto_init() }
func file_eolymp_typewriter_block_proto_init() {
	if File_eolymp_typewriter_block_proto != nil {
		return
	}
	file_eolymp_typewriter_inline_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_typewriter_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Paragraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Layout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Heading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Math); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Embed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_typewriter_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Embed_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eolymp_typewriter_block_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Block_Paragraph_)(nil),
		(*Block_Layout_)(nil),
		(*Block_Code_)(nil),
		(*Block_Math_)(nil),
		(*Block_Image_)(nil),
		(*Block_Heading_)(nil),
		(*Block_List_)(nil),
		(*Block_Embed_)(nil),
		(*Block_Comment_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_typewriter_block_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_typewriter_block_proto_goTypes,
		DependencyIndexes: file_eolymp_typewriter_block_proto_depIdxs,
		EnumInfos:         file_eolymp_typewriter_block_proto_enumTypes,
		MessageInfos:      file_eolymp_typewriter_block_proto_msgTypes,
	}.Build()
	File_eolymp_typewriter_block_proto = out.File
	file_eolymp_typewriter_block_proto_rawDesc = nil
	file_eolymp_typewriter_block_proto_goTypes = nil
	file_eolymp_typewriter_block_proto_depIdxs = nil
}
