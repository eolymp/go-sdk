// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.2
// source: eolymp/ranker/ranker.proto

package ranker

import (
	_ "github.com/eolymp/contracts/go/eolymp/annotations"
	wellknown "github.com/eolymp/contracts/go/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateScoreboardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scoreboard *Scoreboard `protobuf:"bytes,1,opt,name=scoreboard,proto3" json:"scoreboard,omitempty"`
}

func (x *CreateScoreboardInput) Reset() {
	*x = CreateScoreboardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScoreboardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScoreboardInput) ProtoMessage() {}

func (x *CreateScoreboardInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScoreboardInput.ProtoReflect.Descriptor instead.
func (*CreateScoreboardInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{0}
}

func (x *CreateScoreboardInput) GetScoreboard() *Scoreboard {
	if x != nil {
		return x.Scoreboard
	}
	return nil
}

type CreateScoreboardOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
}

func (x *CreateScoreboardOutput) Reset() {
	*x = CreateScoreboardOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScoreboardOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScoreboardOutput) ProtoMessage() {}

func (x *CreateScoreboardOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScoreboardOutput.ProtoReflect.Descriptor instead.
func (*CreateScoreboardOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{1}
}

func (x *CreateScoreboardOutput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

type UpdateScoreboardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string      `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
	Scoreboard   *Scoreboard `protobuf:"bytes,2,opt,name=scoreboard,proto3" json:"scoreboard,omitempty"`
}

func (x *UpdateScoreboardInput) Reset() {
	*x = UpdateScoreboardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScoreboardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScoreboardInput) ProtoMessage() {}

func (x *UpdateScoreboardInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScoreboardInput.ProtoReflect.Descriptor instead.
func (*UpdateScoreboardInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateScoreboardInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

func (x *UpdateScoreboardInput) GetScoreboard() *Scoreboard {
	if x != nil {
		return x.Scoreboard
	}
	return nil
}

type UpdateScoreboardOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateScoreboardOutput) Reset() {
	*x = UpdateScoreboardOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScoreboardOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScoreboardOutput) ProtoMessage() {}

func (x *UpdateScoreboardOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScoreboardOutput.ProtoReflect.Descriptor instead.
func (*UpdateScoreboardOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{3}
}

type RebuildScoreboardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
}

func (x *RebuildScoreboardInput) Reset() {
	*x = RebuildScoreboardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildScoreboardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildScoreboardInput) ProtoMessage() {}

func (x *RebuildScoreboardInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildScoreboardInput.ProtoReflect.Descriptor instead.
func (*RebuildScoreboardInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{4}
}

func (x *RebuildScoreboardInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

type RebuildScoreboardOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RebuildScoreboardOutput) Reset() {
	*x = RebuildScoreboardOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildScoreboardOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildScoreboardOutput) ProtoMessage() {}

func (x *RebuildScoreboardOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildScoreboardOutput.ProtoReflect.Descriptor instead.
func (*RebuildScoreboardOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{5}
}

type AssignContestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string              `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
	Contest      *Scoreboard_Contest `protobuf:"bytes,2,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *AssignContestInput) Reset() {
	*x = AssignContestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignContestInput) ProtoMessage() {}

func (x *AssignContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignContestInput.ProtoReflect.Descriptor instead.
func (*AssignContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{6}
}

func (x *AssignContestInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

func (x *AssignContestInput) GetContest() *Scoreboard_Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type AssignContestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignContestOutput) Reset() {
	*x = AssignContestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignContestOutput) ProtoMessage() {}

func (x *AssignContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignContestOutput.ProtoReflect.Descriptor instead.
func (*AssignContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{7}
}

type UnassignContestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
	ContestId    string `protobuf:"bytes,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
}

func (x *UnassignContestInput) Reset() {
	*x = UnassignContestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignContestInput) ProtoMessage() {}

func (x *UnassignContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignContestInput.ProtoReflect.Descriptor instead.
func (*UnassignContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{8}
}

func (x *UnassignContestInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

func (x *UnassignContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type UnassignContestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnassignContestOutput) Reset() {
	*x = UnassignContestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignContestOutput) ProtoMessage() {}

func (x *UnassignContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignContestOutput.ProtoReflect.Descriptor instead.
func (*UnassignContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{9}
}

type DeleteScoreboardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
}

func (x *DeleteScoreboardInput) Reset() {
	*x = DeleteScoreboardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScoreboardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScoreboardInput) ProtoMessage() {}

func (x *DeleteScoreboardInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScoreboardInput.ProtoReflect.Descriptor instead.
func (*DeleteScoreboardInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteScoreboardInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

type DeleteScoreboardOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteScoreboardOutput) Reset() {
	*x = DeleteScoreboardOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScoreboardOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScoreboardOutput) ProtoMessage() {}

func (x *DeleteScoreboardOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScoreboardOutput.ProtoReflect.Descriptor instead.
func (*DeleteScoreboardOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{11}
}

type LookupScoreboardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LookupScoreboardInput) Reset() {
	*x = LookupScoreboardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupScoreboardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupScoreboardInput) ProtoMessage() {}

func (x *LookupScoreboardInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupScoreboardInput.ProtoReflect.Descriptor instead.
func (*LookupScoreboardInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{12}
}

func (x *LookupScoreboardInput) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LookupScoreboardOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scoreboard *Scoreboard `protobuf:"bytes,1,opt,name=scoreboard,proto3" json:"scoreboard,omitempty"`
}

func (x *LookupScoreboardOutput) Reset() {
	*x = LookupScoreboardOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupScoreboardOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupScoreboardOutput) ProtoMessage() {}

func (x *LookupScoreboardOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupScoreboardOutput.ProtoReflect.Descriptor instead.
func (*LookupScoreboardOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{13}
}

func (x *LookupScoreboardOutput) GetScoreboard() *Scoreboard {
	if x != nil {
		return x.Scoreboard
	}
	return nil
}

type DescribeScoreboardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
}

func (x *DescribeScoreboardInput) Reset() {
	*x = DescribeScoreboardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeScoreboardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScoreboardInput) ProtoMessage() {}

func (x *DescribeScoreboardInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScoreboardInput.ProtoReflect.Descriptor instead.
func (*DescribeScoreboardInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeScoreboardInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

type DescribeScoreboardOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scoreboard *Scoreboard `protobuf:"bytes,1,opt,name=scoreboard,proto3" json:"scoreboard,omitempty"`
}

func (x *DescribeScoreboardOutput) Reset() {
	*x = DescribeScoreboardOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeScoreboardOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScoreboardOutput) ProtoMessage() {}

func (x *DescribeScoreboardOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScoreboardOutput.ProtoReflect.Descriptor instead.
func (*DescribeScoreboardOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeScoreboardOutput) GetScoreboard() *Scoreboard {
	if x != nil {
		return x.Scoreboard
	}
	return nil
}

type ListScoreboardsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  int32                        `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size    int32                        `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Filters *ListScoreboardsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListScoreboardsInput) Reset() {
	*x = ListScoreboardsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreboardsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreboardsInput) ProtoMessage() {}

func (x *ListScoreboardsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreboardsInput.ProtoReflect.Descriptor instead.
func (*ListScoreboardsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{16}
}

func (x *ListScoreboardsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListScoreboardsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListScoreboardsInput) GetFilters() *ListScoreboardsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListScoreboardsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Scoreboard `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListScoreboardsOutput) Reset() {
	*x = ListScoreboardsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreboardsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreboardsOutput) ProtoMessage() {}

func (x *ListScoreboardsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreboardsOutput.ProtoReflect.Descriptor instead.
func (*ListScoreboardsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{17}
}

func (x *ListScoreboardsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListScoreboardsOutput) GetItems() []*Scoreboard {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListScoreboardRowsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreboardId string `protobuf:"bytes,1,opt,name=scoreboard_id,json=scoreboardId,proto3" json:"scoreboard_id,omitempty"`
}

func (x *ListScoreboardRowsInput) Reset() {
	*x = ListScoreboardRowsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreboardRowsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreboardRowsInput) ProtoMessage() {}

func (x *ListScoreboardRowsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreboardRowsInput.ProtoReflect.Descriptor instead.
func (*ListScoreboardRowsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{18}
}

func (x *ListScoreboardRowsInput) GetScoreboardId() string {
	if x != nil {
		return x.ScoreboardId
	}
	return ""
}

type ListScoreboardRowsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Scoreboard_Row `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListScoreboardRowsOutput) Reset() {
	*x = ListScoreboardRowsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreboardRowsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreboardRowsOutput) ProtoMessage() {}

func (x *ListScoreboardRowsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreboardRowsOutput.ProtoReflect.Descriptor instead.
func (*ListScoreboardRowsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{19}
}

func (x *ListScoreboardRowsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListScoreboardRowsOutput) GetItems() []*Scoreboard_Row {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListScoreboardsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []*wellknown.ExpressionID `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *ListScoreboardsInput_Filter) Reset() {
	*x = ListScoreboardsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_ranker_ranker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScoreboardsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScoreboardsInput_Filter) ProtoMessage() {}

func (x *ListScoreboardsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_ranker_ranker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScoreboardsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListScoreboardsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_ranker_ranker_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ListScoreboardsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_eolymp_ranker_ranker_proto protoreflect.FileDescriptor

var file_eolymp_ranker_ranker_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x1a, 0x1d, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x52, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x3d, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3d, 0x0a, 0x16, 0x52, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x76, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x5a, 0x0a, 0x14, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x29, 0x0a,
	0x15, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x53, 0x0a, 0x16, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x3e, 0x0a,
	0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x55, 0x0a,
	0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a,
	0x38, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x32, 0xe0, 0x0e, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0xad, 0x01, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4c, 0x82,
	0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x3a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x62, 0x01, 0x2a, 0x12, 0xba, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x59, 0x82,
	0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x3a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x25, 0x1a, 0x23, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x25,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x61, 0x82,
	0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x3a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x22, 0x2b, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0xba, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x59, 0x82, 0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x3a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2,
	0x0a, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x2a, 0x23, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa3, 0x01,
	0x0a, 0x10, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x42, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x1f, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2d, 0x6c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x62, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0xcb, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x64, 0x82, 0xe3, 0x0a,
	0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x3a, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x72, 0x65, 0x61, 0x64, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31,
	0x12, 0x23, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x7d, 0x62, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x4b, 0x82, 0xe3, 0x0a, 0x1a, 0x8a, 0xe3, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x3a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x72, 0x65, 0x61, 0x64,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x13, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x62, 0x01, 0x2a, 0x12, 0xa9, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x6f, 0x77, 0x73, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x27, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x42, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x28, 0x2f, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2f, 0x7b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x6f, 0x77, 0x73, 0x62, 0x01, 0x2a, 0x12, 0xc7, 0x01, 0x0a, 0x0d, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x6f, 0x82, 0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x3a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2,
	0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x1a, 0x39, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xcd, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x6f, 0x82, 0xe3, 0x0a, 0x1b, 0x8a, 0xe3, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x3a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2,
	0x0a, 0x05, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x2a, 0x39, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x7b, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x72, 0x61, 0x6e,
	0x6b, 0x65, 0x72, 0x3b, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_eolymp_ranker_ranker_proto_rawDescOnce sync.Once
	file_eolymp_ranker_ranker_proto_rawDescData = file_eolymp_ranker_ranker_proto_rawDesc
)

func file_eolymp_ranker_ranker_proto_rawDescGZIP() []byte {
	file_eolymp_ranker_ranker_proto_rawDescOnce.Do(func() {
		file_eolymp_ranker_ranker_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_ranker_ranker_proto_rawDescData)
	})
	return file_eolymp_ranker_ranker_proto_rawDescData
}

var file_eolymp_ranker_ranker_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_eolymp_ranker_ranker_proto_goTypes = []interface{}{
	(*CreateScoreboardInput)(nil),       // 0: eolymp.ranker.CreateScoreboardInput
	(*CreateScoreboardOutput)(nil),      // 1: eolymp.ranker.CreateScoreboardOutput
	(*UpdateScoreboardInput)(nil),       // 2: eolymp.ranker.UpdateScoreboardInput
	(*UpdateScoreboardOutput)(nil),      // 3: eolymp.ranker.UpdateScoreboardOutput
	(*RebuildScoreboardInput)(nil),      // 4: eolymp.ranker.RebuildScoreboardInput
	(*RebuildScoreboardOutput)(nil),     // 5: eolymp.ranker.RebuildScoreboardOutput
	(*AssignContestInput)(nil),          // 6: eolymp.ranker.AssignContestInput
	(*AssignContestOutput)(nil),         // 7: eolymp.ranker.AssignContestOutput
	(*UnassignContestInput)(nil),        // 8: eolymp.ranker.UnassignContestInput
	(*UnassignContestOutput)(nil),       // 9: eolymp.ranker.UnassignContestOutput
	(*DeleteScoreboardInput)(nil),       // 10: eolymp.ranker.DeleteScoreboardInput
	(*DeleteScoreboardOutput)(nil),      // 11: eolymp.ranker.DeleteScoreboardOutput
	(*LookupScoreboardInput)(nil),       // 12: eolymp.ranker.LookupScoreboardInput
	(*LookupScoreboardOutput)(nil),      // 13: eolymp.ranker.LookupScoreboardOutput
	(*DescribeScoreboardInput)(nil),     // 14: eolymp.ranker.DescribeScoreboardInput
	(*DescribeScoreboardOutput)(nil),    // 15: eolymp.ranker.DescribeScoreboardOutput
	(*ListScoreboardsInput)(nil),        // 16: eolymp.ranker.ListScoreboardsInput
	(*ListScoreboardsOutput)(nil),       // 17: eolymp.ranker.ListScoreboardsOutput
	(*ListScoreboardRowsInput)(nil),     // 18: eolymp.ranker.ListScoreboardRowsInput
	(*ListScoreboardRowsOutput)(nil),    // 19: eolymp.ranker.ListScoreboardRowsOutput
	(*ListScoreboardsInput_Filter)(nil), // 20: eolymp.ranker.ListScoreboardsInput.Filter
	(*Scoreboard)(nil),                  // 21: eolymp.ranker.Scoreboard
	(*Scoreboard_Contest)(nil),          // 22: eolymp.ranker.Scoreboard.Contest
	(*Scoreboard_Row)(nil),              // 23: eolymp.ranker.Scoreboard.Row
	(*wellknown.ExpressionID)(nil),      // 24: eolymp.wellknown.ExpressionID
}
var file_eolymp_ranker_ranker_proto_depIdxs = []int32{
	21, // 0: eolymp.ranker.CreateScoreboardInput.scoreboard:type_name -> eolymp.ranker.Scoreboard
	21, // 1: eolymp.ranker.UpdateScoreboardInput.scoreboard:type_name -> eolymp.ranker.Scoreboard
	22, // 2: eolymp.ranker.AssignContestInput.contest:type_name -> eolymp.ranker.Scoreboard.Contest
	21, // 3: eolymp.ranker.LookupScoreboardOutput.scoreboard:type_name -> eolymp.ranker.Scoreboard
	21, // 4: eolymp.ranker.DescribeScoreboardOutput.scoreboard:type_name -> eolymp.ranker.Scoreboard
	20, // 5: eolymp.ranker.ListScoreboardsInput.filters:type_name -> eolymp.ranker.ListScoreboardsInput.Filter
	21, // 6: eolymp.ranker.ListScoreboardsOutput.items:type_name -> eolymp.ranker.Scoreboard
	23, // 7: eolymp.ranker.ListScoreboardRowsOutput.items:type_name -> eolymp.ranker.Scoreboard.Row
	24, // 8: eolymp.ranker.ListScoreboardsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	0,  // 9: eolymp.ranker.Ranker.CreateScoreboard:input_type -> eolymp.ranker.CreateScoreboardInput
	2,  // 10: eolymp.ranker.Ranker.UpdateScoreboard:input_type -> eolymp.ranker.UpdateScoreboardInput
	4,  // 11: eolymp.ranker.Ranker.RebuildScoreboard:input_type -> eolymp.ranker.RebuildScoreboardInput
	10, // 12: eolymp.ranker.Ranker.DeleteScoreboard:input_type -> eolymp.ranker.DeleteScoreboardInput
	12, // 13: eolymp.ranker.Ranker.LookupScoreboard:input_type -> eolymp.ranker.LookupScoreboardInput
	14, // 14: eolymp.ranker.Ranker.DescribeScoreboard:input_type -> eolymp.ranker.DescribeScoreboardInput
	16, // 15: eolymp.ranker.Ranker.ListScoreboards:input_type -> eolymp.ranker.ListScoreboardsInput
	18, // 16: eolymp.ranker.Ranker.ListScoreboardRows:input_type -> eolymp.ranker.ListScoreboardRowsInput
	6,  // 17: eolymp.ranker.Ranker.AssignContest:input_type -> eolymp.ranker.AssignContestInput
	8,  // 18: eolymp.ranker.Ranker.UnassignContest:input_type -> eolymp.ranker.UnassignContestInput
	1,  // 19: eolymp.ranker.Ranker.CreateScoreboard:output_type -> eolymp.ranker.CreateScoreboardOutput
	3,  // 20: eolymp.ranker.Ranker.UpdateScoreboard:output_type -> eolymp.ranker.UpdateScoreboardOutput
	5,  // 21: eolymp.ranker.Ranker.RebuildScoreboard:output_type -> eolymp.ranker.RebuildScoreboardOutput
	11, // 22: eolymp.ranker.Ranker.DeleteScoreboard:output_type -> eolymp.ranker.DeleteScoreboardOutput
	13, // 23: eolymp.ranker.Ranker.LookupScoreboard:output_type -> eolymp.ranker.LookupScoreboardOutput
	15, // 24: eolymp.ranker.Ranker.DescribeScoreboard:output_type -> eolymp.ranker.DescribeScoreboardOutput
	17, // 25: eolymp.ranker.Ranker.ListScoreboards:output_type -> eolymp.ranker.ListScoreboardsOutput
	19, // 26: eolymp.ranker.Ranker.ListScoreboardRows:output_type -> eolymp.ranker.ListScoreboardRowsOutput
	7,  // 27: eolymp.ranker.Ranker.AssignContest:output_type -> eolymp.ranker.AssignContestOutput
	9,  // 28: eolymp.ranker.Ranker.UnassignContest:output_type -> eolymp.ranker.UnassignContestOutput
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_eolymp_ranker_ranker_proto_init() }
func file_eolymp_ranker_ranker_proto_init() {
	if File_eolymp_ranker_ranker_proto != nil {
		return
	}
	file_eolymp_ranker_scoreboard_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_ranker_ranker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScoreboardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScoreboardOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScoreboardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScoreboardOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildScoreboardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildScoreboardOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignContestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignContestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignContestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignContestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScoreboardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScoreboardOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupScoreboardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupScoreboardOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeScoreboardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeScoreboardOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreboardsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreboardsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreboardRowsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreboardRowsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_ranker_ranker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScoreboardsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_ranker_ranker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_ranker_ranker_proto_goTypes,
		DependencyIndexes: file_eolymp_ranker_ranker_proto_depIdxs,
		MessageInfos:      file_eolymp_ranker_ranker_proto_msgTypes,
	}.Build()
	File_eolymp_ranker_ranker_proto = out.File
	file_eolymp_ranker_ranker_proto_rawDesc = nil
	file_eolymp_ranker_ranker_proto_goTypes = nil
	file_eolymp_ranker_ranker_proto_depIdxs = nil
}
