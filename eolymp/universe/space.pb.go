// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: eolymp/universe/space.proto

package universe

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Space_Type int32

const (
	Space_UNKNOWN_TYPE Space_Type = 0
	Space_OTHER        Space_Type = 1
	Space_CLASSROOM    Space_Type = 2
	Space_TEAMROOM     Space_Type = 3
	Space_COMPETITION  Space_Type = 4
)

// Enum value maps for Space_Type.
var (
	Space_Type_name = map[int32]string{
		0: "UNKNOWN_TYPE",
		1: "OTHER",
		2: "CLASSROOM",
		3: "TEAMROOM",
		4: "COMPETITION",
	}
	Space_Type_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"OTHER":        1,
		"CLASSROOM":    2,
		"TEAMROOM":     3,
		"COMPETITION":  4,
	}
)

func (x Space_Type) Enum() *Space_Type {
	p := new(Space_Type)
	*p = x
	return p
}

func (x Space_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Space_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_universe_space_proto_enumTypes[0].Descriptor()
}

func (Space_Type) Type() protoreflect.EnumType {
	return &file_eolymp_universe_space_proto_enumTypes[0]
}

func (x Space_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Space_Type.Descriptor instead.
func (Space_Type) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_universe_space_proto_rawDescGZIP(), []int{0, 0}
}

type Space_Visibility int32

const (
	Space_UNKNOWN_VISIBILITY Space_Visibility = 0
	Space_PUBLIC             Space_Visibility = 1
	Space_PRIVATE            Space_Visibility = 2
)

// Enum value maps for Space_Visibility.
var (
	Space_Visibility_name = map[int32]string{
		0: "UNKNOWN_VISIBILITY",
		1: "PUBLIC",
		2: "PRIVATE",
	}
	Space_Visibility_value = map[string]int32{
		"UNKNOWN_VISIBILITY": 0,
		"PUBLIC":             1,
		"PRIVATE":            2,
	}
)

func (x Space_Visibility) Enum() *Space_Visibility {
	p := new(Space_Visibility)
	*p = x
	return p
}

func (x Space_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Space_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_universe_space_proto_enumTypes[1].Descriptor()
}

func (Space_Visibility) Type() protoreflect.EnumType {
	return &file_eolymp_universe_space_proto_enumTypes[1]
}

func (x Space_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Space_Visibility.Descriptor instead.
func (Space_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_universe_space_proto_rawDescGZIP(), []int{0, 1}
}

type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                       // space unique identifier
	Key              string            `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                     // space key used to build URLs
	Url              string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                     // space key used to build URLs
	Name             string            `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`                                  // human friendly name
	Image            string            `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`                                // space logo image
	Type             Space_Type        `protobuf:"varint,12,opt,name=type,proto3,enum=eolymp.universe.Space_Type" json:"type,omitempty"` // space use type
	Plan             string            `protobuf:"bytes,13,opt,name=plan,proto3" json:"plan,omitempty"`                                  // plan defines billing plan for the space
	Visibility       Space_Visibility  `protobuf:"varint,14,opt,name=visibility,proto3,enum=eolymp.universe.Space_Visibility" json:"visibility,omitempty"`
	HomeUrl          string            `protobuf:"bytes,50,opt,name=home_url,json=homeUrl,proto3" json:"home_url,omitempty"`       // space home page URL
	IssuerUrl        string            `protobuf:"bytes,51,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url,omitempty"` // space issuer URL (used for issuing tokens)
	UserConfig       *UserConfig       `protobuf:"bytes,100,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	AppearanceConfig *AppearanceConfig `protobuf:"bytes,101,opt,name=appearance_config,json=appearanceConfig,proto3" json:"appearance_config,omitempty"`
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_universe_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_universe_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_eolymp_universe_space_proto_rawDescGZIP(), []int{0}
}

func (x *Space) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Space) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Space) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Space) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Space) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Space) GetType() Space_Type {
	if x != nil {
		return x.Type
	}
	return Space_UNKNOWN_TYPE
}

func (x *Space) GetPlan() string {
	if x != nil {
		return x.Plan
	}
	return ""
}

func (x *Space) GetVisibility() Space_Visibility {
	if x != nil {
		return x.Visibility
	}
	return Space_UNKNOWN_VISIBILITY
}

func (x *Space) GetHomeUrl() string {
	if x != nil {
		return x.HomeUrl
	}
	return ""
}

func (x *Space) GetIssuerUrl() string {
	if x != nil {
		return x.IssuerUrl
	}
	return ""
}

func (x *Space) GetUserConfig() *UserConfig {
	if x != nil {
		return x.UserConfig
	}
	return nil
}

func (x *Space) GetAppearanceConfig() *AppearanceConfig {
	if x != nil {
		return x.AppearanceConfig
	}
	return nil
}

type Space_Quota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemsPerSpace       uint32 `protobuf:"varint,1,opt,name=problems_per_space,json=problemsPerSpace,proto3" json:"problems_per_space,omitempty"`
	MembersPerSpace        uint32 `protobuf:"varint,2,opt,name=members_per_space,json=membersPerSpace,proto3" json:"members_per_space,omitempty"`
	ContestsPerSpace       uint32 `protobuf:"varint,3,opt,name=contests_per_space,json=contestsPerSpace,proto3" json:"contests_per_space,omitempty"`
	ActiveContestsPerSpace uint32 `protobuf:"varint,4,opt,name=active_contests_per_space,json=activeContestsPerSpace,proto3" json:"active_contests_per_space,omitempty"`
	ScoreboardsPerSpace    uint32 `protobuf:"varint,5,opt,name=scoreboards_per_space,json=scoreboardsPerSpace,proto3" json:"scoreboards_per_space,omitempty"`
	PermissionsPerSpace    uint32 `protobuf:"varint,6,opt,name=permissions_per_space,json=permissionsPerSpace,proto3" json:"permissions_per_space,omitempty"`
	AttributesPerSpace     uint32 `protobuf:"varint,7,opt,name=attributes_per_space,json=attributesPerSpace,proto3" json:"attributes_per_space,omitempty"`
	CoursesPerSpace        uint32 `protobuf:"varint,12,opt,name=courses_per_space,json=coursesPerSpace,proto3" json:"courses_per_space,omitempty"`
	ProblemsPerContest     uint32 `protobuf:"varint,10,opt,name=problems_per_contest,json=problemsPerContest,proto3" json:"problems_per_contest,omitempty"`
	ParticipantsPerContest uint32 `protobuf:"varint,11,opt,name=participants_per_contest,json=participantsPerContest,proto3" json:"participants_per_contest,omitempty"`
}

func (x *Space_Quota) Reset() {
	*x = Space_Quota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_universe_space_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space_Quota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space_Quota) ProtoMessage() {}

func (x *Space_Quota) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_universe_space_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space_Quota.ProtoReflect.Descriptor instead.
func (*Space_Quota) Descriptor() ([]byte, []int) {
	return file_eolymp_universe_space_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Space_Quota) GetProblemsPerSpace() uint32 {
	if x != nil {
		return x.ProblemsPerSpace
	}
	return 0
}

func (x *Space_Quota) GetMembersPerSpace() uint32 {
	if x != nil {
		return x.MembersPerSpace
	}
	return 0
}

func (x *Space_Quota) GetContestsPerSpace() uint32 {
	if x != nil {
		return x.ContestsPerSpace
	}
	return 0
}

func (x *Space_Quota) GetActiveContestsPerSpace() uint32 {
	if x != nil {
		return x.ActiveContestsPerSpace
	}
	return 0
}

func (x *Space_Quota) GetScoreboardsPerSpace() uint32 {
	if x != nil {
		return x.ScoreboardsPerSpace
	}
	return 0
}

func (x *Space_Quota) GetPermissionsPerSpace() uint32 {
	if x != nil {
		return x.PermissionsPerSpace
	}
	return 0
}

func (x *Space_Quota) GetAttributesPerSpace() uint32 {
	if x != nil {
		return x.AttributesPerSpace
	}
	return 0
}

func (x *Space_Quota) GetCoursesPerSpace() uint32 {
	if x != nil {
		return x.CoursesPerSpace
	}
	return 0
}

func (x *Space_Quota) GetProblemsPerContest() uint32 {
	if x != nil {
		return x.ProblemsPerContest
	}
	return 0
}

func (x *Space_Quota) GetParticipantsPerContest() uint32 {
	if x != nil {
		return x.ParticipantsPerContest
	}
	return 0
}

var File_eolymp_universe_space_proto protoreflect.FileDescriptor

var file_eolymp_universe_space_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x1a, 0x2d,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x08, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x75,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4e,
	0x0a, 0x11, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x65,
	0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x61, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xfc,
	0x03, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x16, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x50, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x51, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x52, 0x4f, 0x4f, 0x4d, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x41, 0x4d, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x50, 0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04,
	0x22, 0x3d, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49,
	0x4c, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3b, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_universe_space_proto_rawDescOnce sync.Once
	file_eolymp_universe_space_proto_rawDescData = file_eolymp_universe_space_proto_rawDesc
)

func file_eolymp_universe_space_proto_rawDescGZIP() []byte {
	file_eolymp_universe_space_proto_rawDescOnce.Do(func() {
		file_eolymp_universe_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_universe_space_proto_rawDescData)
	})
	return file_eolymp_universe_space_proto_rawDescData
}

var file_eolymp_universe_space_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_universe_space_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eolymp_universe_space_proto_goTypes = []interface{}{
	(Space_Type)(0),          // 0: eolymp.universe.Space.Type
	(Space_Visibility)(0),    // 1: eolymp.universe.Space.Visibility
	(*Space)(nil),            // 2: eolymp.universe.Space
	(*Space_Quota)(nil),      // 3: eolymp.universe.Space.Quota
	(*UserConfig)(nil),       // 4: eolymp.universe.UserConfig
	(*AppearanceConfig)(nil), // 5: eolymp.universe.AppearanceConfig
}
var file_eolymp_universe_space_proto_depIdxs = []int32{
	0, // 0: eolymp.universe.Space.type:type_name -> eolymp.universe.Space.Type
	1, // 1: eolymp.universe.Space.visibility:type_name -> eolymp.universe.Space.Visibility
	4, // 2: eolymp.universe.Space.user_config:type_name -> eolymp.universe.UserConfig
	5, // 3: eolymp.universe.Space.appearance_config:type_name -> eolymp.universe.AppearanceConfig
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_eolymp_universe_space_proto_init() }
func file_eolymp_universe_space_proto_init() {
	if File_eolymp_universe_space_proto != nil {
		return
	}
	file_eolymp_universe_space_appearance_config_proto_init()
	file_eolymp_universe_space_user_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_universe_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_universe_space_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space_Quota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_universe_space_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_universe_space_proto_goTypes,
		DependencyIndexes: file_eolymp_universe_space_proto_depIdxs,
		EnumInfos:         file_eolymp_universe_space_proto_enumTypes,
		MessageInfos:      file_eolymp_universe_space_proto_msgTypes,
	}.Build()
	File_eolymp_universe_space_proto = out.File
	file_eolymp_universe_space_proto_rawDesc = nil
	file_eolymp_universe_space_proto_goTypes = nil
	file_eolymp_universe_space_proto_depIdxs = nil
}
