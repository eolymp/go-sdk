// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/auth/certificate.proto

package auth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Certificate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // kid
	Use           string                 `protobuf:"bytes,2,opt,name=use,proto3" json:"use,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                                   // kty
	Algorithm     string                 `protobuf:"bytes,4,opt,name=algorithm,proto3" json:"algorithm,omitempty"`                         // alg
	RsaExponent   string                 `protobuf:"bytes,10,opt,name=rsa_exponent,json=rsaExponent,proto3" json:"rsa_exponent,omitempty"` // RSA: e (base64url encoded)
	RsaModulus    string                 `protobuf:"bytes,11,opt,name=rsa_modulus,json=rsaModulus,proto3" json:"rsa_modulus,omitempty"`    // RSA: n (base64url encoded)
	EcCurve       string                 `protobuf:"bytes,20,opt,name=ec_curve,json=ecCurve,proto3" json:"ec_curve,omitempty"`             // EC: curve
	EcX           string                 `protobuf:"bytes,21,opt,name=ec_x,json=ecX,proto3" json:"ec_x,omitempty"`                         // EC: x (base64url encoded)
	EcY           string                 `protobuf:"bytes,22,opt,name=ec_y,json=ecY,proto3" json:"ec_y,omitempty"`                         // EC: y (base64url encoded)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	mi := &file_eolymp_auth_certificate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_auth_certificate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_eolymp_auth_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *Certificate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Certificate) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *Certificate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Certificate) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Certificate) GetRsaExponent() string {
	if x != nil {
		return x.RsaExponent
	}
	return ""
}

func (x *Certificate) GetRsaModulus() string {
	if x != nil {
		return x.RsaModulus
	}
	return ""
}

func (x *Certificate) GetEcCurve() string {
	if x != nil {
		return x.EcCurve
	}
	return ""
}

func (x *Certificate) GetEcX() string {
	if x != nil {
		return x.EcX
	}
	return ""
}

func (x *Certificate) GetEcY() string {
	if x != nil {
		return x.EcY
	}
	return ""
}

var File_eolymp_auth_certificate_proto protoreflect.FileDescriptor

const file_eolymp_auth_certificate_proto_rawDesc = "" +
	"\n" +
	"\x1deolymp/auth/certificate.proto\x12\veolymp.auth\"\xe6\x01\n" +
	"\vCertificate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03use\x18\x02 \x01(\tR\x03use\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1c\n" +
	"\talgorithm\x18\x04 \x01(\tR\talgorithm\x12!\n" +
	"\frsa_exponent\x18\n" +
	" \x01(\tR\vrsaExponent\x12\x1f\n" +
	"\vrsa_modulus\x18\v \x01(\tR\n" +
	"rsaModulus\x12\x19\n" +
	"\bec_curve\x18\x14 \x01(\tR\aecCurve\x12\x11\n" +
	"\x04ec_x\x18\x15 \x01(\tR\x03ecX\x12\x11\n" +
	"\x04ec_y\x18\x16 \x01(\tR\x03ecYB+Z)github.com/eolymp/go-sdk/eolymp/auth;authb\x06proto3"

var (
	file_eolymp_auth_certificate_proto_rawDescOnce sync.Once
	file_eolymp_auth_certificate_proto_rawDescData []byte
)

func file_eolymp_auth_certificate_proto_rawDescGZIP() []byte {
	file_eolymp_auth_certificate_proto_rawDescOnce.Do(func() {
		file_eolymp_auth_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_auth_certificate_proto_rawDesc), len(file_eolymp_auth_certificate_proto_rawDesc)))
	})
	return file_eolymp_auth_certificate_proto_rawDescData
}

var file_eolymp_auth_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eolymp_auth_certificate_proto_goTypes = []any{
	(*Certificate)(nil), // 0: eolymp.auth.Certificate
}
var file_eolymp_auth_certificate_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_eolymp_auth_certificate_proto_init() }
func file_eolymp_auth_certificate_proto_init() {
	if File_eolymp_auth_certificate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_auth_certificate_proto_rawDesc), len(file_eolymp_auth_certificate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_auth_certificate_proto_goTypes,
		DependencyIndexes: file_eolymp_auth_certificate_proto_depIdxs,
		MessageInfos:      file_eolymp_auth_certificate_proto_msgTypes,
	}.Build()
	File_eolymp_auth_certificate_proto = out.File
	file_eolymp_auth_certificate_proto_goTypes = nil
	file_eolymp_auth_certificate_proto_depIdxs = nil
}
