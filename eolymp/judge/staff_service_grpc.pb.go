// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.4
// source: eolymp/judge/staff_service.proto

package judge

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	StaffService_CreateStaffMember_FullMethodName   = "/eolymp.judge.StaffService/CreateStaffMember"
	StaffService_UpdateStaffMember_FullMethodName   = "/eolymp.judge.StaffService/UpdateStaffMember"
	StaffService_DeleteStaffMember_FullMethodName   = "/eolymp.judge.StaffService/DeleteStaffMember"
	StaffService_DescribeStaffMember_FullMethodName = "/eolymp.judge.StaffService/DescribeStaffMember"
	StaffService_ListStaffMembers_FullMethodName    = "/eolymp.judge.StaffService/ListStaffMembers"
)

// StaffServiceClient is the client API for StaffService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StaffServiceClient interface {
	CreateStaffMember(ctx context.Context, in *CreateStaffMemberInput, opts ...grpc.CallOption) (*CreateStaffMemberOutput, error)
	UpdateStaffMember(ctx context.Context, in *UpdateStaffMemberInput, opts ...grpc.CallOption) (*UpdateStaffMemberOutput, error)
	DeleteStaffMember(ctx context.Context, in *DeleteStaffMemberInput, opts ...grpc.CallOption) (*DeleteStaffMemberOutput, error)
	DescribeStaffMember(ctx context.Context, in *DescribeStaffMemberInput, opts ...grpc.CallOption) (*DescribeStaffMemberOutput, error)
	ListStaffMembers(ctx context.Context, in *ListStaffMembersInput, opts ...grpc.CallOption) (*ListStaffMembersOutput, error)
}

type staffServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStaffServiceClient(cc grpc.ClientConnInterface) StaffServiceClient {
	return &staffServiceClient{cc}
}

func (c *staffServiceClient) CreateStaffMember(ctx context.Context, in *CreateStaffMemberInput, opts ...grpc.CallOption) (*CreateStaffMemberOutput, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateStaffMemberOutput)
	err := c.cc.Invoke(ctx, StaffService_CreateStaffMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffServiceClient) UpdateStaffMember(ctx context.Context, in *UpdateStaffMemberInput, opts ...grpc.CallOption) (*UpdateStaffMemberOutput, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateStaffMemberOutput)
	err := c.cc.Invoke(ctx, StaffService_UpdateStaffMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffServiceClient) DeleteStaffMember(ctx context.Context, in *DeleteStaffMemberInput, opts ...grpc.CallOption) (*DeleteStaffMemberOutput, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteStaffMemberOutput)
	err := c.cc.Invoke(ctx, StaffService_DeleteStaffMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffServiceClient) DescribeStaffMember(ctx context.Context, in *DescribeStaffMemberInput, opts ...grpc.CallOption) (*DescribeStaffMemberOutput, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DescribeStaffMemberOutput)
	err := c.cc.Invoke(ctx, StaffService_DescribeStaffMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffServiceClient) ListStaffMembers(ctx context.Context, in *ListStaffMembersInput, opts ...grpc.CallOption) (*ListStaffMembersOutput, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStaffMembersOutput)
	err := c.cc.Invoke(ctx, StaffService_ListStaffMembers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StaffServiceServer is the server API for StaffService service.
// All implementations should embed UnimplementedStaffServiceServer
// for forward compatibility.
type StaffServiceServer interface {
	CreateStaffMember(context.Context, *CreateStaffMemberInput) (*CreateStaffMemberOutput, error)
	UpdateStaffMember(context.Context, *UpdateStaffMemberInput) (*UpdateStaffMemberOutput, error)
	DeleteStaffMember(context.Context, *DeleteStaffMemberInput) (*DeleteStaffMemberOutput, error)
	DescribeStaffMember(context.Context, *DescribeStaffMemberInput) (*DescribeStaffMemberOutput, error)
	ListStaffMembers(context.Context, *ListStaffMembersInput) (*ListStaffMembersOutput, error)
}

// UnimplementedStaffServiceServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedStaffServiceServer struct{}

func (UnimplementedStaffServiceServer) CreateStaffMember(context.Context, *CreateStaffMemberInput) (*CreateStaffMemberOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStaffMember not implemented")
}
func (UnimplementedStaffServiceServer) UpdateStaffMember(context.Context, *UpdateStaffMemberInput) (*UpdateStaffMemberOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStaffMember not implemented")
}
func (UnimplementedStaffServiceServer) DeleteStaffMember(context.Context, *DeleteStaffMemberInput) (*DeleteStaffMemberOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStaffMember not implemented")
}
func (UnimplementedStaffServiceServer) DescribeStaffMember(context.Context, *DescribeStaffMemberInput) (*DescribeStaffMemberOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeStaffMember not implemented")
}
func (UnimplementedStaffServiceServer) ListStaffMembers(context.Context, *ListStaffMembersInput) (*ListStaffMembersOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStaffMembers not implemented")
}
func (UnimplementedStaffServiceServer) testEmbeddedByValue() {}

// UnsafeStaffServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StaffServiceServer will
// result in compilation errors.
type UnsafeStaffServiceServer interface {
	mustEmbedUnimplementedStaffServiceServer()
}

func RegisterStaffServiceServer(s grpc.ServiceRegistrar, srv StaffServiceServer) {
	// If the following call pancis, it indicates UnimplementedStaffServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&StaffService_ServiceDesc, srv)
}

func _StaffService_CreateStaffMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStaffMemberInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffServiceServer).CreateStaffMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaffService_CreateStaffMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffServiceServer).CreateStaffMember(ctx, req.(*CreateStaffMemberInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffService_UpdateStaffMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStaffMemberInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffServiceServer).UpdateStaffMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaffService_UpdateStaffMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffServiceServer).UpdateStaffMember(ctx, req.(*UpdateStaffMemberInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffService_DeleteStaffMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStaffMemberInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffServiceServer).DeleteStaffMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaffService_DeleteStaffMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffServiceServer).DeleteStaffMember(ctx, req.(*DeleteStaffMemberInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffService_DescribeStaffMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeStaffMemberInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffServiceServer).DescribeStaffMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaffService_DescribeStaffMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffServiceServer).DescribeStaffMember(ctx, req.(*DescribeStaffMemberInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffService_ListStaffMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStaffMembersInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffServiceServer).ListStaffMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaffService_ListStaffMembers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffServiceServer).ListStaffMembers(ctx, req.(*ListStaffMembersInput))
	}
	return interceptor(ctx, in, info, handler)
}

// StaffService_ServiceDesc is the grpc.ServiceDesc for StaffService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StaffService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eolymp.judge.StaffService",
	HandlerType: (*StaffServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStaffMember",
			Handler:    _StaffService_CreateStaffMember_Handler,
		},
		{
			MethodName: "UpdateStaffMember",
			Handler:    _StaffService_UpdateStaffMember_Handler,
		},
		{
			MethodName: "DeleteStaffMember",
			Handler:    _StaffService_DeleteStaffMember_Handler,
		},
		{
			MethodName: "DescribeStaffMember",
			Handler:    _StaffService_DescribeStaffMember_Handler,
		},
		{
			MethodName: "ListStaffMembers",
			Handler:    _StaffService_ListStaffMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eolymp/judge/staff_service.proto",
}
