// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v4.24.4
// source: eolymp/judge/announcement_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchAnnouncementsOutput_Event int32

const (
	WatchAnnouncementsOutput_UNKNOWN_EVENT WatchAnnouncementsOutput_Event = 0
	WatchAnnouncementsOutput_CREATED       WatchAnnouncementsOutput_Event = 1
	WatchAnnouncementsOutput_UPDATED       WatchAnnouncementsOutput_Event = 2
	WatchAnnouncementsOutput_DELETED       WatchAnnouncementsOutput_Event = 3
)

// Enum value maps for WatchAnnouncementsOutput_Event.
var (
	WatchAnnouncementsOutput_Event_name = map[int32]string{
		0: "UNKNOWN_EVENT",
		1: "CREATED",
		2: "UPDATED",
		3: "DELETED",
	}
	WatchAnnouncementsOutput_Event_value = map[string]int32{
		"UNKNOWN_EVENT": 0,
		"CREATED":       1,
		"UPDATED":       2,
		"DELETED":       3,
	}
)

func (x WatchAnnouncementsOutput_Event) Enum() *WatchAnnouncementsOutput_Event {
	p := new(WatchAnnouncementsOutput_Event)
	*p = x
	return p
}

func (x WatchAnnouncementsOutput_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchAnnouncementsOutput_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_announcement_service_proto_enumTypes[0].Descriptor()
}

func (WatchAnnouncementsOutput_Event) Type() protoreflect.EnumType {
	return &file_eolymp_judge_announcement_service_proto_enumTypes[0]
}

func (x WatchAnnouncementsOutput_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchAnnouncementsOutput_Event.Descriptor instead.
func (WatchAnnouncementsOutput_Event) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{17, 0}
}

type CreateAnnouncementInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Announcement  *Announcement          `protobuf:"bytes,2,opt,name=announcement,proto3" json:"announcement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAnnouncementInput) Reset() {
	*x = CreateAnnouncementInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnnouncementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnnouncementInput) ProtoMessage() {}

func (x *CreateAnnouncementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnnouncementInput.ProtoReflect.Descriptor instead.
func (*CreateAnnouncementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAnnouncementInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *CreateAnnouncementInput) GetAnnouncement() *Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

type CreateAnnouncementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAnnouncementOutput) Reset() {
	*x = CreateAnnouncementOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAnnouncementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnnouncementOutput) ProtoMessage() {}

func (x *CreateAnnouncementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnnouncementOutput.ProtoReflect.Descriptor instead.
func (*CreateAnnouncementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAnnouncementOutput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateAnnouncementInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContestId      string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	AnnouncementId string                 `protobuf:"bytes,2,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id,omitempty"`
	Announcement   *Announcement          `protobuf:"bytes,3,opt,name=announcement,proto3" json:"announcement,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateAnnouncementInput) Reset() {
	*x = UpdateAnnouncementInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnnouncementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnnouncementInput) ProtoMessage() {}

func (x *UpdateAnnouncementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnnouncementInput.ProtoReflect.Descriptor instead.
func (*UpdateAnnouncementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAnnouncementInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *UpdateAnnouncementInput) GetAnnouncementId() string {
	if x != nil {
		return x.AnnouncementId
	}
	return ""
}

func (x *UpdateAnnouncementInput) GetAnnouncement() *Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

type UpdateAnnouncementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAnnouncementOutput) Reset() {
	*x = UpdateAnnouncementOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnnouncementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnnouncementOutput) ProtoMessage() {}

func (x *UpdateAnnouncementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnnouncementOutput.ProtoReflect.Descriptor instead.
func (*UpdateAnnouncementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{3}
}

type DeleteAnnouncementInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContestId      string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	AnnouncementId string                 `protobuf:"bytes,2,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteAnnouncementInput) Reset() {
	*x = DeleteAnnouncementInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnnouncementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnnouncementInput) ProtoMessage() {}

func (x *DeleteAnnouncementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnnouncementInput.ProtoReflect.Descriptor instead.
func (*DeleteAnnouncementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAnnouncementInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DeleteAnnouncementInput) GetAnnouncementId() string {
	if x != nil {
		return x.AnnouncementId
	}
	return ""
}

type DeleteAnnouncementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAnnouncementOutput) Reset() {
	*x = DeleteAnnouncementOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAnnouncementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnnouncementOutput) ProtoMessage() {}

func (x *DeleteAnnouncementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnnouncementOutput.ProtoReflect.Descriptor instead.
func (*DeleteAnnouncementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{5}
}

type ReadAnnouncementInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContestId      string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	AnnouncementId string                 `protobuf:"bytes,2,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReadAnnouncementInput) Reset() {
	*x = ReadAnnouncementInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAnnouncementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAnnouncementInput) ProtoMessage() {}

func (x *ReadAnnouncementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAnnouncementInput.ProtoReflect.Descriptor instead.
func (*ReadAnnouncementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReadAnnouncementInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ReadAnnouncementInput) GetAnnouncementId() string {
	if x != nil {
		return x.AnnouncementId
	}
	return ""
}

type ReadAnnouncementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadAnnouncementOutput) Reset() {
	*x = ReadAnnouncementOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAnnouncementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAnnouncementOutput) ProtoMessage() {}

func (x *ReadAnnouncementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAnnouncementOutput.ProtoReflect.Descriptor instead.
func (*ReadAnnouncementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{7}
}

type DescribeAnnouncementInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContestId      string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	AnnouncementId string                 `protobuf:"bytes,2,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id,omitempty"`
	Extra          []Announcement_Extra   `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Announcement_Extra" json:"extra,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DescribeAnnouncementInput) Reset() {
	*x = DescribeAnnouncementInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeAnnouncementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAnnouncementInput) ProtoMessage() {}

func (x *DescribeAnnouncementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAnnouncementInput.ProtoReflect.Descriptor instead.
func (*DescribeAnnouncementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeAnnouncementInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeAnnouncementInput) GetAnnouncementId() string {
	if x != nil {
		return x.AnnouncementId
	}
	return ""
}

func (x *DescribeAnnouncementInput) GetExtra() []Announcement_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeAnnouncementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Announcement  *Announcement          `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeAnnouncementOutput) Reset() {
	*x = DescribeAnnouncementOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeAnnouncementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAnnouncementOutput) ProtoMessage() {}

func (x *DescribeAnnouncementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAnnouncementOutput.ProtoReflect.Descriptor instead.
func (*DescribeAnnouncementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeAnnouncementOutput) GetAnnouncement() *Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

type DescribeAnnouncementStatusInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContestId      string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	AnnouncementId string                 `protobuf:"bytes,2,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DescribeAnnouncementStatusInput) Reset() {
	*x = DescribeAnnouncementStatusInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeAnnouncementStatusInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAnnouncementStatusInput) ProtoMessage() {}

func (x *DescribeAnnouncementStatusInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAnnouncementStatusInput.ProtoReflect.Descriptor instead.
func (*DescribeAnnouncementStatusInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeAnnouncementStatusInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeAnnouncementStatusInput) GetAnnouncementId() string {
	if x != nil {
		return x.AnnouncementId
	}
	return ""
}

type DescribeAnnouncementStatusOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsRead        bool                   `protobuf:"varint,1,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeAnnouncementStatusOutput) Reset() {
	*x = DescribeAnnouncementStatusOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeAnnouncementStatusOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAnnouncementStatusOutput) ProtoMessage() {}

func (x *DescribeAnnouncementStatusOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAnnouncementStatusOutput.ProtoReflect.Descriptor instead.
func (*DescribeAnnouncementStatusOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeAnnouncementStatusOutput) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

type ListAnnouncementsInput struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	ContestId     string                         `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Offset        int32                          `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32                          `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Filters       *ListAnnouncementsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Extra         []Announcement_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Announcement_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnnouncementsInput) Reset() {
	*x = ListAnnouncementsInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnnouncementsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnouncementsInput) ProtoMessage() {}

func (x *ListAnnouncementsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnouncementsInput.ProtoReflect.Descriptor instead.
func (*ListAnnouncementsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListAnnouncementsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListAnnouncementsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListAnnouncementsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAnnouncementsInput) GetFilters() *ListAnnouncementsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListAnnouncementsInput) GetExtra() []Announcement_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListAnnouncementsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Announcement        `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnnouncementsOutput) Reset() {
	*x = ListAnnouncementsOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnnouncementsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnouncementsOutput) ProtoMessage() {}

func (x *ListAnnouncementsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnouncementsOutput.ProtoReflect.Descriptor instead.
func (*ListAnnouncementsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListAnnouncementsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAnnouncementsOutput) GetItems() []*Announcement {
	if x != nil {
		return x.Items
	}
	return nil
}

type WatchAnnouncementInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AnnouncementId string                 `protobuf:"bytes,1,opt,name=announcement_id,json=announcementId,proto3" json:"announcement_id,omitempty"`
	Extra          []Announcement_Extra   `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Announcement_Extra" json:"extra,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WatchAnnouncementInput) Reset() {
	*x = WatchAnnouncementInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAnnouncementInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAnnouncementInput) ProtoMessage() {}

func (x *WatchAnnouncementInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAnnouncementInput.ProtoReflect.Descriptor instead.
func (*WatchAnnouncementInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{14}
}

func (x *WatchAnnouncementInput) GetAnnouncementId() string {
	if x != nil {
		return x.AnnouncementId
	}
	return ""
}

func (x *WatchAnnouncementInput) GetExtra() []Announcement_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchAnnouncementOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Announcement  *Announcement          `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAnnouncementOutput) Reset() {
	*x = WatchAnnouncementOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAnnouncementOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAnnouncementOutput) ProtoMessage() {}

func (x *WatchAnnouncementOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAnnouncementOutput.ProtoReflect.Descriptor instead.
func (*WatchAnnouncementOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{15}
}

func (x *WatchAnnouncementOutput) GetAnnouncement() *Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

type WatchAnnouncementsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         []Announcement_Extra   `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Announcement_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAnnouncementsInput) Reset() {
	*x = WatchAnnouncementsInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAnnouncementsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAnnouncementsInput) ProtoMessage() {}

func (x *WatchAnnouncementsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAnnouncementsInput.ProtoReflect.Descriptor instead.
func (*WatchAnnouncementsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{16}
}

func (x *WatchAnnouncementsInput) GetExtra() []Announcement_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchAnnouncementsOutput struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Event         WatchAnnouncementsOutput_Event `protobuf:"varint,1,opt,name=event,proto3,enum=eolymp.judge.WatchAnnouncementsOutput_Event" json:"event,omitempty"`
	Announcement  *Announcement                  `protobuf:"bytes,2,opt,name=announcement,proto3" json:"announcement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAnnouncementsOutput) Reset() {
	*x = WatchAnnouncementsOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAnnouncementsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAnnouncementsOutput) ProtoMessage() {}

func (x *WatchAnnouncementsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAnnouncementsOutput.ProtoReflect.Descriptor instead.
func (*WatchAnnouncementsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{17}
}

func (x *WatchAnnouncementsOutput) GetEvent() WatchAnnouncementsOutput_Event {
	if x != nil {
		return x.Event
	}
	return WatchAnnouncementsOutput_UNKNOWN_EVENT
}

func (x *WatchAnnouncementsOutput) GetAnnouncement() *Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

type WatchAnnouncementSummaryInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAnnouncementSummaryInput) Reset() {
	*x = WatchAnnouncementSummaryInput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAnnouncementSummaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAnnouncementSummaryInput) ProtoMessage() {}

func (x *WatchAnnouncementSummaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAnnouncementSummaryInput.ProtoReflect.Descriptor instead.
func (*WatchAnnouncementSummaryInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{18}
}

type WatchAnnouncementSummaryOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnreadCount   uint32                 `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAnnouncementSummaryOutput) Reset() {
	*x = WatchAnnouncementSummaryOutput{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAnnouncementSummaryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAnnouncementSummaryOutput) ProtoMessage() {}

func (x *WatchAnnouncementSummaryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAnnouncementSummaryOutput.ProtoReflect.Descriptor instead.
func (*WatchAnnouncementSummaryOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{19}
}

func (x *WatchAnnouncementSummaryOutput) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

type ListAnnouncementsInput_Filter struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID   `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	IsRead        []*wellknown.ExpressionBool `protobuf:"bytes,2,rep,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnnouncementsInput_Filter) Reset() {
	*x = ListAnnouncementsInput_Filter{}
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnnouncementsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnnouncementsInput_Filter) ProtoMessage() {}

func (x *ListAnnouncementsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_announcement_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnnouncementsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListAnnouncementsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_announcement_service_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListAnnouncementsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListAnnouncementsInput_Filter) GetIsRead() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsRead
	}
	return nil
}

var File_eolymp_judge_announcement_service_proto protoreflect.FileDescriptor

var file_eolymp_judge_announcement_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x61, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x5f, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x9c,
	0x01, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x5c, 0x0a,
	0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x1f, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x22, 0xd8, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x73, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x22, 0x61,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x7a, 0x0a, 0x16, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x59, 0x0a,
	0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0xe1, 0x01, 0x0a,
	0x18, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a,
	0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x22, 0x1f, 0x0a, 0x1d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x43, 0x0a, 0x1e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xbe, 0x0d, 0x0a, 0x13, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa5,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x40, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80,
	0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xb7, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x52, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a,
	0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x20,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xb7, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x52, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb5, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x56, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x16, 0x8a,
	0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x25, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65,
	0x61, 0x64, 0x12, 0xbc, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x51,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82,
	0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12,
	0x20, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xd5, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x2e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x58, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a,
	0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x12, 0x27, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3f, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a,
	0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x7e, 0x0a,
	0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x1a, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x30, 0x01, 0x12, 0x81, 0x01,
	0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x1a, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x30,
	0x01, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2b,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1a, 0x82, 0xe3, 0x0a, 0x16, 0x8a,
	0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x3a, 0x72, 0x65, 0x61, 0x64, 0x30, 0x01, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x3b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_judge_announcement_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_announcement_service_proto_rawDescData = file_eolymp_judge_announcement_service_proto_rawDesc
)

func file_eolymp_judge_announcement_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_announcement_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_announcement_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_judge_announcement_service_proto_rawDescData)
	})
	return file_eolymp_judge_announcement_service_proto_rawDescData
}

var file_eolymp_judge_announcement_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_judge_announcement_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_eolymp_judge_announcement_service_proto_goTypes = []any{
	(WatchAnnouncementsOutput_Event)(0),      // 0: eolymp.judge.WatchAnnouncementsOutput.Event
	(*CreateAnnouncementInput)(nil),          // 1: eolymp.judge.CreateAnnouncementInput
	(*CreateAnnouncementOutput)(nil),         // 2: eolymp.judge.CreateAnnouncementOutput
	(*UpdateAnnouncementInput)(nil),          // 3: eolymp.judge.UpdateAnnouncementInput
	(*UpdateAnnouncementOutput)(nil),         // 4: eolymp.judge.UpdateAnnouncementOutput
	(*DeleteAnnouncementInput)(nil),          // 5: eolymp.judge.DeleteAnnouncementInput
	(*DeleteAnnouncementOutput)(nil),         // 6: eolymp.judge.DeleteAnnouncementOutput
	(*ReadAnnouncementInput)(nil),            // 7: eolymp.judge.ReadAnnouncementInput
	(*ReadAnnouncementOutput)(nil),           // 8: eolymp.judge.ReadAnnouncementOutput
	(*DescribeAnnouncementInput)(nil),        // 9: eolymp.judge.DescribeAnnouncementInput
	(*DescribeAnnouncementOutput)(nil),       // 10: eolymp.judge.DescribeAnnouncementOutput
	(*DescribeAnnouncementStatusInput)(nil),  // 11: eolymp.judge.DescribeAnnouncementStatusInput
	(*DescribeAnnouncementStatusOutput)(nil), // 12: eolymp.judge.DescribeAnnouncementStatusOutput
	(*ListAnnouncementsInput)(nil),           // 13: eolymp.judge.ListAnnouncementsInput
	(*ListAnnouncementsOutput)(nil),          // 14: eolymp.judge.ListAnnouncementsOutput
	(*WatchAnnouncementInput)(nil),           // 15: eolymp.judge.WatchAnnouncementInput
	(*WatchAnnouncementOutput)(nil),          // 16: eolymp.judge.WatchAnnouncementOutput
	(*WatchAnnouncementsInput)(nil),          // 17: eolymp.judge.WatchAnnouncementsInput
	(*WatchAnnouncementsOutput)(nil),         // 18: eolymp.judge.WatchAnnouncementsOutput
	(*WatchAnnouncementSummaryInput)(nil),    // 19: eolymp.judge.WatchAnnouncementSummaryInput
	(*WatchAnnouncementSummaryOutput)(nil),   // 20: eolymp.judge.WatchAnnouncementSummaryOutput
	(*ListAnnouncementsInput_Filter)(nil),    // 21: eolymp.judge.ListAnnouncementsInput.Filter
	(*Announcement)(nil),                     // 22: eolymp.judge.Announcement
	(Announcement_Extra)(0),                  // 23: eolymp.judge.Announcement.Extra
	(*wellknown.ExpressionID)(nil),           // 24: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionBool)(nil),         // 25: eolymp.wellknown.ExpressionBool
}
var file_eolymp_judge_announcement_service_proto_depIdxs = []int32{
	22, // 0: eolymp.judge.CreateAnnouncementInput.announcement:type_name -> eolymp.judge.Announcement
	22, // 1: eolymp.judge.UpdateAnnouncementInput.announcement:type_name -> eolymp.judge.Announcement
	23, // 2: eolymp.judge.DescribeAnnouncementInput.extra:type_name -> eolymp.judge.Announcement.Extra
	22, // 3: eolymp.judge.DescribeAnnouncementOutput.announcement:type_name -> eolymp.judge.Announcement
	21, // 4: eolymp.judge.ListAnnouncementsInput.filters:type_name -> eolymp.judge.ListAnnouncementsInput.Filter
	23, // 5: eolymp.judge.ListAnnouncementsInput.extra:type_name -> eolymp.judge.Announcement.Extra
	22, // 6: eolymp.judge.ListAnnouncementsOutput.items:type_name -> eolymp.judge.Announcement
	23, // 7: eolymp.judge.WatchAnnouncementInput.extra:type_name -> eolymp.judge.Announcement.Extra
	22, // 8: eolymp.judge.WatchAnnouncementOutput.announcement:type_name -> eolymp.judge.Announcement
	23, // 9: eolymp.judge.WatchAnnouncementsInput.extra:type_name -> eolymp.judge.Announcement.Extra
	0,  // 10: eolymp.judge.WatchAnnouncementsOutput.event:type_name -> eolymp.judge.WatchAnnouncementsOutput.Event
	22, // 11: eolymp.judge.WatchAnnouncementsOutput.announcement:type_name -> eolymp.judge.Announcement
	24, // 12: eolymp.judge.ListAnnouncementsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	25, // 13: eolymp.judge.ListAnnouncementsInput.Filter.is_read:type_name -> eolymp.wellknown.ExpressionBool
	1,  // 14: eolymp.judge.AnnouncementService.CreateAnnouncement:input_type -> eolymp.judge.CreateAnnouncementInput
	3,  // 15: eolymp.judge.AnnouncementService.UpdateAnnouncement:input_type -> eolymp.judge.UpdateAnnouncementInput
	5,  // 16: eolymp.judge.AnnouncementService.DeleteAnnouncement:input_type -> eolymp.judge.DeleteAnnouncementInput
	7,  // 17: eolymp.judge.AnnouncementService.ReadAnnouncement:input_type -> eolymp.judge.ReadAnnouncementInput
	9,  // 18: eolymp.judge.AnnouncementService.DescribeAnnouncement:input_type -> eolymp.judge.DescribeAnnouncementInput
	11, // 19: eolymp.judge.AnnouncementService.DescribeAnnouncementStatus:input_type -> eolymp.judge.DescribeAnnouncementStatusInput
	13, // 20: eolymp.judge.AnnouncementService.ListAnnouncements:input_type -> eolymp.judge.ListAnnouncementsInput
	15, // 21: eolymp.judge.AnnouncementService.WatchAnnouncement:input_type -> eolymp.judge.WatchAnnouncementInput
	17, // 22: eolymp.judge.AnnouncementService.WatchAnnouncements:input_type -> eolymp.judge.WatchAnnouncementsInput
	19, // 23: eolymp.judge.AnnouncementService.WatchAnnouncementSummary:input_type -> eolymp.judge.WatchAnnouncementSummaryInput
	2,  // 24: eolymp.judge.AnnouncementService.CreateAnnouncement:output_type -> eolymp.judge.CreateAnnouncementOutput
	4,  // 25: eolymp.judge.AnnouncementService.UpdateAnnouncement:output_type -> eolymp.judge.UpdateAnnouncementOutput
	6,  // 26: eolymp.judge.AnnouncementService.DeleteAnnouncement:output_type -> eolymp.judge.DeleteAnnouncementOutput
	8,  // 27: eolymp.judge.AnnouncementService.ReadAnnouncement:output_type -> eolymp.judge.ReadAnnouncementOutput
	10, // 28: eolymp.judge.AnnouncementService.DescribeAnnouncement:output_type -> eolymp.judge.DescribeAnnouncementOutput
	12, // 29: eolymp.judge.AnnouncementService.DescribeAnnouncementStatus:output_type -> eolymp.judge.DescribeAnnouncementStatusOutput
	14, // 30: eolymp.judge.AnnouncementService.ListAnnouncements:output_type -> eolymp.judge.ListAnnouncementsOutput
	16, // 31: eolymp.judge.AnnouncementService.WatchAnnouncement:output_type -> eolymp.judge.WatchAnnouncementOutput
	18, // 32: eolymp.judge.AnnouncementService.WatchAnnouncements:output_type -> eolymp.judge.WatchAnnouncementsOutput
	20, // 33: eolymp.judge.AnnouncementService.WatchAnnouncementSummary:output_type -> eolymp.judge.WatchAnnouncementSummaryOutput
	24, // [24:34] is the sub-list for method output_type
	14, // [14:24] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_eolymp_judge_announcement_service_proto_init() }
func file_eolymp_judge_announcement_service_proto_init() {
	if File_eolymp_judge_announcement_service_proto != nil {
		return
	}
	file_eolymp_judge_announcement_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_judge_announcement_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_announcement_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_announcement_service_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_announcement_service_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_announcement_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_announcement_service_proto = out.File
	file_eolymp_judge_announcement_service_proto_rawDesc = nil
	file_eolymp_judge_announcement_service_proto_goTypes = nil
	file_eolymp_judge_announcement_service_proto_depIdxs = nil
}
