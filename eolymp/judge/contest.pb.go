// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.2
// source: eolymp/judge/contest.proto

package judge

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Contest_Status int32

const (
	Contest_NO_STATUS Contest_Status = 0 // reserved, should not be used
	Contest_SCHEDULED Contest_Status = 1
	Contest_OPEN      Contest_Status = 2
	Contest_COMPLETE  Contest_Status = 3
)

// Enum value maps for Contest_Status.
var (
	Contest_Status_name = map[int32]string{
		0: "NO_STATUS",
		1: "SCHEDULED",
		2: "OPEN",
		3: "COMPLETE",
	}
	Contest_Status_value = map[string]int32{
		"NO_STATUS": 0,
		"SCHEDULED": 1,
		"OPEN":      2,
		"COMPLETE":  3,
	}
)

func (x Contest_Status) Enum() *Contest_Status {
	p := new(Contest_Status)
	*p = x
	return p
}

func (x Contest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_contest_proto_enumTypes[0].Descriptor()
}

func (Contest_Status) Type() protoreflect.EnumType {
	return &file_eolymp_judge_contest_proto_enumTypes[0]
}

func (x Contest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contest_Status.Descriptor instead.
func (Contest_Status) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_proto_rawDescGZIP(), []int{0, 0}
}

type Contest_Type int32

const (
	Contest_NO_TYPE   Contest_Type = 0 // reserved, should not be used
	Contest_CHALLENGE Contest_Type = 1
)

// Enum value maps for Contest_Type.
var (
	Contest_Type_name = map[int32]string{
		0: "NO_TYPE",
		1: "CHALLENGE",
	}
	Contest_Type_value = map[string]int32{
		"NO_TYPE":   0,
		"CHALLENGE": 1,
	}
)

func (x Contest_Type) Enum() *Contest_Type {
	p := new(Contest_Type)
	*p = x
	return p
}

func (x Contest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_contest_proto_enumTypes[1].Descriptor()
}

func (Contest_Type) Type() protoreflect.EnumType {
	return &file_eolymp_judge_contest_proto_enumTypes[1]
}

func (x Contest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contest_Type.Descriptor instead.
func (Contest_Type) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_proto_rawDescGZIP(), []int{0, 1}
}

type Contest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contest unique identifier, automatically allocated when contest is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Contest name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Contest type.
	Type Contest_Type `protobuf:"varint,3,opt,name=type,proto3,enum=eolymp.judge.Contest_Type" json:"type,omitempty"`
	// Contest starting time, after this time users will be able to see problems and make submissions.
	StartsAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`
	// Time until beginning of the contest
	StartsIn *duration.Duration `protobuf:"bytes,11,opt,name=starts_in,json=startsIn,proto3" json:"starts_in,omitempty"`
	// Contest ending time, after this time users submissions won't be counted to the score anymore.
	EndsAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=ends_at,json=endsAt,proto3" json:"ends_at,omitempty"`
	// Time until end of the contest
	EndsIn *duration.Duration `protobuf:"bytes,16,opt,name=ends_in,json=endsIn,proto3" json:"ends_in,omitempty"`
	// Contest duration in seconds. Users can start participating at any moment between startsAt and endsAt, but once started they
	// would have to finish in Duration amount of time. For example contest maybe will start at midnight and finish at
	// 23:59:59 the same day, but if duration is set to 4h it would mean users can participate at any point of the day
	// but will have only 4 hours to solve problems (4h or before 23:59:59 whichever happens first).
	Duration int32 `protobuf:"varint,12,opt,name=duration,proto3" json:"duration,omitempty"`
	// Contest status (see statuses above)
	Status Contest_Status `protobuf:"varint,20,opt,name=status,proto3,enum=eolymp.judge.Contest_Status" json:"status,omitempty"`
	// Public contest flag, public contests are listed to unauthorized users and allow any authorized user to participate.
	Public bool `protobuf:"varint,30,opt,name=public,proto3" json:"public,omitempty"`
	// Domain for contest, used to lookup for contest by domain name.
	Domain string `protobuf:"bytes,40,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *Contest) Reset() {
	*x = Contest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_contest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contest) ProtoMessage() {}

func (x *Contest) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contest.ProtoReflect.Descriptor instead.
func (*Contest) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_proto_rawDescGZIP(), []int{0}
}

func (x *Contest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contest) GetType() Contest_Type {
	if x != nil {
		return x.Type
	}
	return Contest_NO_TYPE
}

func (x *Contest) GetStartsAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *Contest) GetStartsIn() *duration.Duration {
	if x != nil {
		return x.StartsIn
	}
	return nil
}

func (x *Contest) GetEndsAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndsAt
	}
	return nil
}

func (x *Contest) GetEndsIn() *duration.Duration {
	if x != nil {
		return x.EndsIn
	}
	return nil
}

func (x *Contest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Contest) GetStatus() Contest_Status {
	if x != nil {
		return x.Status
	}
	return Contest_NO_STATUS
}

func (x *Contest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Contest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

var File_eolymp_judge_contest_proto protoreflect.FileDescriptor

var file_eolymp_judge_contest_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x04, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x73, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x69,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x49, 0x6e, 0x12, 0x33, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41,
	0x74, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65,
	0x6e, 0x64, 0x73, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x3e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3b, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_judge_contest_proto_rawDescOnce sync.Once
	file_eolymp_judge_contest_proto_rawDescData = file_eolymp_judge_contest_proto_rawDesc
)

func file_eolymp_judge_contest_proto_rawDescGZIP() []byte {
	file_eolymp_judge_contest_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_contest_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_judge_contest_proto_rawDescData)
	})
	return file_eolymp_judge_contest_proto_rawDescData
}

var file_eolymp_judge_contest_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_judge_contest_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eolymp_judge_contest_proto_goTypes = []interface{}{
	(Contest_Status)(0),         // 0: eolymp.judge.Contest.Status
	(Contest_Type)(0),           // 1: eolymp.judge.Contest.Type
	(*Contest)(nil),             // 2: eolymp.judge.Contest
	(*timestamp.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*duration.Duration)(nil),   // 4: google.protobuf.Duration
}
var file_eolymp_judge_contest_proto_depIdxs = []int32{
	1, // 0: eolymp.judge.Contest.type:type_name -> eolymp.judge.Contest.Type
	3, // 1: eolymp.judge.Contest.starts_at:type_name -> google.protobuf.Timestamp
	4, // 2: eolymp.judge.Contest.starts_in:type_name -> google.protobuf.Duration
	3, // 3: eolymp.judge.Contest.ends_at:type_name -> google.protobuf.Timestamp
	4, // 4: eolymp.judge.Contest.ends_in:type_name -> google.protobuf.Duration
	0, // 5: eolymp.judge.Contest.status:type_name -> eolymp.judge.Contest.Status
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_eolymp_judge_contest_proto_init() }
func file_eolymp_judge_contest_proto_init() {
	if File_eolymp_judge_contest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eolymp_judge_contest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_judge_contest_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_judge_contest_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_contest_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_contest_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_contest_proto_msgTypes,
	}.Build()
	File_eolymp_judge_contest_proto = out.File
	file_eolymp_judge_contest_proto_rawDesc = nil
	file_eolymp_judge_contest_proto_goTypes = nil
	file_eolymp_judge_contest_proto_depIdxs = nil
}
