// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/judge/contest_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CopyContestInput_Scope int32

const (
	CopyContestInput_ALL           CopyContestInput_Scope = 0
	CopyContestInput_CONFIGURATION CopyContestInput_Scope = 1 // scoreboard, appearance, environment etc
	CopyContestInput_PROBLEMS      CopyContestInput_Scope = 2 // problems
	CopyContestInput_PARTICIPANTS  CopyContestInput_Scope = 3 // participants (without results)
	CopyContestInput_PERMISSIONS   CopyContestInput_Scope = 4 // permissions
)

// Enum value maps for CopyContestInput_Scope.
var (
	CopyContestInput_Scope_name = map[int32]string{
		0: "ALL",
		1: "CONFIGURATION",
		2: "PROBLEMS",
		3: "PARTICIPANTS",
		4: "PERMISSIONS",
	}
	CopyContestInput_Scope_value = map[string]int32{
		"ALL":           0,
		"CONFIGURATION": 1,
		"PROBLEMS":      2,
		"PARTICIPANTS":  3,
		"PERMISSIONS":   4,
	}
)

func (x CopyContestInput_Scope) Enum() *CopyContestInput_Scope {
	p := new(CopyContestInput_Scope)
	*p = x
	return p
}

func (x CopyContestInput_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CopyContestInput_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_contest_service_proto_enumTypes[0].Descriptor()
}

func (CopyContestInput_Scope) Type() protoreflect.EnumType {
	return &file_eolymp_judge_contest_service_proto_enumTypes[0]
}

func (x CopyContestInput_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CopyContestInput_Scope.Descriptor instead.
func (CopyContestInput_Scope) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{7, 0}
}

type ContestChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Before        *Contest               `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *Contest               `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContestChangedEvent) Reset() {
	*x = ContestChangedEvent{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContestChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestChangedEvent) ProtoMessage() {}

func (x *ContestChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestChangedEvent.ProtoReflect.Descriptor instead.
func (*ContestChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{0}
}

func (x *ContestChangedEvent) GetBefore() *Contest {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ContestChangedEvent) GetAfter() *Contest {
	if x != nil {
		return x.After
	}
	return nil
}

type CreateContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contest       *Contest               `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContestInput) Reset() {
	*x = CreateContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestInput) ProtoMessage() {}

func (x *CreateContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestInput.ProtoReflect.Descriptor instead.
func (*CreateContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateContestInput) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type CreateContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContestOutput) Reset() {
	*x = CreateContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestOutput) ProtoMessage() {}

func (x *CreateContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestOutput.ProtoReflect.Descriptor instead.
func (*CreateContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateContestOutput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type DeleteContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContestInput) Reset() {
	*x = DeleteContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContestInput) ProtoMessage() {}

func (x *DeleteContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContestInput.ProtoReflect.Descriptor instead.
func (*DeleteContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type DeleteContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContestOutput) Reset() {
	*x = DeleteContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContestOutput) ProtoMessage() {}

func (x *DeleteContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContestOutput.ProtoReflect.Descriptor instead.
func (*DeleteContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{4}
}

type UpdateContestInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// specify list of fields to update, if empty all fields are updated
	Patch         []Contest_Patch_Field `protobuf:"varint,3,rep,packed,name=patch,proto3,enum=eolymp.judge.Contest_Patch_Field" json:"patch,omitempty"`
	ContestId     string                `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Contest       *Contest              `protobuf:"bytes,2,opt,name=contest,proto3" json:"contest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestInput) Reset() {
	*x = UpdateContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestInput) ProtoMessage() {}

func (x *UpdateContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestInput.ProtoReflect.Descriptor instead.
func (*UpdateContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateContestInput) GetPatch() []Contest_Patch_Field {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *UpdateContestInput) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type UpdateContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestOutput) Reset() {
	*x = UpdateContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestOutput) ProtoMessage() {}

func (x *UpdateContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestOutput.ProtoReflect.Descriptor instead.
func (*UpdateContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{6}
}

type CopyContestInput struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	ContestId      string                   `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	CopyScope      []CopyContestInput_Scope `protobuf:"varint,2,rep,packed,name=copy_scope,json=copyScope,proto3,enum=eolymp.judge.CopyContestInput_Scope" json:"copy_scope,omitempty"`
	CopyName       string                   `protobuf:"bytes,3,opt,name=copy_name,json=copyName,proto3" json:"copy_name,omitempty"`
	CopyVisibility Contest_Visibility       `protobuf:"varint,4,opt,name=copy_visibility,json=copyVisibility,proto3,enum=eolymp.judge.Contest_Visibility" json:"copy_visibility,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CopyContestInput) Reset() {
	*x = CopyContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyContestInput) ProtoMessage() {}

func (x *CopyContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyContestInput.ProtoReflect.Descriptor instead.
func (*CopyContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{7}
}

func (x *CopyContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *CopyContestInput) GetCopyScope() []CopyContestInput_Scope {
	if x != nil {
		return x.CopyScope
	}
	return nil
}

func (x *CopyContestInput) GetCopyName() string {
	if x != nil {
		return x.CopyName
	}
	return ""
}

func (x *CopyContestInput) GetCopyVisibility() Contest_Visibility {
	if x != nil {
		return x.CopyVisibility
	}
	return Contest_VISIBILITY_UNKNOWN
}

type CopyContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CopyContestId string                 `protobuf:"bytes,1,opt,name=copy_contest_id,json=copyContestId,proto3" json:"copy_contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyContestOutput) Reset() {
	*x = CopyContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyContestOutput) ProtoMessage() {}

func (x *CopyContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyContestOutput.ProtoReflect.Descriptor instead.
func (*CopyContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{8}
}

func (x *CopyContestOutput) GetCopyContestId() string {
	if x != nil {
		return x.CopyContestId
	}
	return ""
}

type DescribeContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Extra         []Contest_Extra_Field  `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Contest_Extra_Field" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeContestInput) Reset() {
	*x = DescribeContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeContestInput) ProtoMessage() {}

func (x *DescribeContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeContestInput.ProtoReflect.Descriptor instead.
func (*DescribeContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeContestInput) GetExtra() []Contest_Extra_Field {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contest       *Contest               `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeContestOutput) Reset() {
	*x = DescribeContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeContestOutput) ProtoMessage() {}

func (x *DescribeContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeContestOutput.ProtoReflect.Descriptor instead.
func (*DescribeContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeContestOutput) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type ListContestsInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Search        string                    `protobuf:"bytes,20,opt,name=search,proto3" json:"search,omitempty"`
	Filters       *ListContestsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Extra         []Contest_Extra_Field     `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Contest_Extra_Field" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsInput) Reset() {
	*x = ListContestsInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsInput) ProtoMessage() {}

func (x *ListContestsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsInput.ProtoReflect.Descriptor instead.
func (*ListContestsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListContestsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListContestsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListContestsInput) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListContestsInput) GetFilters() *ListContestsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListContestsInput) GetExtra() []Contest_Extra_Field {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListContestsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Contest             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsOutput) Reset() {
	*x = ListContestsOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsOutput) ProtoMessage() {}

func (x *ListContestsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsOutput.ProtoReflect.Descriptor instead.
func (*ListContestsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListContestsOutput) GetItems() []*Contest {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListContestsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type OpenContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenContestInput) Reset() {
	*x = OpenContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenContestInput) ProtoMessage() {}

func (x *OpenContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenContestInput.ProtoReflect.Descriptor instead.
func (*OpenContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{13}
}

func (x *OpenContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type OpenContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenContestOutput) Reset() {
	*x = OpenContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenContestOutput) ProtoMessage() {}

func (x *OpenContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenContestOutput.ProtoReflect.Descriptor instead.
func (*OpenContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{14}
}

type CloseContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseContestInput) Reset() {
	*x = CloseContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseContestInput) ProtoMessage() {}

func (x *CloseContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseContestInput.ProtoReflect.Descriptor instead.
func (*CloseContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{15}
}

func (x *CloseContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type CloseContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseContestOutput) Reset() {
	*x = CloseContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseContestOutput) ProtoMessage() {}

func (x *CloseContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseContestOutput.ProtoReflect.Descriptor instead.
func (*CloseContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{16}
}

type SuspendContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuspendContestInput) Reset() {
	*x = SuspendContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendContestInput) ProtoMessage() {}

func (x *SuspendContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendContestInput.ProtoReflect.Descriptor instead.
func (*SuspendContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{17}
}

func (x *SuspendContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type SuspendContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuspendContestOutput) Reset() {
	*x = SuspendContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuspendContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendContestOutput) ProtoMessage() {}

func (x *SuspendContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendContestOutput.ProtoReflect.Descriptor instead.
func (*SuspendContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{18}
}

type FreezeContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeContestInput) Reset() {
	*x = FreezeContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeContestInput) ProtoMessage() {}

func (x *FreezeContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeContestInput.ProtoReflect.Descriptor instead.
func (*FreezeContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{19}
}

func (x *FreezeContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type FreezeContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeContestOutput) Reset() {
	*x = FreezeContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeContestOutput) ProtoMessage() {}

func (x *FreezeContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeContestOutput.ProtoReflect.Descriptor instead.
func (*FreezeContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{20}
}

type FinalizeContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeContestInput) Reset() {
	*x = FinalizeContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeContestInput) ProtoMessage() {}

func (x *FinalizeContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeContestInput.ProtoReflect.Descriptor instead.
func (*FinalizeContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{21}
}

func (x *FinalizeContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type FinalizeContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeContestOutput) Reset() {
	*x = FinalizeContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeContestOutput) ProtoMessage() {}

func (x *FinalizeContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeContestOutput.ProtoReflect.Descriptor instead.
func (*FinalizeContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{22}
}

type ResumeContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeContestInput) Reset() {
	*x = ResumeContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeContestInput) ProtoMessage() {}

func (x *ResumeContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeContestInput.ProtoReflect.Descriptor instead.
func (*ResumeContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{23}
}

func (x *ResumeContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type ResumeContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeContestOutput) Reset() {
	*x = ResumeContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeContestOutput) ProtoMessage() {}

func (x *ResumeContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeContestOutput.ProtoReflect.Descriptor instead.
func (*ResumeContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{24}
}

type AnalyzeContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeContestInput) Reset() {
	*x = AnalyzeContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeContestInput) ProtoMessage() {}

func (x *AnalyzeContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeContestInput.ProtoReflect.Descriptor instead.
func (*AnalyzeContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{25}
}

func (x *AnalyzeContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type AnalyzeContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeContestOutput) Reset() {
	*x = AnalyzeContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeContestOutput) ProtoMessage() {}

func (x *AnalyzeContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeContestOutput.ProtoReflect.Descriptor instead.
func (*AnalyzeContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{26}
}

type WatchContestInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Extra         []Contest_Extra_Field  `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Contest_Extra_Field" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchContestInput) Reset() {
	*x = WatchContestInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchContestInput) ProtoMessage() {}

func (x *WatchContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchContestInput.ProtoReflect.Descriptor instead.
func (*WatchContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{27}
}

func (x *WatchContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchContestInput) GetExtra() []Contest_Extra_Field {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchContestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contest       *Contest               `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchContestOutput) Reset() {
	*x = WatchContestOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchContestOutput) ProtoMessage() {}

func (x *WatchContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchContestOutput.ProtoReflect.Descriptor instead.
func (*WatchContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{28}
}

func (x *WatchContestOutput) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type ListActivitiesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Offset        int32                  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32                  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActivitiesInput) Reset() {
	*x = ListActivitiesInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActivitiesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitiesInput) ProtoMessage() {}

func (x *ListActivitiesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitiesInput.ProtoReflect.Descriptor instead.
func (*ListActivitiesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListActivitiesInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListActivitiesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListActivitiesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListActivitiesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Activity            `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActivitiesOutput) Reset() {
	*x = ListActivitiesOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActivitiesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivitiesOutput) ProtoMessage() {}

func (x *ListActivitiesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivitiesOutput.ProtoReflect.Descriptor instead.
func (*ListActivitiesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListActivitiesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListActivitiesOutput) GetItems() []*Activity {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeContestUsageInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeriodStart   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeContestUsageInput) Reset() {
	*x = DescribeContestUsageInput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeContestUsageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeContestUsageInput) ProtoMessage() {}

func (x *DescribeContestUsageInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeContestUsageInput.ProtoReflect.Descriptor instead.
func (*DescribeContestUsageInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{31}
}

func (x *DescribeContestUsageInput) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *DescribeContestUsageInput) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

type DescribeContestUsageOutput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalContests   uint32                 `protobuf:"varint,1,opt,name=total_contests,json=totalContests,proto3" json:"total_contests,omitempty"`
	ActiveContests  uint32                 `protobuf:"varint,2,opt,name=active_contests,json=activeContests,proto3" json:"active_contests,omitempty"`
	MonthlyContests uint32                 `protobuf:"varint,3,opt,name=monthly_contests,json=monthlyContests,proto3" json:"monthly_contests,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DescribeContestUsageOutput) Reset() {
	*x = DescribeContestUsageOutput{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeContestUsageOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeContestUsageOutput) ProtoMessage() {}

func (x *DescribeContestUsageOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeContestUsageOutput.ProtoReflect.Descriptor instead.
func (*DescribeContestUsageOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{32}
}

func (x *DescribeContestUsageOutput) GetTotalContests() uint32 {
	if x != nil {
		return x.TotalContests
	}
	return 0
}

func (x *DescribeContestUsageOutput) GetActiveContests() uint32 {
	if x != nil {
		return x.ActiveContests
	}
	return 0
}

func (x *DescribeContestUsageOutput) GetMonthlyContests() uint32 {
	if x != nil {
		return x.MonthlyContests
	}
	return 0
}

type ListContestsInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Name          []*wellknown.ExpressionString    `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	StartsAt      []*wellknown.ExpressionTimestamp `protobuf:"bytes,4,rep,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`
	EndsAt        []*wellknown.ExpressionTimestamp `protobuf:"bytes,5,rep,name=ends_at,json=endsAt,proto3" json:"ends_at,omitempty"`
	Public        []*wellknown.ExpressionBool      `protobuf:"bytes,6,rep,name=public,proto3" json:"public,omitempty"`         // deprecated, same as visibility=PUBLIC
	Visibility    []*wellknown.ExpressionEnum      `protobuf:"bytes,7,rep,name=visibility,proto3" json:"visibility,omitempty"` // PUBLIC, UNLISTED, PRIVATE
	Format        []*wellknown.ExpressionEnum      `protobuf:"bytes,8,rep,name=format,proto3" json:"format,omitempty"`         // IOI, ICPC
	Status        []*wellknown.ExpressionEnum      `protobuf:"bytes,10,rep,name=status,proto3" json:"status,omitempty"`        // SCHEDULED, OPEN, ACTIVE, COMPLETE, UPSOLVE
	Featured      []*wellknown.ExpressionBool      `protobuf:"bytes,11,rep,name=featured,proto3" json:"featured,omitempty"`
	Year          []*wellknown.ExpressionInt       `protobuf:"bytes,100,rep,name=year,proto3" json:"year,omitempty"`
	Scale         []*wellknown.ExpressionEnum      `protobuf:"bytes,101,rep,name=scale,proto3" json:"scale,omitempty"`
	Series        []*wellknown.ExpressionEnum      `protobuf:"bytes,102,rep,name=series,proto3" json:"series,omitempty"`
	Difficulty    []*wellknown.ExpressionInt       `protobuf:"bytes,103,rep,name=difficulty,proto3" json:"difficulty,omitempty"` // 1 to 5
	Country       []*wellknown.ExpressionEnum      `protobuf:"bytes,104,rep,name=country,proto3" json:"country,omitempty"`
	Region        []*wellknown.ExpressionEnum      `protobuf:"bytes,105,rep,name=region,proto3" json:"region,omitempty"`
	City          []*wellknown.ExpressionString    `protobuf:"bytes,106,rep,name=city,proto3" json:"city,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsInput_Filter) Reset() {
	*x = ListContestsInput_Filter{}
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsInput_Filter) ProtoMessage() {}

func (x *ListContestsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_contest_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListContestsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_contest_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListContestsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListContestsInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListContestsInput_Filter) GetStartsAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.StartsAt
	}
	return nil
}

func (x *ListContestsInput_Filter) GetEndsAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.EndsAt
	}
	return nil
}

func (x *ListContestsInput_Filter) GetPublic() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *ListContestsInput_Filter) GetVisibility() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Visibility
	}
	return nil
}

func (x *ListContestsInput_Filter) GetFormat() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *ListContestsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListContestsInput_Filter) GetFeatured() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Featured
	}
	return nil
}

func (x *ListContestsInput_Filter) GetYear() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *ListContestsInput_Filter) GetScale() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Scale
	}
	return nil
}

func (x *ListContestsInput_Filter) GetSeries() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *ListContestsInput_Filter) GetDifficulty() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *ListContestsInput_Filter) GetCountry() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *ListContestsInput_Filter) GetRegion() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *ListContestsInput_Filter) GetCity() []*wellknown.ExpressionString {
	if x != nil {
		return x.City
	}
	return nil
}

var File_eolymp_judge_contest_service_proto protoreflect.FileDescriptor

const file_eolymp_judge_contest_service_proto_rawDesc = "" +
	"\n" +
	"\"eolymp/judge/contest_service.proto\x12\feolymp.judge\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/namespace.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1beolymp/judge/activity.proto\x1a\x1aeolymp/judge/contest.proto\x1a!eolymp/wellknown/expression.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"q\n" +
	"\x13ContestChangedEvent\x12-\n" +
	"\x06before\x18\x01 \x01(\v2\x15.eolymp.judge.ContestR\x06before\x12+\n" +
	"\x05after\x18\x02 \x01(\v2\x15.eolymp.judge.ContestR\x05after\"E\n" +
	"\x12CreateContestInput\x12/\n" +
	"\acontest\x18\x01 \x01(\v2\x15.eolymp.judge.ContestR\acontest\"4\n" +
	"\x13CreateContestOutput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"3\n" +
	"\x12DeleteContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x15\n" +
	"\x13DeleteContestOutput\"\x9d\x01\n" +
	"\x12UpdateContestInput\x127\n" +
	"\x05patch\x18\x03 \x03(\x0e2!.eolymp.judge.Contest.Patch.FieldR\x05patch\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12/\n" +
	"\acontest\x18\x02 \x01(\v2\x15.eolymp.judge.ContestR\acontest\"\x15\n" +
	"\x13UpdateContestOutput\"\xb4\x02\n" +
	"\x10CopyContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12C\n" +
	"\n" +
	"copy_scope\x18\x02 \x03(\x0e2$.eolymp.judge.CopyContestInput.ScopeR\tcopyScope\x12\x1b\n" +
	"\tcopy_name\x18\x03 \x01(\tR\bcopyName\x12I\n" +
	"\x0fcopy_visibility\x18\x04 \x01(\x0e2 .eolymp.judge.Contest.VisibilityR\x0ecopyVisibility\"T\n" +
	"\x05Scope\x12\a\n" +
	"\x03ALL\x10\x00\x12\x11\n" +
	"\rCONFIGURATION\x10\x01\x12\f\n" +
	"\bPROBLEMS\x10\x02\x12\x10\n" +
	"\fPARTICIPANTS\x10\x03\x12\x0f\n" +
	"\vPERMISSIONS\x10\x04\";\n" +
	"\x11CopyContestOutput\x12&\n" +
	"\x0fcopy_contest_id\x18\x01 \x01(\tR\rcopyContestId\"o\n" +
	"\x14DescribeContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x128\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2!.eolymp.judge.Contest.Extra.FieldR\x05extra\"H\n" +
	"\x15DescribeContestOutput\x12/\n" +
	"\acontest\x18\x01 \x01(\v2\x15.eolymp.judge.ContestR\acontest\"\x8e\t\n" +
	"\x11ListContestsInput\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12\x16\n" +
	"\x06search\x18\x14 \x01(\tR\x06search\x12@\n" +
	"\afilters\x18( \x01(\v2&.eolymp.judge.ListContestsInput.FilterR\afilters\x128\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2!.eolymp.judge.Contest.Extra.FieldR\x05extra\x1a\xb8\a\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\x01 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x126\n" +
	"\x04name\x18\x03 \x03(\v2\".eolymp.wellknown.ExpressionStringR\x04name\x12B\n" +
	"\tstarts_at\x18\x04 \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\bstartsAt\x12>\n" +
	"\aends_at\x18\x05 \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\x06endsAt\x128\n" +
	"\x06public\x18\x06 \x03(\v2 .eolymp.wellknown.ExpressionBoolR\x06public\x12@\n" +
	"\n" +
	"visibility\x18\a \x03(\v2 .eolymp.wellknown.ExpressionEnumR\n" +
	"visibility\x128\n" +
	"\x06format\x18\b \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06format\x128\n" +
	"\x06status\x18\n" +
	" \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\x12<\n" +
	"\bfeatured\x18\v \x03(\v2 .eolymp.wellknown.ExpressionBoolR\bfeatured\x123\n" +
	"\x04year\x18d \x03(\v2\x1f.eolymp.wellknown.ExpressionIntR\x04year\x126\n" +
	"\x05scale\x18e \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x05scale\x128\n" +
	"\x06series\x18f \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06series\x12?\n" +
	"\n" +
	"difficulty\x18g \x03(\v2\x1f.eolymp.wellknown.ExpressionIntR\n" +
	"difficulty\x12:\n" +
	"\acountry\x18h \x03(\v2 .eolymp.wellknown.ExpressionEnumR\acountry\x128\n" +
	"\x06region\x18i \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06region\x126\n" +
	"\x04city\x18j \x03(\v2\".eolymp.wellknown.ExpressionStringR\x04city\"W\n" +
	"\x12ListContestsOutput\x12+\n" +
	"\x05items\x18\x01 \x03(\v2\x15.eolymp.judge.ContestR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"1\n" +
	"\x10OpenContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x13\n" +
	"\x11OpenContestOutput\"2\n" +
	"\x11CloseContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x14\n" +
	"\x12CloseContestOutput\"4\n" +
	"\x13SuspendContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x16\n" +
	"\x14SuspendContestOutput\"3\n" +
	"\x12FreezeContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x15\n" +
	"\x13FreezeContestOutput\"5\n" +
	"\x14FinalizeContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x17\n" +
	"\x15FinalizeContestOutput\"3\n" +
	"\x12ResumeContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x15\n" +
	"\x13ResumeContestOutput\"4\n" +
	"\x13AnalyzeContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"\x16\n" +
	"\x14AnalyzeContestOutput\"l\n" +
	"\x11WatchContestInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x128\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2!.eolymp.judge.Contest.Extra.FieldR\x05extra\"E\n" +
	"\x12WatchContestOutput\x12/\n" +
	"\acontest\x18\x01 \x01(\v2\x15.eolymp.judge.ContestR\acontest\"`\n" +
	"\x13ListActivitiesInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\"Z\n" +
	"\x14ListActivitiesOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12,\n" +
	"\x05items\x18\x02 \x03(\v2\x16.eolymp.judge.ActivityR\x05items\"\x95\x01\n" +
	"\x19DescribeContestUsageInput\x12=\n" +
	"\fperiod_start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vperiodStart\x129\n" +
	"\n" +
	"period_end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tperiodEnd\"\x97\x01\n" +
	"\x1aDescribeContestUsageOutput\x12%\n" +
	"\x0etotal_contests\x18\x01 \x01(\rR\rtotalContests\x12'\n" +
	"\x0factive_contests\x18\x02 \x01(\rR\x0eactiveContests\x12)\n" +
	"\x10monthly_contests\x18\x03 \x01(\rR\x0fmonthlyContests2\xf3\x13\n" +
	"\x0eContestService\x12\x91\x01\n" +
	"\rCreateContest\x12 .eolymp.judge.CreateContestInput\x1a!.eolymp.judge.CreateContestOutput\";\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"ף=\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\v\"\t/contests\x12\x9e\x01\n" +
	"\rDeleteContest\x12 .eolymp.judge.DeleteContestInput\x1a!.eolymp.judge.DeleteContestOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x18*\x16/contests/{contest_id}\x12\x9e\x01\n" +
	"\rUpdateContest\x12 .eolymp.judge.UpdateContestInput\x1a!.eolymp.judge.UpdateContestOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x18\x1a\x16/contests/{contest_id}\x12\x9d\x01\n" +
	"\vCopyContest\x12\x1e.eolymp.judge.CopyContestInput\x1a\x1f.eolymp.judge.CopyContestOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1d\"\x1b/contests/{contest_id}/copy\x12\x89\x01\n" +
	"\x0fDescribeContest\x12\".eolymp.judge.DescribeContestInput\x1a#.eolymp.judge.DescribeContestOutput\"-\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xd3\xe4\x93\x02\x18\x12\x16/contests/{contest_id}\x12s\n" +
	"\fListContests\x12\x1f.eolymp.judge.ListContestsInput\x1a .eolymp.judge.ListContestsOutput\" \xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\n" +
	"\x82\xd3\xe4\x93\x02\v\x12\t/contests\x12\x9d\x01\n" +
	"\vOpenContest\x12\x1e.eolymp.judge.OpenContestInput\x1a\x1f.eolymp.judge.OpenContestOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1d\"\x1b/contests/{contest_id}/open\x12\xa1\x01\n" +
	"\fCloseContest\x12\x1f.eolymp.judge.CloseContestInput\x1a .eolymp.judge.CloseContestOutput\"N\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1e\"\x1c/contests/{contest_id}/close\x12\xa9\x01\n" +
	"\x0eSuspendContest\x12!.eolymp.judge.SuspendContestInput\x1a\".eolymp.judge.SuspendContestOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02 \"\x1e/contests/{contest_id}/suspend\x12\xa5\x01\n" +
	"\rFreezeContest\x12 .eolymp.judge.FreezeContestInput\x1a!.eolymp.judge.FreezeContestOutput\"O\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1f\"\x1d/contests/{contest_id}/freeze\x12\xad\x01\n" +
	"\x0fFinalizeContest\x12\".eolymp.judge.FinalizeContestInput\x1a#.eolymp.judge.FinalizeContestOutput\"Q\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02!\"\x1f/contests/{contest_id}/finalize\x12\xa5\x01\n" +
	"\rResumeContest\x12 .eolymp.judge.ResumeContestInput\x1a!.eolymp.judge.ResumeContestOutput\"O\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1f\"\x1d/contests/{contest_id}/resume\x12\xa9\x01\n" +
	"\x0eAnalyzeContest\x12!.eolymp.judge.AnalyzeContestInput\x1a\".eolymp.judge.AnalyzeContestOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02 \"\x1e/contests/{contest_id}/analyze\x12o\n" +
	"\fWatchContest\x12\x1f.eolymp.judge.WatchContestInput\x1a .eolymp.judge.WatchContestOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01\x12\xab\x01\n" +
	"\x0eListActivities\x12!.eolymp.judge.ListActivitiesInput\x1a\".eolymp.judge.ListActivitiesOutput\"R\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02#\x12!/contests/{contest_id}/activities\x12\x91\x01\n" +
	"\x14DescribeContestUsage\x12'.eolymp.judge.DescribeContestUsageInput\x1a(.eolymp.judge.DescribeContestUsageOutput\"&\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xd3\xe4\x93\x02\x11\x12\x0f/usage/contests\x1a\x1b\x82\xf0\xf0\xe4\x01\x15eolymp.universe.SpaceB-Z+github.com/eolymp/go-sdk/eolymp/judge;judgeb\x06proto3"

var (
	file_eolymp_judge_contest_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_contest_service_proto_rawDescData []byte
)

func file_eolymp_judge_contest_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_contest_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_contest_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_judge_contest_service_proto_rawDesc), len(file_eolymp_judge_contest_service_proto_rawDesc)))
	})
	return file_eolymp_judge_contest_service_proto_rawDescData
}

var file_eolymp_judge_contest_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_judge_contest_service_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_eolymp_judge_contest_service_proto_goTypes = []any{
	(CopyContestInput_Scope)(0),           // 0: eolymp.judge.CopyContestInput.Scope
	(*ContestChangedEvent)(nil),           // 1: eolymp.judge.ContestChangedEvent
	(*CreateContestInput)(nil),            // 2: eolymp.judge.CreateContestInput
	(*CreateContestOutput)(nil),           // 3: eolymp.judge.CreateContestOutput
	(*DeleteContestInput)(nil),            // 4: eolymp.judge.DeleteContestInput
	(*DeleteContestOutput)(nil),           // 5: eolymp.judge.DeleteContestOutput
	(*UpdateContestInput)(nil),            // 6: eolymp.judge.UpdateContestInput
	(*UpdateContestOutput)(nil),           // 7: eolymp.judge.UpdateContestOutput
	(*CopyContestInput)(nil),              // 8: eolymp.judge.CopyContestInput
	(*CopyContestOutput)(nil),             // 9: eolymp.judge.CopyContestOutput
	(*DescribeContestInput)(nil),          // 10: eolymp.judge.DescribeContestInput
	(*DescribeContestOutput)(nil),         // 11: eolymp.judge.DescribeContestOutput
	(*ListContestsInput)(nil),             // 12: eolymp.judge.ListContestsInput
	(*ListContestsOutput)(nil),            // 13: eolymp.judge.ListContestsOutput
	(*OpenContestInput)(nil),              // 14: eolymp.judge.OpenContestInput
	(*OpenContestOutput)(nil),             // 15: eolymp.judge.OpenContestOutput
	(*CloseContestInput)(nil),             // 16: eolymp.judge.CloseContestInput
	(*CloseContestOutput)(nil),            // 17: eolymp.judge.CloseContestOutput
	(*SuspendContestInput)(nil),           // 18: eolymp.judge.SuspendContestInput
	(*SuspendContestOutput)(nil),          // 19: eolymp.judge.SuspendContestOutput
	(*FreezeContestInput)(nil),            // 20: eolymp.judge.FreezeContestInput
	(*FreezeContestOutput)(nil),           // 21: eolymp.judge.FreezeContestOutput
	(*FinalizeContestInput)(nil),          // 22: eolymp.judge.FinalizeContestInput
	(*FinalizeContestOutput)(nil),         // 23: eolymp.judge.FinalizeContestOutput
	(*ResumeContestInput)(nil),            // 24: eolymp.judge.ResumeContestInput
	(*ResumeContestOutput)(nil),           // 25: eolymp.judge.ResumeContestOutput
	(*AnalyzeContestInput)(nil),           // 26: eolymp.judge.AnalyzeContestInput
	(*AnalyzeContestOutput)(nil),          // 27: eolymp.judge.AnalyzeContestOutput
	(*WatchContestInput)(nil),             // 28: eolymp.judge.WatchContestInput
	(*WatchContestOutput)(nil),            // 29: eolymp.judge.WatchContestOutput
	(*ListActivitiesInput)(nil),           // 30: eolymp.judge.ListActivitiesInput
	(*ListActivitiesOutput)(nil),          // 31: eolymp.judge.ListActivitiesOutput
	(*DescribeContestUsageInput)(nil),     // 32: eolymp.judge.DescribeContestUsageInput
	(*DescribeContestUsageOutput)(nil),    // 33: eolymp.judge.DescribeContestUsageOutput
	(*ListContestsInput_Filter)(nil),      // 34: eolymp.judge.ListContestsInput.Filter
	(*Contest)(nil),                       // 35: eolymp.judge.Contest
	(Contest_Patch_Field)(0),              // 36: eolymp.judge.Contest.Patch.Field
	(Contest_Visibility)(0),               // 37: eolymp.judge.Contest.Visibility
	(Contest_Extra_Field)(0),              // 38: eolymp.judge.Contest.Extra.Field
	(*Activity)(nil),                      // 39: eolymp.judge.Activity
	(*timestamppb.Timestamp)(nil),         // 40: google.protobuf.Timestamp
	(*wellknown.ExpressionID)(nil),        // 41: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil),    // 42: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionTimestamp)(nil), // 43: eolymp.wellknown.ExpressionTimestamp
	(*wellknown.ExpressionBool)(nil),      // 44: eolymp.wellknown.ExpressionBool
	(*wellknown.ExpressionEnum)(nil),      // 45: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionInt)(nil),       // 46: eolymp.wellknown.ExpressionInt
}
var file_eolymp_judge_contest_service_proto_depIdxs = []int32{
	35, // 0: eolymp.judge.ContestChangedEvent.before:type_name -> eolymp.judge.Contest
	35, // 1: eolymp.judge.ContestChangedEvent.after:type_name -> eolymp.judge.Contest
	35, // 2: eolymp.judge.CreateContestInput.contest:type_name -> eolymp.judge.Contest
	36, // 3: eolymp.judge.UpdateContestInput.patch:type_name -> eolymp.judge.Contest.Patch.Field
	35, // 4: eolymp.judge.UpdateContestInput.contest:type_name -> eolymp.judge.Contest
	0,  // 5: eolymp.judge.CopyContestInput.copy_scope:type_name -> eolymp.judge.CopyContestInput.Scope
	37, // 6: eolymp.judge.CopyContestInput.copy_visibility:type_name -> eolymp.judge.Contest.Visibility
	38, // 7: eolymp.judge.DescribeContestInput.extra:type_name -> eolymp.judge.Contest.Extra.Field
	35, // 8: eolymp.judge.DescribeContestOutput.contest:type_name -> eolymp.judge.Contest
	34, // 9: eolymp.judge.ListContestsInput.filters:type_name -> eolymp.judge.ListContestsInput.Filter
	38, // 10: eolymp.judge.ListContestsInput.extra:type_name -> eolymp.judge.Contest.Extra.Field
	35, // 11: eolymp.judge.ListContestsOutput.items:type_name -> eolymp.judge.Contest
	38, // 12: eolymp.judge.WatchContestInput.extra:type_name -> eolymp.judge.Contest.Extra.Field
	35, // 13: eolymp.judge.WatchContestOutput.contest:type_name -> eolymp.judge.Contest
	39, // 14: eolymp.judge.ListActivitiesOutput.items:type_name -> eolymp.judge.Activity
	40, // 15: eolymp.judge.DescribeContestUsageInput.period_start:type_name -> google.protobuf.Timestamp
	40, // 16: eolymp.judge.DescribeContestUsageInput.period_end:type_name -> google.protobuf.Timestamp
	41, // 17: eolymp.judge.ListContestsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	42, // 18: eolymp.judge.ListContestsInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	43, // 19: eolymp.judge.ListContestsInput.Filter.starts_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	43, // 20: eolymp.judge.ListContestsInput.Filter.ends_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	44, // 21: eolymp.judge.ListContestsInput.Filter.public:type_name -> eolymp.wellknown.ExpressionBool
	45, // 22: eolymp.judge.ListContestsInput.Filter.visibility:type_name -> eolymp.wellknown.ExpressionEnum
	45, // 23: eolymp.judge.ListContestsInput.Filter.format:type_name -> eolymp.wellknown.ExpressionEnum
	45, // 24: eolymp.judge.ListContestsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	44, // 25: eolymp.judge.ListContestsInput.Filter.featured:type_name -> eolymp.wellknown.ExpressionBool
	46, // 26: eolymp.judge.ListContestsInput.Filter.year:type_name -> eolymp.wellknown.ExpressionInt
	45, // 27: eolymp.judge.ListContestsInput.Filter.scale:type_name -> eolymp.wellknown.ExpressionEnum
	45, // 28: eolymp.judge.ListContestsInput.Filter.series:type_name -> eolymp.wellknown.ExpressionEnum
	46, // 29: eolymp.judge.ListContestsInput.Filter.difficulty:type_name -> eolymp.wellknown.ExpressionInt
	45, // 30: eolymp.judge.ListContestsInput.Filter.country:type_name -> eolymp.wellknown.ExpressionEnum
	45, // 31: eolymp.judge.ListContestsInput.Filter.region:type_name -> eolymp.wellknown.ExpressionEnum
	42, // 32: eolymp.judge.ListContestsInput.Filter.city:type_name -> eolymp.wellknown.ExpressionString
	2,  // 33: eolymp.judge.ContestService.CreateContest:input_type -> eolymp.judge.CreateContestInput
	4,  // 34: eolymp.judge.ContestService.DeleteContest:input_type -> eolymp.judge.DeleteContestInput
	6,  // 35: eolymp.judge.ContestService.UpdateContest:input_type -> eolymp.judge.UpdateContestInput
	8,  // 36: eolymp.judge.ContestService.CopyContest:input_type -> eolymp.judge.CopyContestInput
	10, // 37: eolymp.judge.ContestService.DescribeContest:input_type -> eolymp.judge.DescribeContestInput
	12, // 38: eolymp.judge.ContestService.ListContests:input_type -> eolymp.judge.ListContestsInput
	14, // 39: eolymp.judge.ContestService.OpenContest:input_type -> eolymp.judge.OpenContestInput
	16, // 40: eolymp.judge.ContestService.CloseContest:input_type -> eolymp.judge.CloseContestInput
	18, // 41: eolymp.judge.ContestService.SuspendContest:input_type -> eolymp.judge.SuspendContestInput
	20, // 42: eolymp.judge.ContestService.FreezeContest:input_type -> eolymp.judge.FreezeContestInput
	22, // 43: eolymp.judge.ContestService.FinalizeContest:input_type -> eolymp.judge.FinalizeContestInput
	24, // 44: eolymp.judge.ContestService.ResumeContest:input_type -> eolymp.judge.ResumeContestInput
	26, // 45: eolymp.judge.ContestService.AnalyzeContest:input_type -> eolymp.judge.AnalyzeContestInput
	28, // 46: eolymp.judge.ContestService.WatchContest:input_type -> eolymp.judge.WatchContestInput
	30, // 47: eolymp.judge.ContestService.ListActivities:input_type -> eolymp.judge.ListActivitiesInput
	32, // 48: eolymp.judge.ContestService.DescribeContestUsage:input_type -> eolymp.judge.DescribeContestUsageInput
	3,  // 49: eolymp.judge.ContestService.CreateContest:output_type -> eolymp.judge.CreateContestOutput
	5,  // 50: eolymp.judge.ContestService.DeleteContest:output_type -> eolymp.judge.DeleteContestOutput
	7,  // 51: eolymp.judge.ContestService.UpdateContest:output_type -> eolymp.judge.UpdateContestOutput
	9,  // 52: eolymp.judge.ContestService.CopyContest:output_type -> eolymp.judge.CopyContestOutput
	11, // 53: eolymp.judge.ContestService.DescribeContest:output_type -> eolymp.judge.DescribeContestOutput
	13, // 54: eolymp.judge.ContestService.ListContests:output_type -> eolymp.judge.ListContestsOutput
	15, // 55: eolymp.judge.ContestService.OpenContest:output_type -> eolymp.judge.OpenContestOutput
	17, // 56: eolymp.judge.ContestService.CloseContest:output_type -> eolymp.judge.CloseContestOutput
	19, // 57: eolymp.judge.ContestService.SuspendContest:output_type -> eolymp.judge.SuspendContestOutput
	21, // 58: eolymp.judge.ContestService.FreezeContest:output_type -> eolymp.judge.FreezeContestOutput
	23, // 59: eolymp.judge.ContestService.FinalizeContest:output_type -> eolymp.judge.FinalizeContestOutput
	25, // 60: eolymp.judge.ContestService.ResumeContest:output_type -> eolymp.judge.ResumeContestOutput
	27, // 61: eolymp.judge.ContestService.AnalyzeContest:output_type -> eolymp.judge.AnalyzeContestOutput
	29, // 62: eolymp.judge.ContestService.WatchContest:output_type -> eolymp.judge.WatchContestOutput
	31, // 63: eolymp.judge.ContestService.ListActivities:output_type -> eolymp.judge.ListActivitiesOutput
	33, // 64: eolymp.judge.ContestService.DescribeContestUsage:output_type -> eolymp.judge.DescribeContestUsageOutput
	49, // [49:65] is the sub-list for method output_type
	33, // [33:49] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_eolymp_judge_contest_service_proto_init() }
func file_eolymp_judge_contest_service_proto_init() {
	if File_eolymp_judge_contest_service_proto != nil {
		return
	}
	file_eolymp_judge_activity_proto_init()
	file_eolymp_judge_contest_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_judge_contest_service_proto_rawDesc), len(file_eolymp_judge_contest_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_contest_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_contest_service_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_contest_service_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_contest_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_contest_service_proto = out.File
	file_eolymp_judge_contest_service_proto_goTypes = nil
	file_eolymp_judge_contest_service_proto_depIdxs = nil
}
