// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: eolymp/judge/ticket_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	ecm "github.com/eolymp/go-sdk/eolymp/ecm"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListTicketsInput_Sort int32

const (
	ListTicketsInput_CREATED_AT ListTicketsInput_Sort = 0
	ListTicketsInput_UPDATED_AT ListTicketsInput_Sort = 1
)

// Enum value maps for ListTicketsInput_Sort.
var (
	ListTicketsInput_Sort_name = map[int32]string{
		0: "CREATED_AT",
		1: "UPDATED_AT",
	}
	ListTicketsInput_Sort_value = map[string]int32{
		"CREATED_AT": 0,
		"UPDATED_AT": 1,
	}
)

func (x ListTicketsInput_Sort) Enum() *ListTicketsInput_Sort {
	p := new(ListTicketsInput_Sort)
	*p = x
	return p
}

func (x ListTicketsInput_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTicketsInput_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[0].Descriptor()
}

func (ListTicketsInput_Sort) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[0]
}

func (x ListTicketsInput_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTicketsInput_Sort.Descriptor instead.
func (ListTicketsInput_Sort) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{12, 0}
}

type WatchTicketsOutput_Event int32

const (
	WatchTicketsOutput_UNKNOWN_EVENT WatchTicketsOutput_Event = 0
	WatchTicketsOutput_CREATED       WatchTicketsOutput_Event = 1
	WatchTicketsOutput_UPDATED       WatchTicketsOutput_Event = 2
	WatchTicketsOutput_DELETED       WatchTicketsOutput_Event = 3
	WatchTicketsOutput_REPLIED       WatchTicketsOutput_Event = 4
)

// Enum value maps for WatchTicketsOutput_Event.
var (
	WatchTicketsOutput_Event_name = map[int32]string{
		0: "UNKNOWN_EVENT",
		1: "CREATED",
		2: "UPDATED",
		3: "DELETED",
		4: "REPLIED",
	}
	WatchTicketsOutput_Event_value = map[string]int32{
		"UNKNOWN_EVENT": 0,
		"CREATED":       1,
		"UPDATED":       2,
		"DELETED":       3,
		"REPLIED":       4,
	}
)

func (x WatchTicketsOutput_Event) Enum() *WatchTicketsOutput_Event {
	p := new(WatchTicketsOutput_Event)
	*p = x
	return p
}

func (x WatchTicketsOutput_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchTicketsOutput_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[1].Descriptor()
}

func (WatchTicketsOutput_Event) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[1]
}

func (x WatchTicketsOutput_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchTicketsOutput_Event.Descriptor instead.
func (WatchTicketsOutput_Event) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{17, 0}
}

type WatchRepliesOutput_Event int32

const (
	WatchRepliesOutput_UNKNOWN_EVENT WatchRepliesOutput_Event = 0
	WatchRepliesOutput_CREATED       WatchRepliesOutput_Event = 1
	WatchRepliesOutput_UPDATED       WatchRepliesOutput_Event = 2
	WatchRepliesOutput_DELETED       WatchRepliesOutput_Event = 3
)

// Enum value maps for WatchRepliesOutput_Event.
var (
	WatchRepliesOutput_Event_name = map[int32]string{
		0: "UNKNOWN_EVENT",
		1: "CREATED",
		2: "UPDATED",
		3: "DELETED",
	}
	WatchRepliesOutput_Event_value = map[string]int32{
		"UNKNOWN_EVENT": 0,
		"CREATED":       1,
		"UPDATED":       2,
		"DELETED":       3,
	}
)

func (x WatchRepliesOutput_Event) Enum() *WatchRepliesOutput_Event {
	p := new(WatchRepliesOutput_Event)
	*p = x
	return p
}

func (x WatchRepliesOutput_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchRepliesOutput_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[2].Descriptor()
}

func (WatchRepliesOutput_Event) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[2]
}

func (x WatchRepliesOutput_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchRepliesOutput_Event.Descriptor instead.
func (WatchRepliesOutput_Event) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{25, 0}
}

type CreateTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId  string       `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Subject    string       `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Message    *ecm.Content `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	RawMessage string       `protobuf:"bytes,3,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
}

func (x *CreateTicketInput) Reset() {
	*x = CreateTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketInput) ProtoMessage() {}

func (x *CreateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketInput.ProtoReflect.Descriptor instead.
func (*CreateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *CreateTicketInput) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateTicketInput) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateTicketInput) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

type CreateTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *CreateTicketOutput) Reset() {
	*x = CreateTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOutput) ProtoMessage() {}

func (x *CreateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOutput.ProtoReflect.Descriptor instead.
func (*CreateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTicketOutput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type CloseTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId  string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *CloseTicketInput) Reset() {
	*x = CloseTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketInput) ProtoMessage() {}

func (x *CloseTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketInput.ProtoReflect.Descriptor instead.
func (*CloseTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{2}
}

func (x *CloseTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *CloseTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type CloseTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseTicketOutput) Reset() {
	*x = CloseTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketOutput) ProtoMessage() {}

func (x *CloseTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketOutput.ProtoReflect.Descriptor instead.
func (*CloseTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{3}
}

type OpenTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId  string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *OpenTicketInput) Reset() {
	*x = OpenTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTicketInput) ProtoMessage() {}

func (x *OpenTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenTicketInput.ProtoReflect.Descriptor instead.
func (*OpenTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{4}
}

func (x *OpenTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *OpenTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type OpenTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenTicketOutput) Reset() {
	*x = OpenTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTicketOutput) ProtoMessage() {}

func (x *OpenTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenTicketOutput.ProtoReflect.Descriptor instead.
func (*OpenTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{5}
}

type ReadTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId  string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *ReadTicketInput) Reset() {
	*x = ReadTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTicketInput) ProtoMessage() {}

func (x *ReadTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTicketInput.ProtoReflect.Descriptor instead.
func (*ReadTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReadTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ReadTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type ReadTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadTicketOutput) Reset() {
	*x = ReadTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTicketOutput) ProtoMessage() {}

func (x *ReadTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTicketOutput.ProtoReflect.Descriptor instead.
func (*ReadTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{7}
}

type DeleteTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId  string `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *DeleteTicketInput) Reset() {
	*x = DeleteTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketInput) ProtoMessage() {}

func (x *DeleteTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketInput.ProtoReflect.Descriptor instead.
func (*DeleteTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DeleteTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type DeleteTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTicketOutput) Reset() {
	*x = DeleteTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketOutput) ProtoMessage() {}

func (x *DeleteTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketOutput.ProtoReflect.Descriptor instead.
func (*DeleteTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{9}
}

type DescribeTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string         `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId  string         `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Extra     []Ticket_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
}

func (x *DescribeTicketInput) Reset() {
	*x = DescribeTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketInput) ProtoMessage() {}

func (x *DescribeTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketInput.ProtoReflect.Descriptor instead.
func (*DescribeTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeTicketInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *DescribeTicketOutput) Reset() {
	*x = DescribeTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketOutput) ProtoMessage() {}

func (x *DescribeTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketOutput.ProtoReflect.Descriptor instead.
func (*DescribeTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeTicketOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type ListTicketsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination
	After  string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Offset int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListTicketsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort    ListTicketsInput_Sort    `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.judge.ListTicketsInput_Sort" json:"sort,omitempty"`
	Order   wellknown.Direction      `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	Extra   []Ticket_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
}

func (x *ListTicketsInput) Reset() {
	*x = ListTicketsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTicketsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput) ProtoMessage() {}

func (x *ListTicketsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput.ProtoReflect.Descriptor instead.
func (*ListTicketsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListTicketsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListTicketsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTicketsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTicketsInput) GetFilters() *ListTicketsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListTicketsInput) GetSort() ListTicketsInput_Sort {
	if x != nil {
		return x.Sort
	}
	return ListTicketsInput_CREATED_AT
}

func (x *ListTicketsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListTicketsInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListTicketsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*Ticket `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string    `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
}

func (x *ListTicketsOutput) Reset() {
	*x = ListTicketsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTicketsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsOutput) ProtoMessage() {}

func (x *ListTicketsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsOutput.ProtoReflect.Descriptor instead.
func (*ListTicketsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListTicketsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTicketsOutput) GetItems() []*Ticket {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListTicketsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type ReplyTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId       string        `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Message        *ecm.Content  `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	ChangeStatusTo Ticket_Status `protobuf:"varint,20,opt,name=change_status_to,json=changeStatusTo,proto3,enum=eolymp.judge.Ticket_Status" json:"change_status_to,omitempty"`
}

func (x *ReplyTicketInput) Reset() {
	*x = ReplyTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTicketInput) ProtoMessage() {}

func (x *ReplyTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTicketInput.ProtoReflect.Descriptor instead.
func (*ReplyTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{14}
}

func (x *ReplyTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ReplyTicketInput) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ReplyTicketInput) GetChangeStatusTo() Ticket_Status {
	if x != nil {
		return x.ChangeStatusTo
	}
	return Ticket_UNKNOWN_STATUS
}

type ReplyTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId string `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
}

func (x *ReplyTicketOutput) Reset() {
	*x = ReplyTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTicketOutput) ProtoMessage() {}

func (x *ReplyTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTicketOutput.ProtoReflect.Descriptor instead.
func (*ReplyTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{15}
}

func (x *ReplyTicketOutput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

type WatchTicketsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string         `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Extra     []Ticket_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
}

func (x *WatchTicketsInput) Reset() {
	*x = WatchTicketsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTicketsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketsInput) ProtoMessage() {}

func (x *WatchTicketsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketsInput.ProtoReflect.Descriptor instead.
func (*WatchTicketsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{16}
}

func (x *WatchTicketsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchTicketsInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchTicketsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event       WatchTicketsOutput_Event `protobuf:"varint,1,opt,name=event,proto3,enum=eolymp.judge.WatchTicketsOutput_Event" json:"event,omitempty"`
	Ticket      *Ticket                  `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	UnreadCount uint32                   `protobuf:"varint,3,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
}

func (x *WatchTicketsOutput) Reset() {
	*x = WatchTicketsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTicketsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketsOutput) ProtoMessage() {}

func (x *WatchTicketsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketsOutput.ProtoReflect.Descriptor instead.
func (*WatchTicketsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{17}
}

func (x *WatchTicketsOutput) GetEvent() WatchTicketsOutput_Event {
	if x != nil {
		return x.Event
	}
	return WatchTicketsOutput_UNKNOWN_EVENT
}

func (x *WatchTicketsOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *WatchTicketsOutput) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

type ListRepliesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	// pagination
	Offset int32         `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32         `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Extra  []Reply_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Reply_Extra" json:"extra,omitempty"`
}

func (x *ListRepliesInput) Reset() {
	*x = ListRepliesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepliesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepliesInput) ProtoMessage() {}

func (x *ListRepliesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepliesInput.ProtoReflect.Descriptor instead.
func (*ListRepliesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListRepliesInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ListRepliesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRepliesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListRepliesInput) GetExtra() []Reply_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListRepliesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Reply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRepliesOutput) Reset() {
	*x = ListRepliesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRepliesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepliesOutput) ProtoMessage() {}

func (x *ListRepliesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepliesOutput.ProtoReflect.Descriptor instead.
func (*ListRepliesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListRepliesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRepliesOutput) GetItems() []*Reply {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	ReplyId  string `protobuf:"bytes,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
}

func (x *DeleteReplyInput) Reset() {
	*x = DeleteReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReplyInput) ProtoMessage() {}

func (x *DeleteReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReplyInput.ProtoReflect.Descriptor instead.
func (*DeleteReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteReplyInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DeleteReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

type DeleteReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReplyOutput) Reset() {
	*x = DeleteReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReplyOutput) ProtoMessage() {}

func (x *DeleteReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReplyOutput.ProtoReflect.Descriptor instead.
func (*DeleteReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{21}
}

type UpdateReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string       `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	ReplyId  string       `protobuf:"bytes,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Message  *ecm.Content `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateReplyInput) Reset() {
	*x = UpdateReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplyInput) ProtoMessage() {}

func (x *UpdateReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplyInput.ProtoReflect.Descriptor instead.
func (*UpdateReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateReplyInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *UpdateReplyInput) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

type UpdateReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateReplyOutput) Reset() {
	*x = UpdateReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplyOutput) ProtoMessage() {}

func (x *UpdateReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplyOutput.ProtoReflect.Descriptor instead.
func (*UpdateReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{23}
}

type WatchRepliesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string        `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Cursor   string        `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"` // optionally, id of the last reply already received by client
	Extra    []Reply_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Reply_Extra" json:"extra,omitempty"`
}

func (x *WatchRepliesInput) Reset() {
	*x = WatchRepliesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRepliesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRepliesInput) ProtoMessage() {}

func (x *WatchRepliesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRepliesInput.ProtoReflect.Descriptor instead.
func (*WatchRepliesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{24}
}

func (x *WatchRepliesInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *WatchRepliesInput) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *WatchRepliesInput) GetExtra() []Reply_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchRepliesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event WatchRepliesOutput_Event `protobuf:"varint,1,opt,name=event,proto3,enum=eolymp.judge.WatchRepliesOutput_Event" json:"event,omitempty"`
	Reply *Reply                   `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *WatchRepliesOutput) Reset() {
	*x = WatchRepliesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRepliesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRepliesOutput) ProtoMessage() {}

func (x *WatchRepliesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRepliesOutput.ProtoReflect.Descriptor instead.
func (*WatchRepliesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{25}
}

func (x *WatchRepliesOutput) GetEvent() WatchRepliesOutput_Event {
	if x != nil {
		return x.Event
	}
	return WatchRepliesOutput_UNKNOWN_EVENT
}

func (x *WatchRepliesOutput) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type ListTicketsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            []*wellknown.ExpressionID   `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	ContestId     []*wellknown.ExpressionID   `protobuf:"bytes,2,rep,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId []*wellknown.ExpressionID   `protobuf:"bytes,3,rep,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	MemberId      []*wellknown.ExpressionID   `protobuf:"bytes,8,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	IsRead        []*wellknown.ExpressionBool `protobuf:"bytes,5,rep,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	IsOpen        []*wellknown.ExpressionBool `protobuf:"bytes,6,rep,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	Own           []*wellknown.ExpressionBool `protobuf:"bytes,7,rep,name=own,proto3" json:"own,omitempty"`
	Status        []*wellknown.ExpressionEnum `protobuf:"bytes,9,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *ListTicketsInput_Filter) Reset() {
	*x = ListTicketsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_ticket_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTicketsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput_Filter) ProtoMessage() {}

func (x *ListTicketsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListTicketsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListTicketsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetContestId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ContestId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetParticipantId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ParticipantId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetIsRead() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsRead
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetIsOpen() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsOpen
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetOwn() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Own
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_eolymp_judge_ticket_service_proto protoreflect.FileDescriptor

var file_eolymp_judge_ticket_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x65, 0x63, 0x6d,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x65, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x77,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x10, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x4d, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x12,
	0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4f, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x84, 0x01, 0x0a,
	0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xbe, 0x06, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0xdf, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f,
	0x6c, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x69, 0x73,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x03, 0x6f, 0x77, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x03, 0x6f, 0x77, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x26, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x01, 0x22, 0x7f, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x6f,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x6f, 0x22, 0x2e, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0xf3, 0x01, 0x0a, 0x12, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4e, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x10, 0x04,
	0x22, 0x8d, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x22, 0x54, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x79, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x65, 0x63,
	0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x7a, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x41, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0xc3, 0x0f, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x40, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a,
	0x1d, 0x8a, 0xe3, 0x0a, 0x19, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x3a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0a, 0x22, 0x08, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x9c,
	0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x4c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05,
	0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x22, 0x1a, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x98, 0x01,
	0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4b, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17,
	0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x97, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x61,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4a, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x99, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x46, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9e,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x45, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2,
	0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a,
	0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72,
	0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x89, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x39, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a,
	0x14, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0a, 0x12, 0x08, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x0b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x54, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a,
	0x1d, 0x8a, 0xe3, 0x0a, 0x19, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x3a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x1c, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x12, 0x6f, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1a, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61,
	0x64, 0x30, 0x01, 0x12, 0x9d, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x4d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0,
	0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f,
	0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x59, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23,
	0x3e, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0xa9, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x59, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x0a, 0xd7, 0x23, 0x3e, 0xf8, 0xe2, 0x0a,
	0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x22, 0x27, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x0c, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1a,
	0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x30, 0x01, 0x42, 0x2d, 0x5a, 0x2b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x3b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_eolymp_judge_ticket_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_ticket_service_proto_rawDescData = file_eolymp_judge_ticket_service_proto_rawDesc
)

func file_eolymp_judge_ticket_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_ticket_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_ticket_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_judge_ticket_service_proto_rawDescData)
	})
	return file_eolymp_judge_ticket_service_proto_rawDescData
}

var file_eolymp_judge_ticket_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_eolymp_judge_ticket_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_eolymp_judge_ticket_service_proto_goTypes = []interface{}{
	(ListTicketsInput_Sort)(0),       // 0: eolymp.judge.ListTicketsInput.Sort
	(WatchTicketsOutput_Event)(0),    // 1: eolymp.judge.WatchTicketsOutput.Event
	(WatchRepliesOutput_Event)(0),    // 2: eolymp.judge.WatchRepliesOutput.Event
	(*CreateTicketInput)(nil),        // 3: eolymp.judge.CreateTicketInput
	(*CreateTicketOutput)(nil),       // 4: eolymp.judge.CreateTicketOutput
	(*CloseTicketInput)(nil),         // 5: eolymp.judge.CloseTicketInput
	(*CloseTicketOutput)(nil),        // 6: eolymp.judge.CloseTicketOutput
	(*OpenTicketInput)(nil),          // 7: eolymp.judge.OpenTicketInput
	(*OpenTicketOutput)(nil),         // 8: eolymp.judge.OpenTicketOutput
	(*ReadTicketInput)(nil),          // 9: eolymp.judge.ReadTicketInput
	(*ReadTicketOutput)(nil),         // 10: eolymp.judge.ReadTicketOutput
	(*DeleteTicketInput)(nil),        // 11: eolymp.judge.DeleteTicketInput
	(*DeleteTicketOutput)(nil),       // 12: eolymp.judge.DeleteTicketOutput
	(*DescribeTicketInput)(nil),      // 13: eolymp.judge.DescribeTicketInput
	(*DescribeTicketOutput)(nil),     // 14: eolymp.judge.DescribeTicketOutput
	(*ListTicketsInput)(nil),         // 15: eolymp.judge.ListTicketsInput
	(*ListTicketsOutput)(nil),        // 16: eolymp.judge.ListTicketsOutput
	(*ReplyTicketInput)(nil),         // 17: eolymp.judge.ReplyTicketInput
	(*ReplyTicketOutput)(nil),        // 18: eolymp.judge.ReplyTicketOutput
	(*WatchTicketsInput)(nil),        // 19: eolymp.judge.WatchTicketsInput
	(*WatchTicketsOutput)(nil),       // 20: eolymp.judge.WatchTicketsOutput
	(*ListRepliesInput)(nil),         // 21: eolymp.judge.ListRepliesInput
	(*ListRepliesOutput)(nil),        // 22: eolymp.judge.ListRepliesOutput
	(*DeleteReplyInput)(nil),         // 23: eolymp.judge.DeleteReplyInput
	(*DeleteReplyOutput)(nil),        // 24: eolymp.judge.DeleteReplyOutput
	(*UpdateReplyInput)(nil),         // 25: eolymp.judge.UpdateReplyInput
	(*UpdateReplyOutput)(nil),        // 26: eolymp.judge.UpdateReplyOutput
	(*WatchRepliesInput)(nil),        // 27: eolymp.judge.WatchRepliesInput
	(*WatchRepliesOutput)(nil),       // 28: eolymp.judge.WatchRepliesOutput
	(*ListTicketsInput_Filter)(nil),  // 29: eolymp.judge.ListTicketsInput.Filter
	(*ecm.Content)(nil),              // 30: eolymp.ecm.Content
	(Ticket_Extra)(0),                // 31: eolymp.judge.Ticket.Extra
	(*Ticket)(nil),                   // 32: eolymp.judge.Ticket
	(wellknown.Direction)(0),         // 33: eolymp.wellknown.Direction
	(Ticket_Status)(0),               // 34: eolymp.judge.Ticket.Status
	(Reply_Extra)(0),                 // 35: eolymp.judge.Reply.Extra
	(*Reply)(nil),                    // 36: eolymp.judge.Reply
	(*wellknown.ExpressionID)(nil),   // 37: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionBool)(nil), // 38: eolymp.wellknown.ExpressionBool
	(*wellknown.ExpressionEnum)(nil), // 39: eolymp.wellknown.ExpressionEnum
}
var file_eolymp_judge_ticket_service_proto_depIdxs = []int32{
	30, // 0: eolymp.judge.CreateTicketInput.message:type_name -> eolymp.ecm.Content
	31, // 1: eolymp.judge.DescribeTicketInput.extra:type_name -> eolymp.judge.Ticket.Extra
	32, // 2: eolymp.judge.DescribeTicketOutput.ticket:type_name -> eolymp.judge.Ticket
	29, // 3: eolymp.judge.ListTicketsInput.filters:type_name -> eolymp.judge.ListTicketsInput.Filter
	0,  // 4: eolymp.judge.ListTicketsInput.sort:type_name -> eolymp.judge.ListTicketsInput.Sort
	33, // 5: eolymp.judge.ListTicketsInput.order:type_name -> eolymp.wellknown.Direction
	31, // 6: eolymp.judge.ListTicketsInput.extra:type_name -> eolymp.judge.Ticket.Extra
	32, // 7: eolymp.judge.ListTicketsOutput.items:type_name -> eolymp.judge.Ticket
	30, // 8: eolymp.judge.ReplyTicketInput.message:type_name -> eolymp.ecm.Content
	34, // 9: eolymp.judge.ReplyTicketInput.change_status_to:type_name -> eolymp.judge.Ticket.Status
	31, // 10: eolymp.judge.WatchTicketsInput.extra:type_name -> eolymp.judge.Ticket.Extra
	1,  // 11: eolymp.judge.WatchTicketsOutput.event:type_name -> eolymp.judge.WatchTicketsOutput.Event
	32, // 12: eolymp.judge.WatchTicketsOutput.ticket:type_name -> eolymp.judge.Ticket
	35, // 13: eolymp.judge.ListRepliesInput.extra:type_name -> eolymp.judge.Reply.Extra
	36, // 14: eolymp.judge.ListRepliesOutput.items:type_name -> eolymp.judge.Reply
	30, // 15: eolymp.judge.UpdateReplyInput.message:type_name -> eolymp.ecm.Content
	35, // 16: eolymp.judge.WatchRepliesInput.extra:type_name -> eolymp.judge.Reply.Extra
	2,  // 17: eolymp.judge.WatchRepliesOutput.event:type_name -> eolymp.judge.WatchRepliesOutput.Event
	36, // 18: eolymp.judge.WatchRepliesOutput.reply:type_name -> eolymp.judge.Reply
	37, // 19: eolymp.judge.ListTicketsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	37, // 20: eolymp.judge.ListTicketsInput.Filter.contest_id:type_name -> eolymp.wellknown.ExpressionID
	37, // 21: eolymp.judge.ListTicketsInput.Filter.participant_id:type_name -> eolymp.wellknown.ExpressionID
	37, // 22: eolymp.judge.ListTicketsInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	38, // 23: eolymp.judge.ListTicketsInput.Filter.is_read:type_name -> eolymp.wellknown.ExpressionBool
	38, // 24: eolymp.judge.ListTicketsInput.Filter.is_open:type_name -> eolymp.wellknown.ExpressionBool
	38, // 25: eolymp.judge.ListTicketsInput.Filter.own:type_name -> eolymp.wellknown.ExpressionBool
	39, // 26: eolymp.judge.ListTicketsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	3,  // 27: eolymp.judge.TicketService.CreateTicket:input_type -> eolymp.judge.CreateTicketInput
	5,  // 28: eolymp.judge.TicketService.CloseTicket:input_type -> eolymp.judge.CloseTicketInput
	7,  // 29: eolymp.judge.TicketService.OpenTicket:input_type -> eolymp.judge.OpenTicketInput
	9,  // 30: eolymp.judge.TicketService.ReadTicket:input_type -> eolymp.judge.ReadTicketInput
	11, // 31: eolymp.judge.TicketService.DeleteTicket:input_type -> eolymp.judge.DeleteTicketInput
	13, // 32: eolymp.judge.TicketService.DescribeTicket:input_type -> eolymp.judge.DescribeTicketInput
	15, // 33: eolymp.judge.TicketService.ListTickets:input_type -> eolymp.judge.ListTicketsInput
	17, // 34: eolymp.judge.TicketService.ReplyTicket:input_type -> eolymp.judge.ReplyTicketInput
	19, // 35: eolymp.judge.TicketService.WatchTickets:input_type -> eolymp.judge.WatchTicketsInput
	21, // 36: eolymp.judge.TicketService.ListReplies:input_type -> eolymp.judge.ListRepliesInput
	23, // 37: eolymp.judge.TicketService.DeleteReply:input_type -> eolymp.judge.DeleteReplyInput
	25, // 38: eolymp.judge.TicketService.UpdateReply:input_type -> eolymp.judge.UpdateReplyInput
	27, // 39: eolymp.judge.TicketService.WatchReplies:input_type -> eolymp.judge.WatchRepliesInput
	4,  // 40: eolymp.judge.TicketService.CreateTicket:output_type -> eolymp.judge.CreateTicketOutput
	6,  // 41: eolymp.judge.TicketService.CloseTicket:output_type -> eolymp.judge.CloseTicketOutput
	8,  // 42: eolymp.judge.TicketService.OpenTicket:output_type -> eolymp.judge.OpenTicketOutput
	10, // 43: eolymp.judge.TicketService.ReadTicket:output_type -> eolymp.judge.ReadTicketOutput
	12, // 44: eolymp.judge.TicketService.DeleteTicket:output_type -> eolymp.judge.DeleteTicketOutput
	14, // 45: eolymp.judge.TicketService.DescribeTicket:output_type -> eolymp.judge.DescribeTicketOutput
	16, // 46: eolymp.judge.TicketService.ListTickets:output_type -> eolymp.judge.ListTicketsOutput
	18, // 47: eolymp.judge.TicketService.ReplyTicket:output_type -> eolymp.judge.ReplyTicketOutput
	20, // 48: eolymp.judge.TicketService.WatchTickets:output_type -> eolymp.judge.WatchTicketsOutput
	22, // 49: eolymp.judge.TicketService.ListReplies:output_type -> eolymp.judge.ListRepliesOutput
	24, // 50: eolymp.judge.TicketService.DeleteReply:output_type -> eolymp.judge.DeleteReplyOutput
	26, // 51: eolymp.judge.TicketService.UpdateReply:output_type -> eolymp.judge.UpdateReplyOutput
	28, // 52: eolymp.judge.TicketService.WatchReplies:output_type -> eolymp.judge.WatchRepliesOutput
	40, // [40:53] is the sub-list for method output_type
	27, // [27:40] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_eolymp_judge_ticket_service_proto_init() }
func file_eolymp_judge_ticket_service_proto_init() {
	if File_eolymp_judge_ticket_service_proto != nil {
		return
	}
	file_eolymp_judge_reply_proto_init()
	file_eolymp_judge_ticket_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_judge_ticket_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTicketsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTicketsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTicketsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTicketsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepliesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRepliesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRepliesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRepliesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_ticket_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTicketsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_judge_ticket_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_ticket_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_ticket_service_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_ticket_service_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_ticket_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_ticket_service_proto = out.File
	file_eolymp_judge_ticket_service_proto_rawDesc = nil
	file_eolymp_judge_ticket_service_proto_goTypes = nil
	file_eolymp_judge_ticket_service_proto_depIdxs = nil
}
