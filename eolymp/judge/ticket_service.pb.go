// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/judge/ticket_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	ecm "github.com/eolymp/go-sdk/eolymp/ecm"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateTicketInput_Patch int32

const (
	UpdateTicketInput_ALL     UpdateTicketInput_Patch = 0
	UpdateTicketInput_STATUS  UpdateTicketInput_Patch = 1
	UpdateTicketInput_SUBJECT UpdateTicketInput_Patch = 2
)

// Enum value maps for UpdateTicketInput_Patch.
var (
	UpdateTicketInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "STATUS",
		2: "SUBJECT",
	}
	UpdateTicketInput_Patch_value = map[string]int32{
		"ALL":     0,
		"STATUS":  1,
		"SUBJECT": 2,
	}
)

func (x UpdateTicketInput_Patch) Enum() *UpdateTicketInput_Patch {
	p := new(UpdateTicketInput_Patch)
	*p = x
	return p
}

func (x UpdateTicketInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTicketInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[0].Descriptor()
}

func (UpdateTicketInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[0]
}

func (x UpdateTicketInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTicketInput_Patch.Descriptor instead.
func (UpdateTicketInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{4, 0}
}

type ListTicketsInput_Sort int32

const (
	ListTicketsInput_CREATED_AT ListTicketsInput_Sort = 0
	ListTicketsInput_UPDATED_AT ListTicketsInput_Sort = 1
)

// Enum value maps for ListTicketsInput_Sort.
var (
	ListTicketsInput_Sort_name = map[int32]string{
		0: "CREATED_AT",
		1: "UPDATED_AT",
	}
	ListTicketsInput_Sort_value = map[string]int32{
		"CREATED_AT": 0,
		"UPDATED_AT": 1,
	}
)

func (x ListTicketsInput_Sort) Enum() *ListTicketsInput_Sort {
	p := new(ListTicketsInput_Sort)
	*p = x
	return p
}

func (x ListTicketsInput_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListTicketsInput_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[1].Descriptor()
}

func (ListTicketsInput_Sort) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[1]
}

func (x ListTicketsInput_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListTicketsInput_Sort.Descriptor instead.
func (ListTicketsInput_Sort) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{12, 0}
}

type WatchTicketsOutput_Event int32

const (
	WatchTicketsOutput_UNKNOWN_EVENT WatchTicketsOutput_Event = 0
	WatchTicketsOutput_CREATED       WatchTicketsOutput_Event = 1
	WatchTicketsOutput_UPDATED       WatchTicketsOutput_Event = 2
	WatchTicketsOutput_DELETED       WatchTicketsOutput_Event = 3
)

// Enum value maps for WatchTicketsOutput_Event.
var (
	WatchTicketsOutput_Event_name = map[int32]string{
		0: "UNKNOWN_EVENT",
		1: "CREATED",
		2: "UPDATED",
		3: "DELETED",
	}
	WatchTicketsOutput_Event_value = map[string]int32{
		"UNKNOWN_EVENT": 0,
		"CREATED":       1,
		"UPDATED":       2,
		"DELETED":       3,
	}
)

func (x WatchTicketsOutput_Event) Enum() *WatchTicketsOutput_Event {
	p := new(WatchTicketsOutput_Event)
	*p = x
	return p
}

func (x WatchTicketsOutput_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchTicketsOutput_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[2].Descriptor()
}

func (WatchTicketsOutput_Event) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[2]
}

func (x WatchTicketsOutput_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchTicketsOutput_Event.Descriptor instead.
func (WatchTicketsOutput_Event) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{19, 0}
}

type WatchRepliesOutput_Event int32

const (
	WatchRepliesOutput_UNKNOWN_EVENT WatchRepliesOutput_Event = 0
	WatchRepliesOutput_CREATED       WatchRepliesOutput_Event = 1
	WatchRepliesOutput_UPDATED       WatchRepliesOutput_Event = 2
	WatchRepliesOutput_DELETED       WatchRepliesOutput_Event = 3
)

// Enum value maps for WatchRepliesOutput_Event.
var (
	WatchRepliesOutput_Event_name = map[int32]string{
		0: "UNKNOWN_EVENT",
		1: "CREATED",
		2: "UPDATED",
		3: "DELETED",
	}
	WatchRepliesOutput_Event_value = map[string]int32{
		"UNKNOWN_EVENT": 0,
		"CREATED":       1,
		"UPDATED":       2,
		"DELETED":       3,
	}
)

func (x WatchRepliesOutput_Event) Enum() *WatchRepliesOutput_Event {
	p := new(WatchRepliesOutput_Event)
	*p = x
	return p
}

func (x WatchRepliesOutput_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchRepliesOutput_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_ticket_service_proto_enumTypes[3].Descriptor()
}

func (WatchRepliesOutput_Event) Type() protoreflect.EnumType {
	return &file_eolymp_judge_ticket_service_proto_enumTypes[3]
}

func (x WatchRepliesOutput_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchRepliesOutput_Event.Descriptor instead.
func (WatchRepliesOutput_Event) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{31, 0}
}

type TicketChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,10,opt,name=scope,proto3" json:"scope,omitempty"`
	Before        *Ticket                `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *Ticket                `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketChangedEvent) Reset() {
	*x = TicketChangedEvent{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketChangedEvent) ProtoMessage() {}

func (x *TicketChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketChangedEvent.ProtoReflect.Descriptor instead.
func (*TicketChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{0}
}

func (x *TicketChangedEvent) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *TicketChangedEvent) GetBefore() *Ticket {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *TicketChangedEvent) GetAfter() *Ticket {
	if x != nil {
		return x.After
	}
	return nil
}

type ReplyChangedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Before        *Reply                 `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After         *Reply                 `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyChangedEvent) Reset() {
	*x = ReplyChangedEvent{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyChangedEvent) ProtoMessage() {}

func (x *ReplyChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyChangedEvent.ProtoReflect.Descriptor instead.
func (*ReplyChangedEvent) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{1}
}

func (x *ReplyChangedEvent) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ReplyChangedEvent) GetBefore() *Reply {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ReplyChangedEvent) GetAfter() *Reply {
	if x != nil {
		return x.After
	}
	return nil
}

type CreateTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Subject       string                 `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Message       *ecm.Content           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	RawMessage    string                 `protobuf:"bytes,3,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketInput) Reset() {
	*x = CreateTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketInput) ProtoMessage() {}

func (x *CreateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketInput.ProtoReflect.Descriptor instead.
func (*CreateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *CreateTicketInput) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateTicketInput) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateTicketInput) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

type CreateTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketOutput) Reset() {
	*x = CreateTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOutput) ProtoMessage() {}

func (x *CreateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOutput.ProtoReflect.Descriptor instead.
func (*CreateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTicketOutput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type UpdateTicketInput struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Patch         []UpdateTicketInput_Patch `protobuf:"varint,3,rep,packed,name=patch,proto3,enum=eolymp.judge.UpdateTicketInput_Patch" json:"patch,omitempty"`
	TicketId      string                    `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Ticket        *Ticket                   `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketInput) Reset() {
	*x = UpdateTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketInput) ProtoMessage() {}

func (x *UpdateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketInput.ProtoReflect.Descriptor instead.
func (*UpdateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTicketInput) GetPatch() []UpdateTicketInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateTicketInput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type UpdateTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketOutput) Reset() {
	*x = UpdateTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketOutput) ProtoMessage() {}

func (x *UpdateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketOutput.ProtoReflect.Descriptor instead.
func (*UpdateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{5}
}

type ReadTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadTicketInput) Reset() {
	*x = ReadTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTicketInput) ProtoMessage() {}

func (x *ReadTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTicketInput.ProtoReflect.Descriptor instead.
func (*ReadTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReadTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ReadTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ReadTicketInput) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ReadTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadTicketOutput) Reset() {
	*x = ReadTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTicketOutput) ProtoMessage() {}

func (x *ReadTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTicketOutput.ProtoReflect.Descriptor instead.
func (*ReadTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{7}
}

type DeleteTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketInput) Reset() {
	*x = DeleteTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketInput) ProtoMessage() {}

func (x *DeleteTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketInput.ProtoReflect.Descriptor instead.
func (*DeleteTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DeleteTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type DeleteTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketOutput) Reset() {
	*x = DeleteTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketOutput) ProtoMessage() {}

func (x *DeleteTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketOutput.ProtoReflect.Descriptor instead.
func (*DeleteTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{9}
}

type DescribeTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Extra         []Ticket_Extra         `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTicketInput) Reset() {
	*x = DescribeTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketInput) ProtoMessage() {}

func (x *DescribeTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketInput.ProtoReflect.Descriptor instead.
func (*DescribeTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeTicketInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeTicketInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTicketOutput) Reset() {
	*x = DescribeTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketOutput) ProtoMessage() {}

func (x *DescribeTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketOutput.ProtoReflect.Descriptor instead.
func (*DescribeTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeTicketOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type ListTicketsInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pagination
	After  string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Offset int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters       *ListTicketsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort          ListTicketsInput_Sort    `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.judge.ListTicketsInput_Sort" json:"sort,omitempty"`
	Order         wellknown.Direction      `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	Extra         []Ticket_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsInput) Reset() {
	*x = ListTicketsInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput) ProtoMessage() {}

func (x *ListTicketsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput.ProtoReflect.Descriptor instead.
func (*ListTicketsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListTicketsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListTicketsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTicketsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTicketsInput) GetFilters() *ListTicketsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListTicketsInput) GetSort() ListTicketsInput_Sort {
	if x != nil {
		return x.Sort
	}
	return ListTicketsInput_CREATED_AT
}

func (x *ListTicketsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListTicketsInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListTicketsOutput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*Ticket              `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string                 `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListTicketsOutput) Reset() {
	*x = ListTicketsOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsOutput) ProtoMessage() {}

func (x *ListTicketsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsOutput.ProtoReflect.Descriptor instead.
func (*ListTicketsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListTicketsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTicketsOutput) GetItems() []*Ticket {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListTicketsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type ReplyTicketInput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TicketId       string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Message        *ecm.Content           `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	ChangeStatusTo Ticket_Status          `protobuf:"varint,20,opt,name=change_status_to,json=changeStatusTo,proto3,enum=eolymp.judge.Ticket_Status" json:"change_status_to,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReplyTicketInput) Reset() {
	*x = ReplyTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTicketInput) ProtoMessage() {}

func (x *ReplyTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTicketInput.ProtoReflect.Descriptor instead.
func (*ReplyTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{14}
}

func (x *ReplyTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ReplyTicketInput) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ReplyTicketInput) GetChangeStatusTo() Ticket_Status {
	if x != nil {
		return x.ChangeStatusTo
	}
	return Ticket_UNKNOWN_STATUS
}

type ReplyTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyTicketOutput) Reset() {
	*x = ReplyTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTicketOutput) ProtoMessage() {}

func (x *ReplyTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTicketOutput.ProtoReflect.Descriptor instead.
func (*ReplyTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{15}
}

func (x *ReplyTicketOutput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

type WatchTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Extra         []Ticket_Extra         `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTicketInput) Reset() {
	*x = WatchTicketInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketInput) ProtoMessage() {}

func (x *WatchTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketInput.ProtoReflect.Descriptor instead.
func (*WatchTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{16}
}

func (x *WatchTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *WatchTicketInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTicketOutput) Reset() {
	*x = WatchTicketOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketOutput) ProtoMessage() {}

func (x *WatchTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketOutput.ProtoReflect.Descriptor instead.
func (*WatchTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{17}
}

func (x *WatchTicketOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type WatchTicketsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Extra         []Ticket_Extra         `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Ticket_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTicketsInput) Reset() {
	*x = WatchTicketsInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTicketsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketsInput) ProtoMessage() {}

func (x *WatchTicketsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketsInput.ProtoReflect.Descriptor instead.
func (*WatchTicketsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{18}
}

func (x *WatchTicketsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchTicketsInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *WatchTicketsInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WatchTicketsInput) GetExtra() []Ticket_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchTicketsOutput struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Event         WatchTicketsOutput_Event `protobuf:"varint,1,opt,name=event,proto3,enum=eolymp.judge.WatchTicketsOutput_Event" json:"event,omitempty"`
	Ticket        *Ticket                  `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTicketsOutput) Reset() {
	*x = WatchTicketsOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTicketsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketsOutput) ProtoMessage() {}

func (x *WatchTicketsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketsOutput.ProtoReflect.Descriptor instead.
func (*WatchTicketsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{19}
}

func (x *WatchTicketsOutput) GetEvent() WatchTicketsOutput_Event {
	if x != nil {
		return x.Event
	}
	return WatchTicketsOutput_UNKNOWN_EVENT
}

func (x *WatchTicketsOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type WatchTicketSummaryInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchTicketSummaryInput) Reset() {
	*x = WatchTicketSummaryInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTicketSummaryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketSummaryInput) ProtoMessage() {}

func (x *WatchTicketSummaryInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketSummaryInput.ProtoReflect.Descriptor instead.
func (*WatchTicketSummaryInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{20}
}

func (x *WatchTicketSummaryInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchTicketSummaryInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type WatchTicketSummaryOutput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UnreadCount     uint32                 `protobuf:"varint,3,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	UnresolvedCount uint32                 `protobuf:"varint,4,opt,name=unresolved_count,json=unresolvedCount,proto3" json:"unresolved_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WatchTicketSummaryOutput) Reset() {
	*x = WatchTicketSummaryOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchTicketSummaryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTicketSummaryOutput) ProtoMessage() {}

func (x *WatchTicketSummaryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTicketSummaryOutput.ProtoReflect.Descriptor instead.
func (*WatchTicketSummaryOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{21}
}

func (x *WatchTicketSummaryOutput) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *WatchTicketSummaryOutput) GetUnresolvedCount() uint32 {
	if x != nil {
		return x.UnresolvedCount
	}
	return 0
}

type ListRepliesInput struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TicketId string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	// pagination
	Offset        int32         `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32         `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Extra         []Reply_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Reply_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepliesInput) Reset() {
	*x = ListRepliesInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepliesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepliesInput) ProtoMessage() {}

func (x *ListRepliesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepliesInput.ProtoReflect.Descriptor instead.
func (*ListRepliesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListRepliesInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ListRepliesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRepliesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListRepliesInput) GetExtra() []Reply_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListRepliesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Reply               `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepliesOutput) Reset() {
	*x = ListRepliesOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepliesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepliesOutput) ProtoMessage() {}

func (x *ListRepliesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepliesOutput.ProtoReflect.Descriptor instead.
func (*ListRepliesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListRepliesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRepliesOutput) GetItems() []*Reply {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeReplyInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	ReplyId       string                 `protobuf:"bytes,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Extra         []Reply_Extra          `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Reply_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeReplyInput) Reset() {
	*x = DescribeReplyInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeReplyInput) ProtoMessage() {}

func (x *DescribeReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeReplyInput.ProtoReflect.Descriptor instead.
func (*DescribeReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{24}
}

func (x *DescribeReplyInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *DescribeReplyInput) GetExtra() []Reply_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeReplyOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reply         *Reply                 `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeReplyOutput) Reset() {
	*x = DescribeReplyOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeReplyOutput) ProtoMessage() {}

func (x *DescribeReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeReplyOutput.ProtoReflect.Descriptor instead.
func (*DescribeReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeReplyOutput) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type DeleteReplyInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	ReplyId       string                 `protobuf:"bytes,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReplyInput) Reset() {
	*x = DeleteReplyInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReplyInput) ProtoMessage() {}

func (x *DeleteReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReplyInput.ProtoReflect.Descriptor instead.
func (*DeleteReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteReplyInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DeleteReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

type DeleteReplyOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReplyOutput) Reset() {
	*x = DeleteReplyOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReplyOutput) ProtoMessage() {}

func (x *DeleteReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReplyOutput.ProtoReflect.Descriptor instead.
func (*DeleteReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{27}
}

type UpdateReplyInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	ReplyId       string                 `protobuf:"bytes,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Message       *ecm.Content           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReplyInput) Reset() {
	*x = UpdateReplyInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplyInput) ProtoMessage() {}

func (x *UpdateReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplyInput.ProtoReflect.Descriptor instead.
func (*UpdateReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateReplyInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *UpdateReplyInput) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

type UpdateReplyOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReplyOutput) Reset() {
	*x = UpdateReplyOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplyOutput) ProtoMessage() {}

func (x *UpdateReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplyOutput.ProtoReflect.Descriptor instead.
func (*UpdateReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{29}
}

type WatchRepliesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"` // optionally, id of the last reply already received by client
	Extra         []Reply_Extra          `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Reply_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRepliesInput) Reset() {
	*x = WatchRepliesInput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRepliesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRepliesInput) ProtoMessage() {}

func (x *WatchRepliesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRepliesInput.ProtoReflect.Descriptor instead.
func (*WatchRepliesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{30}
}

func (x *WatchRepliesInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *WatchRepliesInput) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *WatchRepliesInput) GetExtra() []Reply_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchRepliesOutput struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Event         WatchRepliesOutput_Event `protobuf:"varint,1,opt,name=event,proto3,enum=eolymp.judge.WatchRepliesOutput_Event" json:"event,omitempty"`
	Reply         *Reply                   `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRepliesOutput) Reset() {
	*x = WatchRepliesOutput{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRepliesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRepliesOutput) ProtoMessage() {}

func (x *WatchRepliesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRepliesOutput.ProtoReflect.Descriptor instead.
func (*WatchRepliesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{31}
}

func (x *WatchRepliesOutput) GetEvent() WatchRepliesOutput_Event {
	if x != nil {
		return x.Event
	}
	return WatchRepliesOutput_UNKNOWN_EVENT
}

func (x *WatchRepliesOutput) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type ListTicketsInput_Filter struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID   `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	ContestId     []*wellknown.ExpressionID   `protobuf:"bytes,2,rep,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId []*wellknown.ExpressionID   `protobuf:"bytes,3,rep,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	MemberId      []*wellknown.ExpressionID   `protobuf:"bytes,8,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	IsRead        []*wellknown.ExpressionBool `protobuf:"bytes,5,rep,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	IsOpen        []*wellknown.ExpressionBool `protobuf:"bytes,6,rep,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	Own           []*wellknown.ExpressionBool `protobuf:"bytes,7,rep,name=own,proto3" json:"own,omitempty"`
	Status        []*wellknown.ExpressionEnum `protobuf:"bytes,9,rep,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsInput_Filter) Reset() {
	*x = ListTicketsInput_Filter{}
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput_Filter) ProtoMessage() {}

func (x *ListTicketsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_ticket_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListTicketsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_ticket_service_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListTicketsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetContestId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ContestId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetParticipantId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ParticipantId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetIsRead() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsRead
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetIsOpen() []*wellknown.ExpressionBool {
	if x != nil {
		return x.IsOpen
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetOwn() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Own
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_eolymp_judge_ticket_service_proto protoreflect.FileDescriptor

const file_eolymp_judge_ticket_service_proto_rawDesc = "" +
	"\n" +
	"!eolymp/judge/ticket_service.proto\x12\feolymp.judge\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x18eolymp/ecm/content.proto\x1a\x19eolymp/judge/ticket.proto\x1a\x1feolymp/judge/ticket_reply.proto\x1a eolymp/wellknown/direction.proto\x1a!eolymp/wellknown/expression.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x84\x01\n" +
	"\x12TicketChangedEvent\x12\x14\n" +
	"\x05scope\x18\n" +
	" \x01(\tR\x05scope\x12,\n" +
	"\x06before\x18\x01 \x01(\v2\x14.eolymp.judge.TicketR\x06before\x12*\n" +
	"\x05after\x18\x02 \x01(\v2\x14.eolymp.judge.TicketR\x05after\"\x88\x01\n" +
	"\x11ReplyChangedEvent\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12+\n" +
	"\x06before\x18\x02 \x01(\v2\x13.eolymp.judge.ReplyR\x06before\x12)\n" +
	"\x05after\x18\x03 \x01(\v2\x13.eolymp.judge.ReplyR\x05after\"\x9c\x01\n" +
	"\x11CreateTicketInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12-\n" +
	"\amessage\x18\x04 \x01(\v2\x13.eolymp.ecm.ContentR\amessage\x12\x1f\n" +
	"\vraw_message\x18\x03 \x01(\tR\n" +
	"rawMessage\"1\n" +
	"\x12CreateTicketOutput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\"\xc6\x01\n" +
	"\x11UpdateTicketInput\x12;\n" +
	"\x05patch\x18\x03 \x03(\x0e2%.eolymp.judge.UpdateTicketInput.PatchR\x05patch\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12,\n" +
	"\x06ticket\x18\x02 \x01(\v2\x14.eolymp.judge.TicketR\x06ticket\")\n" +
	"\x05Patch\x12\a\n" +
	"\x03ALL\x10\x00\x12\n" +
	"\n" +
	"\x06STATUS\x10\x01\x12\v\n" +
	"\aSUBJECT\x10\x02\"\x14\n" +
	"\x12UpdateTicketOutput\"\x87\x01\n" +
	"\x0fReadTicketInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x12\n" +
	"\x10ReadTicketOutput\"O\n" +
	"\x11DeleteTicketInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\"\x14\n" +
	"\x12DeleteTicketOutput\"\x84\x01\n" +
	"\x13DescribeTicketInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\x121\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1a.eolymp.judge.Ticket.ExtraR\x05extra\"D\n" +
	"\x14DescribeTicketOutput\x12,\n" +
	"\x06ticket\x18\x01 \x01(\v2\x14.eolymp.judge.TicketR\x06ticket\"\xbe\x06\n" +
	"\x10ListTicketsInput\x12\x14\n" +
	"\x05after\x18\f \x01(\tR\x05after\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12?\n" +
	"\afilters\x18( \x01(\v2%.eolymp.judge.ListTicketsInput.FilterR\afilters\x127\n" +
	"\x04sort\x182 \x01(\x0e2#.eolymp.judge.ListTicketsInput.SortR\x04sort\x121\n" +
	"\x05order\x183 \x01(\x0e2\x1b.eolymp.wellknown.DirectionR\x05order\x121\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1a.eolymp.judge.Ticket.ExtraR\x05extra\x1a\xdf\x03\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\x01 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x12=\n" +
	"\n" +
	"contest_id\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\tcontestId\x12E\n" +
	"\x0eparticipant_id\x18\x03 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\rparticipantId\x12;\n" +
	"\tmember_id\x18\b \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\bmemberId\x129\n" +
	"\ais_read\x18\x05 \x03(\v2 .eolymp.wellknown.ExpressionBoolR\x06isRead\x129\n" +
	"\ais_open\x18\x06 \x03(\v2 .eolymp.wellknown.ExpressionBoolR\x06isOpen\x122\n" +
	"\x03own\x18\a \x03(\v2 .eolymp.wellknown.ExpressionBoolR\x03own\x128\n" +
	"\x06status\x18\t \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\"&\n" +
	"\x04Sort\x12\x0e\n" +
	"\n" +
	"CREATED_AT\x10\x00\x12\x0e\n" +
	"\n" +
	"UPDATED_AT\x10\x01\"\x7f\n" +
	"\x11ListTicketsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.eolymp.judge.TicketR\x05items\x12(\n" +
	"\x10next_page_cursor\x18\x03 \x01(\tR\x0enextPageCursor\"\xa5\x01\n" +
	"\x10ReplyTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12-\n" +
	"\amessage\x18\n" +
	" \x01(\v2\x13.eolymp.ecm.ContentR\amessage\x12E\n" +
	"\x10change_status_to\x18\x14 \x01(\x0e2\x1b.eolymp.judge.Ticket.StatusR\x0echangeStatusTo\".\n" +
	"\x11ReplyTicketOutput\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\"b\n" +
	"\x10WatchTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x121\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1a.eolymp.judge.Ticket.ExtraR\x05extra\"A\n" +
	"\x11WatchTicketOutput\x12,\n" +
	"\x06ticket\x18\x01 \x01(\v2\x14.eolymp.judge.TicketR\x06ticket\"\x9a\x01\n" +
	"\x11WatchTicketsInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x121\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1a.eolymp.judge.Ticket.ExtraR\x05extra\"\xc3\x01\n" +
	"\x12WatchTicketsOutput\x12<\n" +
	"\x05event\x18\x01 \x01(\x0e2&.eolymp.judge.WatchTicketsOutput.EventR\x05event\x12,\n" +
	"\x06ticket\x18\x02 \x01(\v2\x14.eolymp.judge.TicketR\x06ticket\"A\n" +
	"\x05Event\x12\x11\n" +
	"\rUNKNOWN_EVENT\x10\x00\x12\v\n" +
	"\aCREATED\x10\x01\x12\v\n" +
	"\aUPDATED\x10\x02\x12\v\n" +
	"\aDELETED\x10\x03\"U\n" +
	"\x17WatchTicketSummaryInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\"h\n" +
	"\x18WatchTicketSummaryOutput\x12!\n" +
	"\funread_count\x18\x03 \x01(\rR\vunreadCount\x12)\n" +
	"\x10unresolved_count\x18\x04 \x01(\rR\x0funresolvedCount\"\x8d\x01\n" +
	"\x10ListRepliesInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x120\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x19.eolymp.judge.Reply.ExtraR\x05extra\"T\n" +
	"\x11ListRepliesOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12)\n" +
	"\x05items\x18\x02 \x03(\v2\x13.eolymp.judge.ReplyR\x05items\"~\n" +
	"\x12DescribeReplyInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x19\n" +
	"\breply_id\x18\x02 \x01(\tR\areplyId\x120\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x19.eolymp.judge.Reply.ExtraR\x05extra\"@\n" +
	"\x13DescribeReplyOutput\x12)\n" +
	"\x05reply\x18\x01 \x01(\v2\x13.eolymp.judge.ReplyR\x05reply\"J\n" +
	"\x10DeleteReplyInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x19\n" +
	"\breply_id\x18\x02 \x01(\tR\areplyId\"\x13\n" +
	"\x11DeleteReplyOutput\"y\n" +
	"\x10UpdateReplyInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x19\n" +
	"\breply_id\x18\x02 \x01(\tR\areplyId\x12-\n" +
	"\amessage\x18\x03 \x01(\v2\x13.eolymp.ecm.ContentR\amessage\"\x13\n" +
	"\x11UpdateReplyOutput\"z\n" +
	"\x11WatchRepliesInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\x120\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x19.eolymp.judge.Reply.ExtraR\x05extra\"\xc0\x01\n" +
	"\x12WatchRepliesOutput\x12<\n" +
	"\x05event\x18\x01 \x01(\x0e2&.eolymp.judge.WatchRepliesOutput.EventR\x05event\x12)\n" +
	"\x05reply\x18\x02 \x01(\v2\x13.eolymp.judge.ReplyR\x05reply\"A\n" +
	"\x05Event\x12\x11\n" +
	"\rUNKNOWN_EVENT\x10\x00\x12\v\n" +
	"\aCREATED\x10\x01\x12\v\n" +
	"\aUPDATED\x10\x02\x12\v\n" +
	"\aDELETED\x10\x032\xc9\x11\n" +
	"\rTicketService\x12\x93\x01\n" +
	"\fCreateTicket\x12\x1f.eolymp.judge.CreateTicketInput\x1a .eolymp.judge.CreateTicketOutput\"@\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x1d\x8a\xe3\n" +
	"\x19judge:contest:participate\x82\xd3\xe4\x93\x02\n" +
	"\"\b/tickets\x12\x99\x01\n" +
	"\fUpdateTicket\x12\x1f.eolymp.judge.UpdateTicketInput\x1a .eolymp.judge.UpdateTicketOutput\"F\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x16\"\x14/tickets/{ticket_id}\x12\x97\x01\n" +
	"\n" +
	"ReadTicket\x12\x1d.eolymp.judge.ReadTicketInput\x1a\x1e.eolymp.judge.ReadTicketOutput\"J\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x1b\"\x19/tickets/{ticket_id}/read\x12\x99\x01\n" +
	"\fDeleteTicket\x12\x1f.eolymp.judge.DeleteTicketInput\x1a .eolymp.judge.DeleteTicketOutput\"F\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x16*\x14/tickets/{ticket_id}\x12\x9e\x01\n" +
	"\x0eDescribeTicket\x12!.eolymp.judge.DescribeTicketInput\x1a\".eolymp.judge.DescribeTicketOutput\"E\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x16\x12\x14/tickets/{ticket_id}\x12\x89\x01\n" +
	"\vListTickets\x12\x1e.eolymp.judge.ListTicketsInput\x1a\x1f.eolymp.judge.ListTicketsOutput\"9\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/tickets\x12\xa4\x01\n" +
	"\vReplyTicket\x12\x1e.eolymp.judge.ReplyTicketInput\x1a\x1f.eolymp.judge.ReplyTicketOutput\"T\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x1d\x8a\xe3\n" +
	"\x19judge:contest:participate\x82\xd3\xe4\x93\x02\x1e\"\x1c/tickets/{ticket_id}/replies\x12l\n" +
	"\vWatchTicket\x12\x1e.eolymp.judge.WatchTicketInput\x1a\x1f.eolymp.judge.WatchTicketOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01\x12o\n" +
	"\fWatchTickets\x12\x1f.eolymp.judge.WatchTicketsInput\x1a .eolymp.judge.WatchTicketsOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01\x12\x81\x01\n" +
	"\x12WatchTicketSummary\x12%.eolymp.judge.WatchTicketSummaryInput\x1a&.eolymp.judge.WatchTicketSummaryOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01\x12\x9d\x01\n" +
	"\vListReplies\x12\x1e.eolymp.judge.ListRepliesInput\x1a\x1f.eolymp.judge.ListRepliesOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x1e\x12\x1c/tickets/{ticket_id}/replies\x12\xaf\x01\n" +
	"\rDescribeReply\x12 .eolymp.judge.DescribeReplyInput\x1a!.eolymp.judge.DescribeReplyOutput\"Y\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02)\x12'/tickets/{ticket_id}/replies/{reply_id}\x12\xa9\x01\n" +
	"\vDeleteReply\x12\x1e.eolymp.judge.DeleteReplyInput\x1a\x1f.eolymp.judge.DeleteReplyOutput\"Y\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02)*'/tickets/{ticket_id}/replies/{reply_id}\x12\xa9\x01\n" +
	"\vUpdateReply\x12\x1e.eolymp.judge.UpdateReplyInput\x1a\x1f.eolymp.judge.UpdateReplyOutput\"Y\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02)\"'/tickets/{ticket_id}/replies/{reply_id}\x12o\n" +
	"\fWatchReplies\x12\x1f.eolymp.judge.WatchRepliesInput\x1a .eolymp.judge.WatchRepliesOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01B-Z+github.com/eolymp/go-sdk/eolymp/judge;judgeb\x06proto3"

var (
	file_eolymp_judge_ticket_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_ticket_service_proto_rawDescData []byte
)

func file_eolymp_judge_ticket_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_ticket_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_ticket_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_judge_ticket_service_proto_rawDesc), len(file_eolymp_judge_ticket_service_proto_rawDesc)))
	})
	return file_eolymp_judge_ticket_service_proto_rawDescData
}

var file_eolymp_judge_ticket_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_eolymp_judge_ticket_service_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_eolymp_judge_ticket_service_proto_goTypes = []any{
	(UpdateTicketInput_Patch)(0),     // 0: eolymp.judge.UpdateTicketInput.Patch
	(ListTicketsInput_Sort)(0),       // 1: eolymp.judge.ListTicketsInput.Sort
	(WatchTicketsOutput_Event)(0),    // 2: eolymp.judge.WatchTicketsOutput.Event
	(WatchRepliesOutput_Event)(0),    // 3: eolymp.judge.WatchRepliesOutput.Event
	(*TicketChangedEvent)(nil),       // 4: eolymp.judge.TicketChangedEvent
	(*ReplyChangedEvent)(nil),        // 5: eolymp.judge.ReplyChangedEvent
	(*CreateTicketInput)(nil),        // 6: eolymp.judge.CreateTicketInput
	(*CreateTicketOutput)(nil),       // 7: eolymp.judge.CreateTicketOutput
	(*UpdateTicketInput)(nil),        // 8: eolymp.judge.UpdateTicketInput
	(*UpdateTicketOutput)(nil),       // 9: eolymp.judge.UpdateTicketOutput
	(*ReadTicketInput)(nil),          // 10: eolymp.judge.ReadTicketInput
	(*ReadTicketOutput)(nil),         // 11: eolymp.judge.ReadTicketOutput
	(*DeleteTicketInput)(nil),        // 12: eolymp.judge.DeleteTicketInput
	(*DeleteTicketOutput)(nil),       // 13: eolymp.judge.DeleteTicketOutput
	(*DescribeTicketInput)(nil),      // 14: eolymp.judge.DescribeTicketInput
	(*DescribeTicketOutput)(nil),     // 15: eolymp.judge.DescribeTicketOutput
	(*ListTicketsInput)(nil),         // 16: eolymp.judge.ListTicketsInput
	(*ListTicketsOutput)(nil),        // 17: eolymp.judge.ListTicketsOutput
	(*ReplyTicketInput)(nil),         // 18: eolymp.judge.ReplyTicketInput
	(*ReplyTicketOutput)(nil),        // 19: eolymp.judge.ReplyTicketOutput
	(*WatchTicketInput)(nil),         // 20: eolymp.judge.WatchTicketInput
	(*WatchTicketOutput)(nil),        // 21: eolymp.judge.WatchTicketOutput
	(*WatchTicketsInput)(nil),        // 22: eolymp.judge.WatchTicketsInput
	(*WatchTicketsOutput)(nil),       // 23: eolymp.judge.WatchTicketsOutput
	(*WatchTicketSummaryInput)(nil),  // 24: eolymp.judge.WatchTicketSummaryInput
	(*WatchTicketSummaryOutput)(nil), // 25: eolymp.judge.WatchTicketSummaryOutput
	(*ListRepliesInput)(nil),         // 26: eolymp.judge.ListRepliesInput
	(*ListRepliesOutput)(nil),        // 27: eolymp.judge.ListRepliesOutput
	(*DescribeReplyInput)(nil),       // 28: eolymp.judge.DescribeReplyInput
	(*DescribeReplyOutput)(nil),      // 29: eolymp.judge.DescribeReplyOutput
	(*DeleteReplyInput)(nil),         // 30: eolymp.judge.DeleteReplyInput
	(*DeleteReplyOutput)(nil),        // 31: eolymp.judge.DeleteReplyOutput
	(*UpdateReplyInput)(nil),         // 32: eolymp.judge.UpdateReplyInput
	(*UpdateReplyOutput)(nil),        // 33: eolymp.judge.UpdateReplyOutput
	(*WatchRepliesInput)(nil),        // 34: eolymp.judge.WatchRepliesInput
	(*WatchRepliesOutput)(nil),       // 35: eolymp.judge.WatchRepliesOutput
	(*ListTicketsInput_Filter)(nil),  // 36: eolymp.judge.ListTicketsInput.Filter
	(*Ticket)(nil),                   // 37: eolymp.judge.Ticket
	(*Reply)(nil),                    // 38: eolymp.judge.Reply
	(*ecm.Content)(nil),              // 39: eolymp.ecm.Content
	(*timestamppb.Timestamp)(nil),    // 40: google.protobuf.Timestamp
	(Ticket_Extra)(0),                // 41: eolymp.judge.Ticket.Extra
	(wellknown.Direction)(0),         // 42: eolymp.wellknown.Direction
	(Ticket_Status)(0),               // 43: eolymp.judge.Ticket.Status
	(Reply_Extra)(0),                 // 44: eolymp.judge.Reply.Extra
	(*wellknown.ExpressionID)(nil),   // 45: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionBool)(nil), // 46: eolymp.wellknown.ExpressionBool
	(*wellknown.ExpressionEnum)(nil), // 47: eolymp.wellknown.ExpressionEnum
}
var file_eolymp_judge_ticket_service_proto_depIdxs = []int32{
	37, // 0: eolymp.judge.TicketChangedEvent.before:type_name -> eolymp.judge.Ticket
	37, // 1: eolymp.judge.TicketChangedEvent.after:type_name -> eolymp.judge.Ticket
	38, // 2: eolymp.judge.ReplyChangedEvent.before:type_name -> eolymp.judge.Reply
	38, // 3: eolymp.judge.ReplyChangedEvent.after:type_name -> eolymp.judge.Reply
	39, // 4: eolymp.judge.CreateTicketInput.message:type_name -> eolymp.ecm.Content
	0,  // 5: eolymp.judge.UpdateTicketInput.patch:type_name -> eolymp.judge.UpdateTicketInput.Patch
	37, // 6: eolymp.judge.UpdateTicketInput.ticket:type_name -> eolymp.judge.Ticket
	40, // 7: eolymp.judge.ReadTicketInput.timestamp:type_name -> google.protobuf.Timestamp
	41, // 8: eolymp.judge.DescribeTicketInput.extra:type_name -> eolymp.judge.Ticket.Extra
	37, // 9: eolymp.judge.DescribeTicketOutput.ticket:type_name -> eolymp.judge.Ticket
	36, // 10: eolymp.judge.ListTicketsInput.filters:type_name -> eolymp.judge.ListTicketsInput.Filter
	1,  // 11: eolymp.judge.ListTicketsInput.sort:type_name -> eolymp.judge.ListTicketsInput.Sort
	42, // 12: eolymp.judge.ListTicketsInput.order:type_name -> eolymp.wellknown.Direction
	41, // 13: eolymp.judge.ListTicketsInput.extra:type_name -> eolymp.judge.Ticket.Extra
	37, // 14: eolymp.judge.ListTicketsOutput.items:type_name -> eolymp.judge.Ticket
	39, // 15: eolymp.judge.ReplyTicketInput.message:type_name -> eolymp.ecm.Content
	43, // 16: eolymp.judge.ReplyTicketInput.change_status_to:type_name -> eolymp.judge.Ticket.Status
	41, // 17: eolymp.judge.WatchTicketInput.extra:type_name -> eolymp.judge.Ticket.Extra
	37, // 18: eolymp.judge.WatchTicketOutput.ticket:type_name -> eolymp.judge.Ticket
	41, // 19: eolymp.judge.WatchTicketsInput.extra:type_name -> eolymp.judge.Ticket.Extra
	2,  // 20: eolymp.judge.WatchTicketsOutput.event:type_name -> eolymp.judge.WatchTicketsOutput.Event
	37, // 21: eolymp.judge.WatchTicketsOutput.ticket:type_name -> eolymp.judge.Ticket
	44, // 22: eolymp.judge.ListRepliesInput.extra:type_name -> eolymp.judge.Reply.Extra
	38, // 23: eolymp.judge.ListRepliesOutput.items:type_name -> eolymp.judge.Reply
	44, // 24: eolymp.judge.DescribeReplyInput.extra:type_name -> eolymp.judge.Reply.Extra
	38, // 25: eolymp.judge.DescribeReplyOutput.reply:type_name -> eolymp.judge.Reply
	39, // 26: eolymp.judge.UpdateReplyInput.message:type_name -> eolymp.ecm.Content
	44, // 27: eolymp.judge.WatchRepliesInput.extra:type_name -> eolymp.judge.Reply.Extra
	3,  // 28: eolymp.judge.WatchRepliesOutput.event:type_name -> eolymp.judge.WatchRepliesOutput.Event
	38, // 29: eolymp.judge.WatchRepliesOutput.reply:type_name -> eolymp.judge.Reply
	45, // 30: eolymp.judge.ListTicketsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	45, // 31: eolymp.judge.ListTicketsInput.Filter.contest_id:type_name -> eolymp.wellknown.ExpressionID
	45, // 32: eolymp.judge.ListTicketsInput.Filter.participant_id:type_name -> eolymp.wellknown.ExpressionID
	45, // 33: eolymp.judge.ListTicketsInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	46, // 34: eolymp.judge.ListTicketsInput.Filter.is_read:type_name -> eolymp.wellknown.ExpressionBool
	46, // 35: eolymp.judge.ListTicketsInput.Filter.is_open:type_name -> eolymp.wellknown.ExpressionBool
	46, // 36: eolymp.judge.ListTicketsInput.Filter.own:type_name -> eolymp.wellknown.ExpressionBool
	47, // 37: eolymp.judge.ListTicketsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	6,  // 38: eolymp.judge.TicketService.CreateTicket:input_type -> eolymp.judge.CreateTicketInput
	8,  // 39: eolymp.judge.TicketService.UpdateTicket:input_type -> eolymp.judge.UpdateTicketInput
	10, // 40: eolymp.judge.TicketService.ReadTicket:input_type -> eolymp.judge.ReadTicketInput
	12, // 41: eolymp.judge.TicketService.DeleteTicket:input_type -> eolymp.judge.DeleteTicketInput
	14, // 42: eolymp.judge.TicketService.DescribeTicket:input_type -> eolymp.judge.DescribeTicketInput
	16, // 43: eolymp.judge.TicketService.ListTickets:input_type -> eolymp.judge.ListTicketsInput
	18, // 44: eolymp.judge.TicketService.ReplyTicket:input_type -> eolymp.judge.ReplyTicketInput
	20, // 45: eolymp.judge.TicketService.WatchTicket:input_type -> eolymp.judge.WatchTicketInput
	22, // 46: eolymp.judge.TicketService.WatchTickets:input_type -> eolymp.judge.WatchTicketsInput
	24, // 47: eolymp.judge.TicketService.WatchTicketSummary:input_type -> eolymp.judge.WatchTicketSummaryInput
	26, // 48: eolymp.judge.TicketService.ListReplies:input_type -> eolymp.judge.ListRepliesInput
	28, // 49: eolymp.judge.TicketService.DescribeReply:input_type -> eolymp.judge.DescribeReplyInput
	30, // 50: eolymp.judge.TicketService.DeleteReply:input_type -> eolymp.judge.DeleteReplyInput
	32, // 51: eolymp.judge.TicketService.UpdateReply:input_type -> eolymp.judge.UpdateReplyInput
	34, // 52: eolymp.judge.TicketService.WatchReplies:input_type -> eolymp.judge.WatchRepliesInput
	7,  // 53: eolymp.judge.TicketService.CreateTicket:output_type -> eolymp.judge.CreateTicketOutput
	9,  // 54: eolymp.judge.TicketService.UpdateTicket:output_type -> eolymp.judge.UpdateTicketOutput
	11, // 55: eolymp.judge.TicketService.ReadTicket:output_type -> eolymp.judge.ReadTicketOutput
	13, // 56: eolymp.judge.TicketService.DeleteTicket:output_type -> eolymp.judge.DeleteTicketOutput
	15, // 57: eolymp.judge.TicketService.DescribeTicket:output_type -> eolymp.judge.DescribeTicketOutput
	17, // 58: eolymp.judge.TicketService.ListTickets:output_type -> eolymp.judge.ListTicketsOutput
	19, // 59: eolymp.judge.TicketService.ReplyTicket:output_type -> eolymp.judge.ReplyTicketOutput
	21, // 60: eolymp.judge.TicketService.WatchTicket:output_type -> eolymp.judge.WatchTicketOutput
	23, // 61: eolymp.judge.TicketService.WatchTickets:output_type -> eolymp.judge.WatchTicketsOutput
	25, // 62: eolymp.judge.TicketService.WatchTicketSummary:output_type -> eolymp.judge.WatchTicketSummaryOutput
	27, // 63: eolymp.judge.TicketService.ListReplies:output_type -> eolymp.judge.ListRepliesOutput
	29, // 64: eolymp.judge.TicketService.DescribeReply:output_type -> eolymp.judge.DescribeReplyOutput
	31, // 65: eolymp.judge.TicketService.DeleteReply:output_type -> eolymp.judge.DeleteReplyOutput
	33, // 66: eolymp.judge.TicketService.UpdateReply:output_type -> eolymp.judge.UpdateReplyOutput
	35, // 67: eolymp.judge.TicketService.WatchReplies:output_type -> eolymp.judge.WatchRepliesOutput
	53, // [53:68] is the sub-list for method output_type
	38, // [38:53] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_eolymp_judge_ticket_service_proto_init() }
func file_eolymp_judge_ticket_service_proto_init() {
	if File_eolymp_judge_ticket_service_proto != nil {
		return
	}
	file_eolymp_judge_ticket_proto_init()
	file_eolymp_judge_ticket_reply_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_judge_ticket_service_proto_rawDesc), len(file_eolymp_judge_ticket_service_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_ticket_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_ticket_service_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_ticket_service_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_ticket_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_ticket_service_proto = out.File
	file_eolymp_judge_ticket_service_proto_goTypes = nil
	file_eolymp_judge_ticket_service_proto_depIdxs = nil
}
