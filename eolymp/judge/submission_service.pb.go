// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/judge/submission_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Lang          string                 `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionInput) Reset() {
	*x = CreateSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionInput) ProtoMessage() {}

func (x *CreateSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionInput.ProtoReflect.Descriptor instead.
func (*CreateSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *CreateSubmissionInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *CreateSubmissionInput) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *CreateSubmissionInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type CreateSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionOutput) Reset() {
	*x = CreateSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionOutput) ProtoMessage() {}

func (x *CreateSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionOutput.ProtoReflect.Descriptor instead.
func (*CreateSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubmissionOutput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type ListSubmissionsInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ContestId string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	// pagination
	After  string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Offset int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters       *ListSubmissionsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Extra         []Submission_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Submission_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsInput) Reset() {
	*x = ListSubmissionsInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsInput) ProtoMessage() {}

func (x *ListSubmissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsInput.ProtoReflect.Descriptor instead.
func (*ListSubmissionsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListSubmissionsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListSubmissionsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListSubmissionsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSubmissionsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSubmissionsInput) GetFilters() *ListSubmissionsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListSubmissionsInput) GetExtra() []Submission_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListSubmissionsOutput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*Submission          `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string                 `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListSubmissionsOutput) Reset() {
	*x = ListSubmissionsOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsOutput) ProtoMessage() {}

func (x *ListSubmissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsOutput.ProtoReflect.Descriptor instead.
func (*ListSubmissionsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListSubmissionsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubmissionsOutput) GetItems() []*Submission {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListSubmissionsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type DescribeSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Extra         []Submission_Extra     `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Submission_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionInput) Reset() {
	*x = DescribeSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionInput) ProtoMessage() {}

func (x *DescribeSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionInput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *DescribeSubmissionInput) GetExtra() []Submission_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionOutput) Reset() {
	*x = DescribeSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionOutput) ProtoMessage() {}

func (x *DescribeSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionOutput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeSubmissionOutput) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type PrintSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrintSubmissionInput) Reset() {
	*x = PrintSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrintSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintSubmissionInput) ProtoMessage() {}

func (x *PrintSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintSubmissionInput.ProtoReflect.Descriptor instead.
func (*PrintSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{6}
}

func (x *PrintSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *PrintSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type PrintSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrintSubmissionOutput) Reset() {
	*x = PrintSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrintSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintSubmissionOutput) ProtoMessage() {}

func (x *PrintSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintSubmissionOutput.ProtoReflect.Descriptor instead.
func (*PrintSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{7}
}

type WatchSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Extra         []Submission_Extra     `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.judge.Submission_Extra" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchSubmissionInput) Reset() {
	*x = WatchSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSubmissionInput) ProtoMessage() {}

func (x *WatchSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSubmissionInput.ProtoReflect.Descriptor instead.
func (*WatchSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{8}
}

func (x *WatchSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *WatchSubmissionInput) GetExtra() []Submission_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchSubmissionOutput) Reset() {
	*x = WatchSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSubmissionOutput) ProtoMessage() {}

func (x *WatchSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSubmissionOutput.ProtoReflect.Descriptor instead.
func (*WatchSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{9}
}

func (x *WatchSubmissionOutput) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type RetestSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetestSubmissionInput) Reset() {
	*x = RetestSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetestSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetestSubmissionInput) ProtoMessage() {}

func (x *RetestSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetestSubmissionInput.ProtoReflect.Descriptor instead.
func (*RetestSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{10}
}

func (x *RetestSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *RetestSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type RetestSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetestSubmissionOutput) Reset() {
	*x = RetestSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetestSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetestSubmissionOutput) ProtoMessage() {}

func (x *RetestSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetestSubmissionOutput.ProtoReflect.Descriptor instead.
func (*RetestSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{11}
}

type DeleteSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubmissionInput) Reset() {
	*x = DeleteSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmissionInput) ProtoMessage() {}

func (x *DeleteSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmissionInput.ProtoReflect.Descriptor instead.
func (*DeleteSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DeleteSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type DeleteSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubmissionOutput) Reset() {
	*x = DeleteSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmissionOutput) ProtoMessage() {}

func (x *DeleteSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmissionOutput.ProtoReflect.Descriptor instead.
func (*DeleteSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{13}
}

type RestoreSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	SubmissionId  string                 `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreSubmissionInput) Reset() {
	*x = RestoreSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSubmissionInput) ProtoMessage() {}

func (x *RestoreSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSubmissionInput.ProtoReflect.Descriptor instead.
func (*RestoreSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{14}
}

func (x *RestoreSubmissionInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *RestoreSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type RestoreSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreSubmissionOutput) Reset() {
	*x = RestoreSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreSubmissionOutput) ProtoMessage() {}

func (x *RestoreSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreSubmissionOutput.ProtoReflect.Descriptor instead.
func (*RestoreSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{15}
}

type RetestProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetestProblemInput) Reset() {
	*x = RetestProblemInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetestProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetestProblemInput) ProtoMessage() {}

func (x *RetestProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetestProblemInput.ProtoReflect.Descriptor instead.
func (*RetestProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{16}
}

func (x *RetestProblemInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *RetestProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type RetestProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetestProblemOutput) Reset() {
	*x = RetestProblemOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetestProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetestProblemOutput) ProtoMessage() {}

func (x *RetestProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetestProblemOutput.ProtoReflect.Descriptor instead.
func (*RetestProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{17}
}

type AnalyzeSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,10,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeSubmissionInput) Reset() {
	*x = AnalyzeSubmissionInput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeSubmissionInput) ProtoMessage() {}

func (x *AnalyzeSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeSubmissionInput.ProtoReflect.Descriptor instead.
func (*AnalyzeSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{18}
}

func (x *AnalyzeSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type AnalyzeSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeSubmissionOutput) Reset() {
	*x = AnalyzeSubmissionOutput{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeSubmissionOutput) ProtoMessage() {}

func (x *AnalyzeSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeSubmissionOutput.ProtoReflect.Descriptor instead.
func (*AnalyzeSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{19}
}

// complex filters to further narrow down the search
type ListSubmissionsInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	ParticipantId []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	ProblemId     []*wellknown.ExpressionID        `protobuf:"bytes,3,rep,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Status        []*wellknown.ExpressionEnum      `protobuf:"bytes,4,rep,name=status,proto3" json:"status,omitempty"`
	Lang          []*wellknown.ExpressionEnum      `protobuf:"bytes,5,rep,name=lang,proto3" json:"lang,omitempty"`
	Score         []*wellknown.ExpressionFloat     `protobuf:"bytes,6,rep,name=score,proto3" json:"score,omitempty"`
	Percentage    []*wellknown.ExpressionFloat     `protobuf:"bytes,7,rep,name=percentage,proto3" json:"percentage,omitempty"`
	SubmittedAt   []*wellknown.ExpressionTimestamp `protobuf:"bytes,8,rep,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Signature     []*wellknown.ExpressionEnum      `protobuf:"bytes,9,rep,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsInput_Filter) Reset() {
	*x = ListSubmissionsInput_Filter{}
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsInput_Filter) ProtoMessage() {}

func (x *ListSubmissionsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_submission_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListSubmissionsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_submission_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListSubmissionsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetParticipantId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ParticipantId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetProblemId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ProblemId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetLang() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Lang
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetScore() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetPercentage() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Percentage
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetSubmittedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetSignature() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_eolymp_judge_submission_service_proto protoreflect.FileDescriptor

const file_eolymp_judge_submission_service_proto_rawDesc = "" +
	"\n" +
	"%eolymp/judge/submission_service.proto\x12\feolymp.judge\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1deolymp/judge/submission.proto\x1a!eolymp/wellknown/expression.proto\"\x81\x01\n" +
	"\x15CreateSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\x12\x12\n" +
	"\x04lang\x18\x03 \x01(\tR\x04lang\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\"=\n" +
	"\x16CreateSubmissionOutput\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"\xaa\x06\n" +
	"\x14ListSubmissionsInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x14\n" +
	"\x05after\x18\f \x01(\tR\x05after\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12C\n" +
	"\afilters\x18( \x01(\v2).eolymp.judge.ListSubmissionsInput.FilterR\afilters\x125\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1e.eolymp.judge.Submission.ExtraR\x05extra\x1a\xb4\x04\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\x01 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x12E\n" +
	"\x0eparticipant_id\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\rparticipantId\x12=\n" +
	"\n" +
	"problem_id\x18\x03 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\tproblemId\x128\n" +
	"\x06status\x18\x04 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\x124\n" +
	"\x04lang\x18\x05 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x04lang\x127\n" +
	"\x05score\x18\x06 \x03(\v2!.eolymp.wellknown.ExpressionFloatR\x05score\x12A\n" +
	"\n" +
	"percentage\x18\a \x03(\v2!.eolymp.wellknown.ExpressionFloatR\n" +
	"percentage\x12H\n" +
	"\fsubmitted_at\x18\b \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\vsubmittedAt\x12>\n" +
	"\tsignature\x18\t \x03(\v2 .eolymp.wellknown.ExpressionEnumR\tsignature\"\x87\x01\n" +
	"\x15ListSubmissionsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.eolymp.judge.SubmissionR\x05items\x12(\n" +
	"\x10next_page_cursor\x18\x03 \x01(\tR\x0enextPageCursor\"\x94\x01\n" +
	"\x17DescribeSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\x125\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1e.eolymp.judge.Submission.ExtraR\x05extra\"T\n" +
	"\x18DescribeSubmissionOutput\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.judge.SubmissionR\n" +
	"submission\"Z\n" +
	"\x14PrintSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\"\x17\n" +
	"\x15PrintSubmissionOutput\"\x91\x01\n" +
	"\x14WatchSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\x125\n" +
	"\x05extra\x18\xe3\b \x03(\x0e2\x1e.eolymp.judge.Submission.ExtraR\x05extra\"Q\n" +
	"\x15WatchSubmissionOutput\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.judge.SubmissionR\n" +
	"submission\"[\n" +
	"\x15RetestSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\"\x18\n" +
	"\x16RetestSubmissionOutput\"[\n" +
	"\x15DeleteSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\"\x18\n" +
	"\x16DeleteSubmissionOutput\"\\\n" +
	"\x16RestoreSubmissionInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12#\n" +
	"\rsubmission_id\x18\x02 \x01(\tR\fsubmissionId\"\x19\n" +
	"\x17RestoreSubmissionOutput\"R\n" +
	"\x12RetestProblemInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"\x15\n" +
	"\x13RetestProblemOutput\"=\n" +
	"\x16AnalyzeSubmissionInput\x12#\n" +
	"\rsubmission_id\x18\n" +
	" \x01(\tR\fsubmissionId\"\x19\n" +
	"\x17AnalyzeSubmissionOutput2\xd1\r\n" +
	"\x11SubmissionService\x12\xb9\x01\n" +
	"\x10CreateSubmission\x12#.eolymp.judge.CreateSubmissionInput\x1a$.eolymp.judge.CreateSubmissionOutput\"Z\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x1d\x8a\xe3\n" +
	"\x19judge:contest:participate\x82\xd3\xe4\x93\x02$\"\"/problems/{problem_id}/submissions\x12\x99\x01\n" +
	"\x0fListSubmissions\x12\".eolymp.judge.ListSubmissionsInput\x1a#.eolymp.judge.ListSubmissionsOutput\"=\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x0e\x12\f/submissions\x12\xb2\x01\n" +
	"\x12DescribeSubmission\x12%.eolymp.judge.DescribeSubmissionInput\x1a&.eolymp.judge.DescribeSubmissionOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x1e\x12\x1c/submissions/{submission_id}\x12\xaf\x01\n" +
	"\x0fPrintSubmission\x12\".eolymp.judge.PrintSubmissionInput\x1a#.eolymp.judge.PrintSubmissionOutput\"S\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x02\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02$\"\"/submissions/{submission_id}/print\x12x\n" +
	"\x0fWatchSubmission\x12\".eolymp.judge.WatchSubmissionInput\x1a#.eolymp.judge.WatchSubmissionOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01\x12\xb4\x01\n" +
	"\x10RetestSubmission\x12#.eolymp.judge.RetestSubmissionInput\x1a$.eolymp.judge.RetestSubmissionOutput\"U\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02%\"#/submissions/{submission_id}/retest\x12\xad\x01\n" +
	"\x10DeleteSubmission\x12#.eolymp.judge.DeleteSubmissionInput\x1a$.eolymp.judge.DeleteSubmissionOutput\"N\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1e*\x1c/submissions/{submission_id}\x12\xb8\x01\n" +
	"\x11RestoreSubmission\x12$.eolymp.judge.RestoreSubmissionInput\x1a%.eolymp.judge.RestoreSubmissionOutput\"V\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02&\"$/submissions/{submission_id}/restore\x12\xa5\x01\n" +
	"\rRetestProblem\x12 .eolymp.judge.RetestProblemInput\x1a!.eolymp.judge.RetestProblemOutput\"O\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1f\x12\x1d/problems/{problem_id}/retest\x12\xb8\x01\n" +
	"\x11AnalyzeSubmission\x12$.eolymp.judge.AnalyzeSubmissionInput\x1a%.eolymp.judge.AnalyzeSubmissionOutput\"V\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02&\"$/submissions/{submission_id}/analyzeB-Z+github.com/eolymp/go-sdk/eolymp/judge;judgeb\x06proto3"

var (
	file_eolymp_judge_submission_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_submission_service_proto_rawDescData []byte
)

func file_eolymp_judge_submission_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_submission_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_submission_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_judge_submission_service_proto_rawDesc), len(file_eolymp_judge_submission_service_proto_rawDesc)))
	})
	return file_eolymp_judge_submission_service_proto_rawDescData
}

var file_eolymp_judge_submission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_eolymp_judge_submission_service_proto_goTypes = []any{
	(*CreateSubmissionInput)(nil),         // 0: eolymp.judge.CreateSubmissionInput
	(*CreateSubmissionOutput)(nil),        // 1: eolymp.judge.CreateSubmissionOutput
	(*ListSubmissionsInput)(nil),          // 2: eolymp.judge.ListSubmissionsInput
	(*ListSubmissionsOutput)(nil),         // 3: eolymp.judge.ListSubmissionsOutput
	(*DescribeSubmissionInput)(nil),       // 4: eolymp.judge.DescribeSubmissionInput
	(*DescribeSubmissionOutput)(nil),      // 5: eolymp.judge.DescribeSubmissionOutput
	(*PrintSubmissionInput)(nil),          // 6: eolymp.judge.PrintSubmissionInput
	(*PrintSubmissionOutput)(nil),         // 7: eolymp.judge.PrintSubmissionOutput
	(*WatchSubmissionInput)(nil),          // 8: eolymp.judge.WatchSubmissionInput
	(*WatchSubmissionOutput)(nil),         // 9: eolymp.judge.WatchSubmissionOutput
	(*RetestSubmissionInput)(nil),         // 10: eolymp.judge.RetestSubmissionInput
	(*RetestSubmissionOutput)(nil),        // 11: eolymp.judge.RetestSubmissionOutput
	(*DeleteSubmissionInput)(nil),         // 12: eolymp.judge.DeleteSubmissionInput
	(*DeleteSubmissionOutput)(nil),        // 13: eolymp.judge.DeleteSubmissionOutput
	(*RestoreSubmissionInput)(nil),        // 14: eolymp.judge.RestoreSubmissionInput
	(*RestoreSubmissionOutput)(nil),       // 15: eolymp.judge.RestoreSubmissionOutput
	(*RetestProblemInput)(nil),            // 16: eolymp.judge.RetestProblemInput
	(*RetestProblemOutput)(nil),           // 17: eolymp.judge.RetestProblemOutput
	(*AnalyzeSubmissionInput)(nil),        // 18: eolymp.judge.AnalyzeSubmissionInput
	(*AnalyzeSubmissionOutput)(nil),       // 19: eolymp.judge.AnalyzeSubmissionOutput
	(*ListSubmissionsInput_Filter)(nil),   // 20: eolymp.judge.ListSubmissionsInput.Filter
	(Submission_Extra)(0),                 // 21: eolymp.judge.Submission.Extra
	(*Submission)(nil),                    // 22: eolymp.judge.Submission
	(*wellknown.ExpressionID)(nil),        // 23: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionEnum)(nil),      // 24: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionFloat)(nil),     // 25: eolymp.wellknown.ExpressionFloat
	(*wellknown.ExpressionTimestamp)(nil), // 26: eolymp.wellknown.ExpressionTimestamp
}
var file_eolymp_judge_submission_service_proto_depIdxs = []int32{
	20, // 0: eolymp.judge.ListSubmissionsInput.filters:type_name -> eolymp.judge.ListSubmissionsInput.Filter
	21, // 1: eolymp.judge.ListSubmissionsInput.extra:type_name -> eolymp.judge.Submission.Extra
	22, // 2: eolymp.judge.ListSubmissionsOutput.items:type_name -> eolymp.judge.Submission
	21, // 3: eolymp.judge.DescribeSubmissionInput.extra:type_name -> eolymp.judge.Submission.Extra
	22, // 4: eolymp.judge.DescribeSubmissionOutput.submission:type_name -> eolymp.judge.Submission
	21, // 5: eolymp.judge.WatchSubmissionInput.extra:type_name -> eolymp.judge.Submission.Extra
	22, // 6: eolymp.judge.WatchSubmissionOutput.submission:type_name -> eolymp.judge.Submission
	23, // 7: eolymp.judge.ListSubmissionsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	23, // 8: eolymp.judge.ListSubmissionsInput.Filter.participant_id:type_name -> eolymp.wellknown.ExpressionID
	23, // 9: eolymp.judge.ListSubmissionsInput.Filter.problem_id:type_name -> eolymp.wellknown.ExpressionID
	24, // 10: eolymp.judge.ListSubmissionsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	24, // 11: eolymp.judge.ListSubmissionsInput.Filter.lang:type_name -> eolymp.wellknown.ExpressionEnum
	25, // 12: eolymp.judge.ListSubmissionsInput.Filter.score:type_name -> eolymp.wellknown.ExpressionFloat
	25, // 13: eolymp.judge.ListSubmissionsInput.Filter.percentage:type_name -> eolymp.wellknown.ExpressionFloat
	26, // 14: eolymp.judge.ListSubmissionsInput.Filter.submitted_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	24, // 15: eolymp.judge.ListSubmissionsInput.Filter.signature:type_name -> eolymp.wellknown.ExpressionEnum
	0,  // 16: eolymp.judge.SubmissionService.CreateSubmission:input_type -> eolymp.judge.CreateSubmissionInput
	2,  // 17: eolymp.judge.SubmissionService.ListSubmissions:input_type -> eolymp.judge.ListSubmissionsInput
	4,  // 18: eolymp.judge.SubmissionService.DescribeSubmission:input_type -> eolymp.judge.DescribeSubmissionInput
	6,  // 19: eolymp.judge.SubmissionService.PrintSubmission:input_type -> eolymp.judge.PrintSubmissionInput
	8,  // 20: eolymp.judge.SubmissionService.WatchSubmission:input_type -> eolymp.judge.WatchSubmissionInput
	10, // 21: eolymp.judge.SubmissionService.RetestSubmission:input_type -> eolymp.judge.RetestSubmissionInput
	12, // 22: eolymp.judge.SubmissionService.DeleteSubmission:input_type -> eolymp.judge.DeleteSubmissionInput
	14, // 23: eolymp.judge.SubmissionService.RestoreSubmission:input_type -> eolymp.judge.RestoreSubmissionInput
	16, // 24: eolymp.judge.SubmissionService.RetestProblem:input_type -> eolymp.judge.RetestProblemInput
	18, // 25: eolymp.judge.SubmissionService.AnalyzeSubmission:input_type -> eolymp.judge.AnalyzeSubmissionInput
	1,  // 26: eolymp.judge.SubmissionService.CreateSubmission:output_type -> eolymp.judge.CreateSubmissionOutput
	3,  // 27: eolymp.judge.SubmissionService.ListSubmissions:output_type -> eolymp.judge.ListSubmissionsOutput
	5,  // 28: eolymp.judge.SubmissionService.DescribeSubmission:output_type -> eolymp.judge.DescribeSubmissionOutput
	7,  // 29: eolymp.judge.SubmissionService.PrintSubmission:output_type -> eolymp.judge.PrintSubmissionOutput
	9,  // 30: eolymp.judge.SubmissionService.WatchSubmission:output_type -> eolymp.judge.WatchSubmissionOutput
	11, // 31: eolymp.judge.SubmissionService.RetestSubmission:output_type -> eolymp.judge.RetestSubmissionOutput
	13, // 32: eolymp.judge.SubmissionService.DeleteSubmission:output_type -> eolymp.judge.DeleteSubmissionOutput
	15, // 33: eolymp.judge.SubmissionService.RestoreSubmission:output_type -> eolymp.judge.RestoreSubmissionOutput
	17, // 34: eolymp.judge.SubmissionService.RetestProblem:output_type -> eolymp.judge.RetestProblemOutput
	19, // 35: eolymp.judge.SubmissionService.AnalyzeSubmission:output_type -> eolymp.judge.AnalyzeSubmissionOutput
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_eolymp_judge_submission_service_proto_init() }
func file_eolymp_judge_submission_service_proto_init() {
	if File_eolymp_judge_submission_service_proto != nil {
		return
	}
	file_eolymp_judge_submission_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_judge_submission_service_proto_rawDesc), len(file_eolymp_judge_submission_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_submission_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_submission_service_proto_depIdxs,
		MessageInfos:      file_eolymp_judge_submission_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_submission_service_proto = out.File
	file_eolymp_judge_submission_service_proto_goTypes = nil
	file_eolymp_judge_submission_service_proto_depIdxs = nil
}
