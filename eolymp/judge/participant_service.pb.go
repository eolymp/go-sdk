// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: eolymp/judge/participant_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	ecm "github.com/eolymp/go-sdk/eolymp/ecm"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateParticipantInput_Patch int32

const (
	UpdateParticipantInput_ALL        UpdateParticipantInput_Patch = 0
	UpdateParticipantInput_NAME       UpdateParticipantInput_Patch = 1
	UpdateParticipantInput_BONUS_TIME UpdateParticipantInput_Patch = 3
	UpdateParticipantInput_UNOFFICIAL UpdateParticipantInput_Patch = 4
	UpdateParticipantInput_MEDAL      UpdateParticipantInput_Patch = 5
	UpdateParticipantInput_ACTIVE     UpdateParticipantInput_Patch = 6
	UpdateParticipantInput_PASSCODE   UpdateParticipantInput_Patch = 7
)

// Enum value maps for UpdateParticipantInput_Patch.
var (
	UpdateParticipantInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "NAME",
		3: "BONUS_TIME",
		4: "UNOFFICIAL",
		5: "MEDAL",
		6: "ACTIVE",
		7: "PASSCODE",
	}
	UpdateParticipantInput_Patch_value = map[string]int32{
		"ALL":        0,
		"NAME":       1,
		"BONUS_TIME": 3,
		"UNOFFICIAL": 4,
		"MEDAL":      5,
		"ACTIVE":     6,
		"PASSCODE":   7,
	}
)

func (x UpdateParticipantInput_Patch) Enum() *UpdateParticipantInput_Patch {
	p := new(UpdateParticipantInput_Patch)
	*p = x
	return p
}

func (x UpdateParticipantInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateParticipantInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_participant_service_proto_enumTypes[0].Descriptor()
}

func (UpdateParticipantInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_judge_participant_service_proto_enumTypes[0]
}

func (x UpdateParticipantInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateParticipantInput_Patch.Descriptor instead.
func (UpdateParticipantInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{8, 0}
}

type ListParticipantsInput_Sortable int32

const (
	ListParticipantsInput_RANK        ListParticipantsInput_Sortable = 0
	ListParticipantsInput_SCORE       ListParticipantsInput_Sortable = 1
	ListParticipantsInput_PENALTY     ListParticipantsInput_Sortable = 2
	ListParticipantsInput_STARTED_AT  ListParticipantsInput_Sortable = 3
	ListParticipantsInput_COMPLETE_AT ListParticipantsInput_Sortable = 4
)

// Enum value maps for ListParticipantsInput_Sortable.
var (
	ListParticipantsInput_Sortable_name = map[int32]string{
		0: "RANK",
		1: "SCORE",
		2: "PENALTY",
		3: "STARTED_AT",
		4: "COMPLETE_AT",
	}
	ListParticipantsInput_Sortable_value = map[string]int32{
		"RANK":        0,
		"SCORE":       1,
		"PENALTY":     2,
		"STARTED_AT":  3,
		"COMPLETE_AT": 4,
	}
)

func (x ListParticipantsInput_Sortable) Enum() *ListParticipantsInput_Sortable {
	p := new(ListParticipantsInput_Sortable)
	*p = x
	return p
}

func (x ListParticipantsInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListParticipantsInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_participant_service_proto_enumTypes[1].Descriptor()
}

func (ListParticipantsInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_judge_participant_service_proto_enumTypes[1]
}

func (x ListParticipantsInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListParticipantsInput_Sortable.Descriptor instead.
func (ListParticipantsInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{22, 0}
}

type AddParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId   string       `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Participant *Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *AddParticipantInput) Reset() {
	*x = AddParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddParticipantInput) ProtoMessage() {}

func (x *AddParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddParticipantInput.ProtoReflect.Descriptor instead.
func (*AddParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *AddParticipantInput) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type AddParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantId string `protobuf:"bytes,1,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *AddParticipantOutput) Reset() {
	*x = AddParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddParticipantOutput) ProtoMessage() {}

func (x *AddParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddParticipantOutput.ProtoReflect.Descriptor instead.
func (*AddParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddParticipantOutput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type EnableParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *EnableParticipantInput) Reset() {
	*x = EnableParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableParticipantInput) ProtoMessage() {}

func (x *EnableParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableParticipantInput.ProtoReflect.Descriptor instead.
func (*EnableParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{2}
}

func (x *EnableParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *EnableParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type EnableParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableParticipantOutput) Reset() {
	*x = EnableParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableParticipantOutput) ProtoMessage() {}

func (x *EnableParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableParticipantOutput.ProtoReflect.Descriptor instead.
func (*EnableParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{3}
}

type DisableParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *DisableParticipantInput) Reset() {
	*x = DisableParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableParticipantInput) ProtoMessage() {}

func (x *DisableParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableParticipantInput.ProtoReflect.Descriptor instead.
func (*DisableParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{4}
}

func (x *DisableParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DisableParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type DisableParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableParticipantOutput) Reset() {
	*x = DisableParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableParticipantOutput) ProtoMessage() {}

func (x *DisableParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableParticipantOutput.ProtoReflect.Descriptor instead.
func (*DisableParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{5}
}

type DisqualifyParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string       `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string       `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	Disqualify    bool         `protobuf:"varint,3,opt,name=disqualify,proto3" json:"disqualify,omitempty"` // true to disqualify, false to un-disqualify
	Reason        *ecm.Content `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`          // reason for disqualification
}

func (x *DisqualifyParticipantInput) Reset() {
	*x = DisqualifyParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisqualifyParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisqualifyParticipantInput) ProtoMessage() {}

func (x *DisqualifyParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisqualifyParticipantInput.ProtoReflect.Descriptor instead.
func (*DisqualifyParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{6}
}

func (x *DisqualifyParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DisqualifyParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *DisqualifyParticipantInput) GetDisqualify() bool {
	if x != nil {
		return x.Disqualify
	}
	return false
}

func (x *DisqualifyParticipantInput) GetReason() *ecm.Content {
	if x != nil {
		return x.Reason
	}
	return nil
}

type DisqualifyParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisqualifyParticipantOutput) Reset() {
	*x = DisqualifyParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisqualifyParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisqualifyParticipantOutput) ProtoMessage() {}

func (x *DisqualifyParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisqualifyParticipantOutput.ProtoReflect.Descriptor instead.
func (*DisqualifyParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{7}
}

type UpdateParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Patch request to update participant partially (all fields are updated if not specified)
	Patch []UpdateParticipantInput_Patch `protobuf:"varint,3,rep,packed,name=patch,proto3,enum=eolymp.judge.UpdateParticipantInput_Patch" json:"patch,omitempty"`
	// Participant identifier to update
	ContestId     string       `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string       `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	Participant   *Participant `protobuf:"bytes,4,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *UpdateParticipantInput) Reset() {
	*x = UpdateParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParticipantInput) ProtoMessage() {}

func (x *UpdateParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParticipantInput.ProtoReflect.Descriptor instead.
func (*UpdateParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateParticipantInput) GetPatch() []UpdateParticipantInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *UpdateParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *UpdateParticipantInput) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type UpdateParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateParticipantOutput) Reset() {
	*x = UpdateParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParticipantOutput) ProtoMessage() {}

func (x *UpdateParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParticipantOutput.ProtoReflect.Descriptor instead.
func (*UpdateParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{9}
}

type RemoveParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *RemoveParticipantInput) Reset() {
	*x = RemoveParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveParticipantInput) ProtoMessage() {}

func (x *RemoveParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveParticipantInput.ProtoReflect.Descriptor instead.
func (*RemoveParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *RemoveParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type RemoveParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveParticipantOutput) Reset() {
	*x = RemoveParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveParticipantOutput) ProtoMessage() {}

func (x *RemoveParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveParticipantOutput.ProtoReflect.Descriptor instead.
func (*RemoveParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{11}
}

type VerifyPasscodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
}

func (x *VerifyPasscodeInput) Reset() {
	*x = VerifyPasscodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasscodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasscodeInput) ProtoMessage() {}

func (x *VerifyPasscodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasscodeInput.ProtoReflect.Descriptor instead.
func (*VerifyPasscodeInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{12}
}

func (x *VerifyPasscodeInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type VerifyPasscodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required,omitempty"`
	Valid    bool `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *VerifyPasscodeOutput) Reset() {
	*x = VerifyPasscodeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasscodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasscodeOutput) ProtoMessage() {}

func (x *VerifyPasscodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasscodeOutput.ProtoReflect.Descriptor instead.
func (*VerifyPasscodeOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{13}
}

func (x *VerifyPasscodeOutput) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *VerifyPasscodeOutput) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type EnterPasscodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Passcode  string `protobuf:"bytes,2,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *EnterPasscodeInput) Reset() {
	*x = EnterPasscodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPasscodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPasscodeInput) ProtoMessage() {}

func (x *EnterPasscodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPasscodeInput.ProtoReflect.Descriptor instead.
func (*EnterPasscodeInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{14}
}

func (x *EnterPasscodeInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *EnterPasscodeInput) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

type EnterPasscodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterPasscodeOutput) Reset() {
	*x = EnterPasscodeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPasscodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPasscodeOutput) ProtoMessage() {}

func (x *EnterPasscodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPasscodeOutput.ProtoReflect.Descriptor instead.
func (*EnterPasscodeOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{15}
}

type ResetPasscodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *ResetPasscodeInput) Reset() {
	*x = ResetPasscodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasscodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasscodeInput) ProtoMessage() {}

func (x *ResetPasscodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasscodeInput.ProtoReflect.Descriptor instead.
func (*ResetPasscodeInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{16}
}

func (x *ResetPasscodeInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ResetPasscodeInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type ResetPasscodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passcode string `protobuf:"bytes,1,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *ResetPasscodeOutput) Reset() {
	*x = ResetPasscodeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasscodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasscodeOutput) ProtoMessage() {}

func (x *ResetPasscodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasscodeOutput.ProtoReflect.Descriptor instead.
func (*ResetPasscodeOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{17}
}

func (x *ResetPasscodeOutput) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

type SetPasscodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	Passcode      string `protobuf:"bytes,3,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *SetPasscodeInput) Reset() {
	*x = SetPasscodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPasscodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPasscodeInput) ProtoMessage() {}

func (x *SetPasscodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPasscodeInput.ProtoReflect.Descriptor instead.
func (*SetPasscodeInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{18}
}

func (x *SetPasscodeInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *SetPasscodeInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *SetPasscodeInput) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

type SetPasscodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPasscodeOutput) Reset() {
	*x = SetPasscodeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPasscodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPasscodeOutput) ProtoMessage() {}

func (x *SetPasscodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPasscodeOutput.ProtoReflect.Descriptor instead.
func (*SetPasscodeOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{19}
}

type RemovePasscodeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *RemovePasscodeInput) Reset() {
	*x = RemovePasscodeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePasscodeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePasscodeInput) ProtoMessage() {}

func (x *RemovePasscodeInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePasscodeInput.ProtoReflect.Descriptor instead.
func (*RemovePasscodeInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{20}
}

func (x *RemovePasscodeInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *RemovePasscodeInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type RemovePasscodeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePasscodeOutput) Reset() {
	*x = RemovePasscodeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePasscodeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePasscodeOutput) ProtoMessage() {}

func (x *RemovePasscodeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePasscodeOutput.ProtoReflect.Descriptor instead.
func (*RemovePasscodeOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{21}
}

type ListParticipantsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string                         `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Offset    int32                          `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size      int32                          `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Filters   *ListParticipantsInput_Filter  `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort      ListParticipantsInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.judge.ListParticipantsInput_Sortable" json:"sort,omitempty"`
	Order     wellknown.Direction            `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
}

func (x *ListParticipantsInput) Reset() {
	*x = ListParticipantsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParticipantsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantsInput) ProtoMessage() {}

func (x *ListParticipantsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantsInput.ProtoReflect.Descriptor instead.
func (*ListParticipantsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListParticipantsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListParticipantsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListParticipantsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListParticipantsInput) GetFilters() *ListParticipantsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListParticipantsInput) GetSort() ListParticipantsInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListParticipantsInput_RANK
}

func (x *ListParticipantsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

type ListParticipantsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Participant `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListParticipantsOutput) Reset() {
	*x = ListParticipantsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParticipantsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantsOutput) ProtoMessage() {}

func (x *ListParticipantsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantsOutput.ProtoReflect.Descriptor instead.
func (*ListParticipantsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListParticipantsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListParticipantsOutput) GetItems() []*Participant {
	if x != nil {
		return x.Items
	}
	return nil
}

type JoinContestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
}

func (x *JoinContestInput) Reset() {
	*x = JoinContestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinContestInput) ProtoMessage() {}

func (x *JoinContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinContestInput.ProtoReflect.Descriptor instead.
func (*JoinContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{24}
}

func (x *JoinContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type JoinContestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinContestOutput) Reset() {
	*x = JoinContestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinContestOutput) ProtoMessage() {}

func (x *JoinContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinContestOutput.ProtoReflect.Descriptor instead.
func (*JoinContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{25}
}

type StartContestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
}

func (x *StartContestInput) Reset() {
	*x = StartContestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartContestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContestInput) ProtoMessage() {}

func (x *StartContestInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContestInput.ProtoReflect.Descriptor instead.
func (*StartContestInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{26}
}

func (x *StartContestInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type StartContestOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartContestOutput) Reset() {
	*x = StartContestOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartContestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContestOutput) ProtoMessage() {}

func (x *StartContestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContestOutput.ProtoReflect.Descriptor instead.
func (*StartContestOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{27}
}

type IntrospectParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
}

func (x *IntrospectParticipantInput) Reset() {
	*x = IntrospectParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectParticipantInput) ProtoMessage() {}

func (x *IntrospectParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectParticipantInput.ProtoReflect.Descriptor instead.
func (*IntrospectParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{28}
}

func (x *IntrospectParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type IntrospectParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant *Participant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *IntrospectParticipantOutput) Reset() {
	*x = IntrospectParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectParticipantOutput) ProtoMessage() {}

func (x *IntrospectParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectParticipantOutput.ProtoReflect.Descriptor instead.
func (*IntrospectParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{29}
}

func (x *IntrospectParticipantOutput) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type WatchParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *WatchParticipantInput) Reset() {
	*x = WatchParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchParticipantInput) ProtoMessage() {}

func (x *WatchParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchParticipantInput.ProtoReflect.Descriptor instead.
func (*WatchParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{30}
}

func (x *WatchParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type WatchParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant *Participant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *WatchParticipantOutput) Reset() {
	*x = WatchParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchParticipantOutput) ProtoMessage() {}

func (x *WatchParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchParticipantOutput.ProtoReflect.Descriptor instead.
func (*WatchParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{31}
}

func (x *WatchParticipantOutput) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type DescribeParticipantInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContestId     string `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *DescribeParticipantInput) Reset() {
	*x = DescribeParticipantInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeParticipantInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeParticipantInput) ProtoMessage() {}

func (x *DescribeParticipantInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeParticipantInput.ProtoReflect.Descriptor instead.
func (*DescribeParticipantInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{32}
}

func (x *DescribeParticipantInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeParticipantInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type DescribeParticipantOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant *Participant `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *DescribeParticipantOutput) Reset() {
	*x = DescribeParticipantOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeParticipantOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeParticipantOutput) ProtoMessage() {}

func (x *DescribeParticipantOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeParticipantOutput.ProtoReflect.Descriptor instead.
func (*DescribeParticipantOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{33}
}

func (x *DescribeParticipantOutput) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

// complex filters to further narrow down the search
type ListParticipantsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         []*wellknown.ExpressionID        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	MemberId   []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Name       []*wellknown.ExpressionString    `protobuf:"bytes,8,rep,name=name,proto3" json:"name,omitempty"`
	Status     []*wellknown.ExpressionEnum      `protobuf:"bytes,3,rep,name=status,proto3" json:"status,omitempty"`
	Score      []*wellknown.ExpressionFloat     `protobuf:"bytes,4,rep,name=score,proto3" json:"score,omitempty"`
	Penalty    []*wellknown.ExpressionFloat     `protobuf:"bytes,5,rep,name=penalty,proto3" json:"penalty,omitempty"`
	StartedAt  []*wellknown.ExpressionTimestamp `protobuf:"bytes,6,rep,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompleteAt []*wellknown.ExpressionTimestamp `protobuf:"bytes,7,rep,name=complete_at,json=completeAt,proto3" json:"complete_at,omitempty"`
}

func (x *ListParticipantsInput_Filter) Reset() {
	*x = ListParticipantsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_judge_participant_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParticipantsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantsInput_Filter) ProtoMessage() {}

func (x *ListParticipantsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_participant_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListParticipantsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_participant_service_proto_rawDescGZIP(), []int{22, 0}
}

func (x *ListParticipantsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetName() []*wellknown.ExpressionString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetScore() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetPenalty() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Penalty
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetStartedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ListParticipantsInput_Filter) GetCompleteAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.CompleteAt
	}
	return nil
}

var File_eolymp_judge_participant_service_proto protoreflect.FileDescriptor

var file_eolymp_judge_participant_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2f, 0x65, 0x63, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x16, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5f, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x44, 0x69, 0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x65, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x69, 0x73, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x40,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x4f, 0x46, 0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x45, 0x44, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x43, 0x4f,
	0x44, 0x45, 0x10, 0x07, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x5e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x48, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x12, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x5a, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x74, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5b, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0xda, 0x06, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x31,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0xeb, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x22,
	0x4d, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52,
	0x41, 0x4e, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x41, 0x4c, 0x54, 0x59, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x54, 0x10, 0x04, 0x22, 0x5f,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x31, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x3b, 0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5a,
	0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x15, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x16, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x22, 0x60, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x32, 0x9e, 0x16, 0x0a,
	0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3f, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3,
	0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22,
	0x0d, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0xb9,
	0x01, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x57, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2,
	0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x22, 0x25, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x12, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x58, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a,
	0x32, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x22, 0x26, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0xc9, 0x01, 0x0a, 0x15, 0x44,
	0x69, 0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x29,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x69,
	0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3,
	0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x29, 0x2f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x12, 0xb2, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x50, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3,
	0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x1a, 0x1e, 0x2f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb2, 0x01, 0x0a, 0x11,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x50,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82,
	0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x2a, 0x1e, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x9d, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x3e, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a,
	0x05, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x12, 0x0d, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0xb8, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x50, 0xea, 0xe2, 0x0a, 0x0c, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x48, 0x42, 0xf8, 0xe2, 0x0a, 0xc8, 0x01, 0x82, 0xe3, 0x0a, 0x16, 0x8a,
	0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x90, 0x01, 0x0a, 0x15,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x22, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x12, 0x0b, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x7b,
	0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1a, 0x82,
	0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x30, 0x01, 0x12, 0x6c, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1c, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x03, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x07, 0x22, 0x05, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x91, 0x01, 0x0a, 0x0c, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3e, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x03, 0x82, 0xe3,
	0x0a, 0x1d, 0x8a, 0xe3, 0x0a, 0x19, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x3a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x08, 0x22, 0x06, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x9a, 0x01,
	0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x41, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x72, 0x65,
	0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x10, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x0d, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x47, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2,
	0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1d, 0x8a, 0xe3, 0x0a, 0x19, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0f, 0x2f, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2d, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x59, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2,
	0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x22, 0x27, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0xa9, 0x01, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x59, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3,
	0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x1a,
	0x27, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x59, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x20, 0x41, 0xf8,
	0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x3a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_judge_participant_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_participant_service_proto_rawDescData = file_eolymp_judge_participant_service_proto_rawDesc
)

func file_eolymp_judge_participant_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_participant_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_participant_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_judge_participant_service_proto_rawDescData)
	})
	return file_eolymp_judge_participant_service_proto_rawDescData
}

var file_eolymp_judge_participant_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_judge_participant_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_eolymp_judge_participant_service_proto_goTypes = []any{
	(UpdateParticipantInput_Patch)(0),     // 0: eolymp.judge.UpdateParticipantInput.Patch
	(ListParticipantsInput_Sortable)(0),   // 1: eolymp.judge.ListParticipantsInput.Sortable
	(*AddParticipantInput)(nil),           // 2: eolymp.judge.AddParticipantInput
	(*AddParticipantOutput)(nil),          // 3: eolymp.judge.AddParticipantOutput
	(*EnableParticipantInput)(nil),        // 4: eolymp.judge.EnableParticipantInput
	(*EnableParticipantOutput)(nil),       // 5: eolymp.judge.EnableParticipantOutput
	(*DisableParticipantInput)(nil),       // 6: eolymp.judge.DisableParticipantInput
	(*DisableParticipantOutput)(nil),      // 7: eolymp.judge.DisableParticipantOutput
	(*DisqualifyParticipantInput)(nil),    // 8: eolymp.judge.DisqualifyParticipantInput
	(*DisqualifyParticipantOutput)(nil),   // 9: eolymp.judge.DisqualifyParticipantOutput
	(*UpdateParticipantInput)(nil),        // 10: eolymp.judge.UpdateParticipantInput
	(*UpdateParticipantOutput)(nil),       // 11: eolymp.judge.UpdateParticipantOutput
	(*RemoveParticipantInput)(nil),        // 12: eolymp.judge.RemoveParticipantInput
	(*RemoveParticipantOutput)(nil),       // 13: eolymp.judge.RemoveParticipantOutput
	(*VerifyPasscodeInput)(nil),           // 14: eolymp.judge.VerifyPasscodeInput
	(*VerifyPasscodeOutput)(nil),          // 15: eolymp.judge.VerifyPasscodeOutput
	(*EnterPasscodeInput)(nil),            // 16: eolymp.judge.EnterPasscodeInput
	(*EnterPasscodeOutput)(nil),           // 17: eolymp.judge.EnterPasscodeOutput
	(*ResetPasscodeInput)(nil),            // 18: eolymp.judge.ResetPasscodeInput
	(*ResetPasscodeOutput)(nil),           // 19: eolymp.judge.ResetPasscodeOutput
	(*SetPasscodeInput)(nil),              // 20: eolymp.judge.SetPasscodeInput
	(*SetPasscodeOutput)(nil),             // 21: eolymp.judge.SetPasscodeOutput
	(*RemovePasscodeInput)(nil),           // 22: eolymp.judge.RemovePasscodeInput
	(*RemovePasscodeOutput)(nil),          // 23: eolymp.judge.RemovePasscodeOutput
	(*ListParticipantsInput)(nil),         // 24: eolymp.judge.ListParticipantsInput
	(*ListParticipantsOutput)(nil),        // 25: eolymp.judge.ListParticipantsOutput
	(*JoinContestInput)(nil),              // 26: eolymp.judge.JoinContestInput
	(*JoinContestOutput)(nil),             // 27: eolymp.judge.JoinContestOutput
	(*StartContestInput)(nil),             // 28: eolymp.judge.StartContestInput
	(*StartContestOutput)(nil),            // 29: eolymp.judge.StartContestOutput
	(*IntrospectParticipantInput)(nil),    // 30: eolymp.judge.IntrospectParticipantInput
	(*IntrospectParticipantOutput)(nil),   // 31: eolymp.judge.IntrospectParticipantOutput
	(*WatchParticipantInput)(nil),         // 32: eolymp.judge.WatchParticipantInput
	(*WatchParticipantOutput)(nil),        // 33: eolymp.judge.WatchParticipantOutput
	(*DescribeParticipantInput)(nil),      // 34: eolymp.judge.DescribeParticipantInput
	(*DescribeParticipantOutput)(nil),     // 35: eolymp.judge.DescribeParticipantOutput
	(*ListParticipantsInput_Filter)(nil),  // 36: eolymp.judge.ListParticipantsInput.Filter
	(*Participant)(nil),                   // 37: eolymp.judge.Participant
	(*ecm.Content)(nil),                   // 38: eolymp.ecm.Content
	(wellknown.Direction)(0),              // 39: eolymp.wellknown.Direction
	(*wellknown.ExpressionID)(nil),        // 40: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionString)(nil),    // 41: eolymp.wellknown.ExpressionString
	(*wellknown.ExpressionEnum)(nil),      // 42: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionFloat)(nil),     // 43: eolymp.wellknown.ExpressionFloat
	(*wellknown.ExpressionTimestamp)(nil), // 44: eolymp.wellknown.ExpressionTimestamp
}
var file_eolymp_judge_participant_service_proto_depIdxs = []int32{
	37, // 0: eolymp.judge.AddParticipantInput.participant:type_name -> eolymp.judge.Participant
	38, // 1: eolymp.judge.DisqualifyParticipantInput.reason:type_name -> eolymp.ecm.Content
	0,  // 2: eolymp.judge.UpdateParticipantInput.patch:type_name -> eolymp.judge.UpdateParticipantInput.Patch
	37, // 3: eolymp.judge.UpdateParticipantInput.participant:type_name -> eolymp.judge.Participant
	36, // 4: eolymp.judge.ListParticipantsInput.filters:type_name -> eolymp.judge.ListParticipantsInput.Filter
	1,  // 5: eolymp.judge.ListParticipantsInput.sort:type_name -> eolymp.judge.ListParticipantsInput.Sortable
	39, // 6: eolymp.judge.ListParticipantsInput.order:type_name -> eolymp.wellknown.Direction
	37, // 7: eolymp.judge.ListParticipantsOutput.items:type_name -> eolymp.judge.Participant
	37, // 8: eolymp.judge.IntrospectParticipantOutput.participant:type_name -> eolymp.judge.Participant
	37, // 9: eolymp.judge.WatchParticipantOutput.participant:type_name -> eolymp.judge.Participant
	37, // 10: eolymp.judge.DescribeParticipantOutput.participant:type_name -> eolymp.judge.Participant
	40, // 11: eolymp.judge.ListParticipantsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	40, // 12: eolymp.judge.ListParticipantsInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	41, // 13: eolymp.judge.ListParticipantsInput.Filter.name:type_name -> eolymp.wellknown.ExpressionString
	42, // 14: eolymp.judge.ListParticipantsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	43, // 15: eolymp.judge.ListParticipantsInput.Filter.score:type_name -> eolymp.wellknown.ExpressionFloat
	43, // 16: eolymp.judge.ListParticipantsInput.Filter.penalty:type_name -> eolymp.wellknown.ExpressionFloat
	44, // 17: eolymp.judge.ListParticipantsInput.Filter.started_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	44, // 18: eolymp.judge.ListParticipantsInput.Filter.complete_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	2,  // 19: eolymp.judge.ParticipantService.AddParticipant:input_type -> eolymp.judge.AddParticipantInput
	4,  // 20: eolymp.judge.ParticipantService.EnableParticipant:input_type -> eolymp.judge.EnableParticipantInput
	6,  // 21: eolymp.judge.ParticipantService.DisableParticipant:input_type -> eolymp.judge.DisableParticipantInput
	8,  // 22: eolymp.judge.ParticipantService.DisqualifyParticipant:input_type -> eolymp.judge.DisqualifyParticipantInput
	10, // 23: eolymp.judge.ParticipantService.UpdateParticipant:input_type -> eolymp.judge.UpdateParticipantInput
	12, // 24: eolymp.judge.ParticipantService.RemoveParticipant:input_type -> eolymp.judge.RemoveParticipantInput
	24, // 25: eolymp.judge.ParticipantService.ListParticipants:input_type -> eolymp.judge.ListParticipantsInput
	34, // 26: eolymp.judge.ParticipantService.DescribeParticipant:input_type -> eolymp.judge.DescribeParticipantInput
	30, // 27: eolymp.judge.ParticipantService.IntrospectParticipant:input_type -> eolymp.judge.IntrospectParticipantInput
	32, // 28: eolymp.judge.ParticipantService.WatchParticipant:input_type -> eolymp.judge.WatchParticipantInput
	26, // 29: eolymp.judge.ParticipantService.JoinContest:input_type -> eolymp.judge.JoinContestInput
	28, // 30: eolymp.judge.ParticipantService.StartContest:input_type -> eolymp.judge.StartContestInput
	14, // 31: eolymp.judge.ParticipantService.VerifyPasscode:input_type -> eolymp.judge.VerifyPasscodeInput
	16, // 32: eolymp.judge.ParticipantService.EnterPasscode:input_type -> eolymp.judge.EnterPasscodeInput
	18, // 33: eolymp.judge.ParticipantService.ResetPasscode:input_type -> eolymp.judge.ResetPasscodeInput
	20, // 34: eolymp.judge.ParticipantService.SetPasscode:input_type -> eolymp.judge.SetPasscodeInput
	22, // 35: eolymp.judge.ParticipantService.RemovePasscode:input_type -> eolymp.judge.RemovePasscodeInput
	3,  // 36: eolymp.judge.ParticipantService.AddParticipant:output_type -> eolymp.judge.AddParticipantOutput
	5,  // 37: eolymp.judge.ParticipantService.EnableParticipant:output_type -> eolymp.judge.EnableParticipantOutput
	7,  // 38: eolymp.judge.ParticipantService.DisableParticipant:output_type -> eolymp.judge.DisableParticipantOutput
	9,  // 39: eolymp.judge.ParticipantService.DisqualifyParticipant:output_type -> eolymp.judge.DisqualifyParticipantOutput
	11, // 40: eolymp.judge.ParticipantService.UpdateParticipant:output_type -> eolymp.judge.UpdateParticipantOutput
	13, // 41: eolymp.judge.ParticipantService.RemoveParticipant:output_type -> eolymp.judge.RemoveParticipantOutput
	25, // 42: eolymp.judge.ParticipantService.ListParticipants:output_type -> eolymp.judge.ListParticipantsOutput
	35, // 43: eolymp.judge.ParticipantService.DescribeParticipant:output_type -> eolymp.judge.DescribeParticipantOutput
	31, // 44: eolymp.judge.ParticipantService.IntrospectParticipant:output_type -> eolymp.judge.IntrospectParticipantOutput
	33, // 45: eolymp.judge.ParticipantService.WatchParticipant:output_type -> eolymp.judge.WatchParticipantOutput
	27, // 46: eolymp.judge.ParticipantService.JoinContest:output_type -> eolymp.judge.JoinContestOutput
	29, // 47: eolymp.judge.ParticipantService.StartContest:output_type -> eolymp.judge.StartContestOutput
	15, // 48: eolymp.judge.ParticipantService.VerifyPasscode:output_type -> eolymp.judge.VerifyPasscodeOutput
	17, // 49: eolymp.judge.ParticipantService.EnterPasscode:output_type -> eolymp.judge.EnterPasscodeOutput
	19, // 50: eolymp.judge.ParticipantService.ResetPasscode:output_type -> eolymp.judge.ResetPasscodeOutput
	21, // 51: eolymp.judge.ParticipantService.SetPasscode:output_type -> eolymp.judge.SetPasscodeOutput
	23, // 52: eolymp.judge.ParticipantService.RemovePasscode:output_type -> eolymp.judge.RemovePasscodeOutput
	36, // [36:53] is the sub-list for method output_type
	19, // [19:36] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_eolymp_judge_participant_service_proto_init() }
func file_eolymp_judge_participant_service_proto_init() {
	if File_eolymp_judge_participant_service_proto != nil {
		return
	}
	file_eolymp_judge_participant_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_judge_participant_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EnableParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EnableParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DisableParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DisableParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DisqualifyParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DisqualifyParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyPasscodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyPasscodeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPasscodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPasscodeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasscodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasscodeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SetPasscodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SetPasscodeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePasscodeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePasscodeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ListParticipantsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ListParticipantsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*JoinContestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*JoinContestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*StartContestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*StartContestOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*IntrospectParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*IntrospectParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*WatchParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*WatchParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeParticipantInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeParticipantOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_judge_participant_service_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ListParticipantsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_judge_participant_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_participant_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_participant_service_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_participant_service_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_participant_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_participant_service_proto = out.File
	file_eolymp_judge_participant_service_proto_rawDesc = nil
	file_eolymp_judge_participant_service_proto_goTypes = nil
	file_eolymp_judge_participant_service_proto_depIdxs = nil
}
