// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/judge/score_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RebuildScoreInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildScoreInput) Reset() {
	*x = RebuildScoreInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildScoreInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildScoreInput) ProtoMessage() {}

func (x *RebuildScoreInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildScoreInput.ProtoReflect.Descriptor instead.
func (*RebuildScoreInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{0}
}

func (x *RebuildScoreInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type RebuildScoreOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActivityId    string                 `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildScoreOutput) Reset() {
	*x = RebuildScoreOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildScoreOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildScoreOutput) ProtoMessage() {}

func (x *RebuildScoreOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildScoreOutput.ProtoReflect.Descriptor instead.
func (*RebuildScoreOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{1}
}

func (x *RebuildScoreOutput) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

type IntrospectScoreInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntrospectScoreInput) Reset() {
	*x = IntrospectScoreInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectScoreInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectScoreInput) ProtoMessage() {}

func (x *IntrospectScoreInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectScoreInput.ProtoReflect.Descriptor instead.
func (*IntrospectScoreInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{2}
}

func (x *IntrospectScoreInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

type IntrospectScoreOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         *Score                 `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntrospectScoreOutput) Reset() {
	*x = IntrospectScoreOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrospectScoreOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectScoreOutput) ProtoMessage() {}

func (x *IntrospectScoreOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectScoreOutput.ProtoReflect.Descriptor instead.
func (*IntrospectScoreOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{3}
}

func (x *IntrospectScoreOutput) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type WatchScoreInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string                 `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// Mode for fetching score value (see enum description).
	Mode          Score_FetchingMode `protobuf:"varint,3,opt,name=mode,proto3,enum=eolymp.judge.Score_FetchingMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchScoreInput) Reset() {
	*x = WatchScoreInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchScoreInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchScoreInput) ProtoMessage() {}

func (x *WatchScoreInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchScoreInput.ProtoReflect.Descriptor instead.
func (*WatchScoreInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{4}
}

func (x *WatchScoreInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *WatchScoreInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *WatchScoreInput) GetMode() Score_FetchingMode {
	if x != nil {
		return x.Mode
	}
	return Score_ACTUAL
}

type WatchScoreOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         *Score                 `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchScoreOutput) Reset() {
	*x = WatchScoreOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchScoreOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchScoreOutput) ProtoMessage() {}

func (x *WatchScoreOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchScoreOutput.ProtoReflect.Descriptor instead.
func (*WatchScoreOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{5}
}

func (x *WatchScoreOutput) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type DescribeScoreInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string                 `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// Mode for fetching score value (see enum description).
	Mode Score_FetchingMode `protobuf:"varint,3,opt,name=mode,proto3,enum=eolymp.judge.Score_FetchingMode" json:"mode,omitempty"`
	// Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
	// seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
	// This value is ignored if mode is not PUNCTUAL.
	TimeOffset    int32 `protobuf:"varint,4,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeScoreInput) Reset() {
	*x = DescribeScoreInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeScoreInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScoreInput) ProtoMessage() {}

func (x *DescribeScoreInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScoreInput.ProtoReflect.Descriptor instead.
func (*DescribeScoreInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeScoreInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeScoreInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *DescribeScoreInput) GetMode() Score_FetchingMode {
	if x != nil {
		return x.Mode
	}
	return Score_ACTUAL
}

func (x *DescribeScoreInput) GetTimeOffset() int32 {
	if x != nil {
		return x.TimeOffset
	}
	return 0
}

type DescribeScoreOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         *Score                 `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeScoreOutput) Reset() {
	*x = DescribeScoreOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeScoreOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScoreOutput) ProtoMessage() {}

func (x *DescribeScoreOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScoreOutput.ProtoReflect.Descriptor instead.
func (*DescribeScoreOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeScoreOutput) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type ImportScoreInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string                 `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// Scores is an array of score snapshots at different time relative to the starting time.
	//
	// Each entry defines a complete snapshot (they do not accumulate automatically).
	// These fields can be populated:
	//   - offset - defines when snapshot was taken, it's an amount of time in seconds since participant started contest
	//   - score - total score at the moment in time (suppose to be sum of scores in breakdown field, but not enforced)
	//   - penalty - total penalty at the moment in time (suppose to be sum of penalty in breakdown field, but not enforced)
	//   - breakdown - score breakdown by problem, nested fields are as follows:
	//   - problem_id - self explanatory
	//   - score - score as defined by contest format (for IOI: from 0 to 100, for ICPC 0 or 1)
	//   - penalty - penalty as defined by contest format (for ICPC: solved_in/60 + attempts*20)
	//   - percentage - percentage of scored points from 0 to 1 (1 means 100% or fully solved), this value does not depend on contest format
	//   - attempts - number of attempts to solve problem before successful attempt
	//   - solved_in - time in second to solve problem, since participant started contest, leave as 0 if not solved
	//
	// The rest of the fields are automatically calculated and ignored during import.
	Scores        []*Score `protobuf:"bytes,10,rep,name=scores,proto3" json:"scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportScoreInput) Reset() {
	*x = ImportScoreInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportScoreInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportScoreInput) ProtoMessage() {}

func (x *ImportScoreInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportScoreInput.ProtoReflect.Descriptor instead.
func (*ImportScoreInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{8}
}

func (x *ImportScoreInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ImportScoreInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *ImportScoreInput) GetScores() []*Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type ImportScoreOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportScoreOutput) Reset() {
	*x = ImportScoreOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportScoreOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportScoreOutput) ProtoMessage() {}

func (x *ImportScoreOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportScoreOutput.ProtoReflect.Descriptor instead.
func (*ImportScoreOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{9}
}

type ExportScoreInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ParticipantId string                 `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportScoreInput) Reset() {
	*x = ExportScoreInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportScoreInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportScoreInput) ProtoMessage() {}

func (x *ExportScoreInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportScoreInput.ProtoReflect.Descriptor instead.
func (*ExportScoreInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{10}
}

func (x *ExportScoreInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ExportScoreInput) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type ExportScoreOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scores        []*Score               `protobuf:"bytes,10,rep,name=scores,proto3" json:"scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportScoreOutput) Reset() {
	*x = ExportScoreOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportScoreOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportScoreOutput) ProtoMessage() {}

func (x *ExportScoreOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportScoreOutput.ProtoReflect.Descriptor instead.
func (*ExportScoreOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{11}
}

func (x *ExportScoreOutput) GetScores() []*Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type ListResultInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ContestId string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	// Mode for fetching score value (see enum description).
	Mode Score_FetchingMode `protobuf:"varint,2,opt,name=mode,proto3,enum=eolymp.judge.Score_FetchingMode" json:"mode,omitempty"`
	// Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
	// seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
	// This value is ignored if mode is not PUNCTUAL.
	TimeOffset    int32 `protobuf:"varint,3,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty"`
	Offset        int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResultInput) Reset() {
	*x = ListResultInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResultInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultInput) ProtoMessage() {}

func (x *ListResultInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultInput.ProtoReflect.Descriptor instead.
func (*ListResultInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListResultInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListResultInput) GetMode() Score_FetchingMode {
	if x != nil {
		return x.Mode
	}
	return Score_ACTUAL
}

func (x *ListResultInput) GetTimeOffset() int32 {
	if x != nil {
		return x.TimeOffset
	}
	return 0
}

func (x *ListResultInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListResultInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListResultOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Result              `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResultOutput) Reset() {
	*x = ListResultOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResultOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultOutput) ProtoMessage() {}

func (x *ListResultOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultOutput.ProtoReflect.Descriptor instead.
func (*ListResultOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListResultOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListResultOutput) GetItems() []*Result {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExportResultInput struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ContestId string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	// Mode for fetching score value (see enum description).
	Mode Score_FetchingMode `protobuf:"varint,2,opt,name=mode,proto3,enum=eolymp.judge.Score_FetchingMode" json:"mode,omitempty"`
	// Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
	// seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
	// This value is ignored if mode is not PUNCTUAL.
	TimeOffset    int32 `protobuf:"varint,3,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportResultInput) Reset() {
	*x = ExportResultInput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportResultInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResultInput) ProtoMessage() {}

func (x *ExportResultInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResultInput.ProtoReflect.Descriptor instead.
func (*ExportResultInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{14}
}

func (x *ExportResultInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ExportResultInput) GetMode() Score_FetchingMode {
	if x != nil {
		return x.Mode
	}
	return Score_ACTUAL
}

func (x *ExportResultInput) GetTimeOffset() int32 {
	if x != nil {
		return x.TimeOffset
	}
	return 0
}

type ExportResultOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExportUrl     string                 `protobuf:"bytes,1,opt,name=export_url,json=exportUrl,proto3" json:"export_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportResultOutput) Reset() {
	*x = ExportResultOutput{}
	mi := &file_eolymp_judge_score_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportResultOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResultOutput) ProtoMessage() {}

func (x *ExportResultOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_score_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResultOutput.ProtoReflect.Descriptor instead.
func (*ExportResultOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_score_service_proto_rawDescGZIP(), []int{15}
}

func (x *ExportResultOutput) GetExportUrl() string {
	if x != nil {
		return x.ExportUrl
	}
	return ""
}

var File_eolymp_judge_score_service_proto protoreflect.FileDescriptor

const file_eolymp_judge_score_service_proto_rawDesc = "" +
	"\n" +
	" eolymp/judge/score_service.proto\x12\feolymp.judge\x1a\x1deolymp/annotations/http.proto\x1a\x1ceolymp/annotations/mcp.proto\x1a\"eolymp/annotations/namespace.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x19eolymp/judge/result.proto\x1a\x18eolymp/judge/score.proto\"2\n" +
	"\x11RebuildScoreInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"5\n" +
	"\x12RebuildScoreOutput\x12\x1f\n" +
	"\vactivity_id\x18\x01 \x01(\tR\n" +
	"activityId\"5\n" +
	"\x14IntrospectScoreInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\"B\n" +
	"\x15IntrospectScoreOutput\x12)\n" +
	"\x05score\x18\x01 \x01(\v2\x13.eolymp.judge.ScoreR\x05score\"\x8d\x01\n" +
	"\x0fWatchScoreInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\x124\n" +
	"\x04mode\x18\x03 \x01(\x0e2 .eolymp.judge.Score.FetchingModeR\x04mode\"=\n" +
	"\x10WatchScoreOutput\x12)\n" +
	"\x05score\x18\x01 \x01(\v2\x13.eolymp.judge.ScoreR\x05score\"\xb9\x01\n" +
	"\x12DescribeScoreInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\x124\n" +
	"\x04mode\x18\x03 \x01(\x0e2 .eolymp.judge.Score.FetchingModeR\x04mode\x12'\n" +
	"\vtime_offset\x18\x04 \x01(\x05B\x06\xb0\xf0\xf0\xe4\x01\x01R\n" +
	"timeOffset\"@\n" +
	"\x13DescribeScoreOutput\x12)\n" +
	"\x05score\x18\x01 \x01(\v2\x13.eolymp.judge.ScoreR\x05score\"\x85\x01\n" +
	"\x10ImportScoreInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\x12+\n" +
	"\x06scores\x18\n" +
	" \x03(\v2\x13.eolymp.judge.ScoreR\x06scores\"\x13\n" +
	"\x11ImportScoreOutput\"X\n" +
	"\x10ExportScoreInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\"@\n" +
	"\x11ExportScoreOutput\x12+\n" +
	"\x06scores\x18\n" +
	" \x03(\v2\x13.eolymp.judge.ScoreR\x06scores\"\xbb\x01\n" +
	"\x0fListResultInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x124\n" +
	"\x04mode\x18\x02 \x01(\x0e2 .eolymp.judge.Score.FetchingModeR\x04mode\x12'\n" +
	"\vtime_offset\x18\x03 \x01(\x05B\x06\xb0\xf0\xf0\xe4\x01\x01R\n" +
	"timeOffset\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\"T\n" +
	"\x10ListResultOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.eolymp.judge.ResultR\x05items\"\x89\x01\n" +
	"\x11ExportResultInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x124\n" +
	"\x04mode\x18\x02 \x01(\x0e2 .eolymp.judge.Score.FetchingModeR\x04mode\x12\x1f\n" +
	"\vtime_offset\x18\x03 \x01(\x05R\n" +
	"timeOffset\"3\n" +
	"\x12ExportResultOutput\x12\x1d\n" +
	"\n" +
	"export_url\x18\x01 \x01(\tR\texportUrl2\xcf\t\n" +
	"\fScoreService\x12\x84\x01\n" +
	"\x0fIntrospectScore\x12\".eolymp.judge.IntrospectScoreInput\x1a#.eolymp.judge.IntrospectScoreOutput\"(\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00 A\xf8\xe2\n" +
	"2\x82\xd3\xe4\x93\x02\x13\x12\x11/introspect/score\x12i\n" +
	"\n" +
	"WatchScore\x12\x1d.eolymp.judge.WatchScoreInput\x1a\x1e.eolymp.judge.WatchScoreOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read0\x01\x12\xac\x01\n" +
	"\rDescribeScore\x12 .eolymp.judge.DescribeScoreInput\x1a!.eolymp.judge.DescribeScoreOutput\"V\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00HB\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02&\x12$/participants/{participant_id}/score\x12\xa7\x01\n" +
	"\vImportScore\x12\x1e.eolymp.judge.ImportScoreInput\x1a\x1f.eolymp.judge.ImportScoreOutput\"W\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00HB\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02'\"%/participants/{participant_id}/scores\x12\xa7\x01\n" +
	"\vExportScore\x12\x1e.eolymp.judge.ExportScoreInput\x1a\x1f.eolymp.judge.ExportScoreOutput\"W\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00HB\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02'\x12%/participants/{participant_id}/scores\x12\x87\x01\n" +
	"\n" +
	"ListResult\x12\x1d.eolymp.judge.ListResultInput\x1a\x1e.eolymp.judge.ListResultOutput\":\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00HB\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/results\x12\x93\x01\n" +
	"\fExportResult\x12\x1f.eolymp.judge.ExportResultInput\x1a .eolymp.judge.ExportResultOutput\"@\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x11\"\x0f/results-export\x12\x8d\x01\n" +
	"\fRebuildScore\x12\x1f.eolymp.judge.RebuildScoreInput\x1a .eolymp.judge.RebuildScoreOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\n" +
	"\"\b/rebuild\x1a\x1a\x82\xf0\xf0\xe4\x01\x14eolymp.judge.ContestB-Z+github.com/eolymp/go-sdk/eolymp/judge;judgeb\x06proto3"

var (
	file_eolymp_judge_score_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_score_service_proto_rawDescData []byte
)

func file_eolymp_judge_score_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_score_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_score_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_judge_score_service_proto_rawDesc), len(file_eolymp_judge_score_service_proto_rawDesc)))
	})
	return file_eolymp_judge_score_service_proto_rawDescData
}

var file_eolymp_judge_score_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_eolymp_judge_score_service_proto_goTypes = []any{
	(*RebuildScoreInput)(nil),     // 0: eolymp.judge.RebuildScoreInput
	(*RebuildScoreOutput)(nil),    // 1: eolymp.judge.RebuildScoreOutput
	(*IntrospectScoreInput)(nil),  // 2: eolymp.judge.IntrospectScoreInput
	(*IntrospectScoreOutput)(nil), // 3: eolymp.judge.IntrospectScoreOutput
	(*WatchScoreInput)(nil),       // 4: eolymp.judge.WatchScoreInput
	(*WatchScoreOutput)(nil),      // 5: eolymp.judge.WatchScoreOutput
	(*DescribeScoreInput)(nil),    // 6: eolymp.judge.DescribeScoreInput
	(*DescribeScoreOutput)(nil),   // 7: eolymp.judge.DescribeScoreOutput
	(*ImportScoreInput)(nil),      // 8: eolymp.judge.ImportScoreInput
	(*ImportScoreOutput)(nil),     // 9: eolymp.judge.ImportScoreOutput
	(*ExportScoreInput)(nil),      // 10: eolymp.judge.ExportScoreInput
	(*ExportScoreOutput)(nil),     // 11: eolymp.judge.ExportScoreOutput
	(*ListResultInput)(nil),       // 12: eolymp.judge.ListResultInput
	(*ListResultOutput)(nil),      // 13: eolymp.judge.ListResultOutput
	(*ExportResultInput)(nil),     // 14: eolymp.judge.ExportResultInput
	(*ExportResultOutput)(nil),    // 15: eolymp.judge.ExportResultOutput
	(*Score)(nil),                 // 16: eolymp.judge.Score
	(Score_FetchingMode)(0),       // 17: eolymp.judge.Score.FetchingMode
	(*Result)(nil),                // 18: eolymp.judge.Result
}
var file_eolymp_judge_score_service_proto_depIdxs = []int32{
	16, // 0: eolymp.judge.IntrospectScoreOutput.score:type_name -> eolymp.judge.Score
	17, // 1: eolymp.judge.WatchScoreInput.mode:type_name -> eolymp.judge.Score.FetchingMode
	16, // 2: eolymp.judge.WatchScoreOutput.score:type_name -> eolymp.judge.Score
	17, // 3: eolymp.judge.DescribeScoreInput.mode:type_name -> eolymp.judge.Score.FetchingMode
	16, // 4: eolymp.judge.DescribeScoreOutput.score:type_name -> eolymp.judge.Score
	16, // 5: eolymp.judge.ImportScoreInput.scores:type_name -> eolymp.judge.Score
	16, // 6: eolymp.judge.ExportScoreOutput.scores:type_name -> eolymp.judge.Score
	17, // 7: eolymp.judge.ListResultInput.mode:type_name -> eolymp.judge.Score.FetchingMode
	18, // 8: eolymp.judge.ListResultOutput.items:type_name -> eolymp.judge.Result
	17, // 9: eolymp.judge.ExportResultInput.mode:type_name -> eolymp.judge.Score.FetchingMode
	2,  // 10: eolymp.judge.ScoreService.IntrospectScore:input_type -> eolymp.judge.IntrospectScoreInput
	4,  // 11: eolymp.judge.ScoreService.WatchScore:input_type -> eolymp.judge.WatchScoreInput
	6,  // 12: eolymp.judge.ScoreService.DescribeScore:input_type -> eolymp.judge.DescribeScoreInput
	8,  // 13: eolymp.judge.ScoreService.ImportScore:input_type -> eolymp.judge.ImportScoreInput
	10, // 14: eolymp.judge.ScoreService.ExportScore:input_type -> eolymp.judge.ExportScoreInput
	12, // 15: eolymp.judge.ScoreService.ListResult:input_type -> eolymp.judge.ListResultInput
	14, // 16: eolymp.judge.ScoreService.ExportResult:input_type -> eolymp.judge.ExportResultInput
	0,  // 17: eolymp.judge.ScoreService.RebuildScore:input_type -> eolymp.judge.RebuildScoreInput
	3,  // 18: eolymp.judge.ScoreService.IntrospectScore:output_type -> eolymp.judge.IntrospectScoreOutput
	5,  // 19: eolymp.judge.ScoreService.WatchScore:output_type -> eolymp.judge.WatchScoreOutput
	7,  // 20: eolymp.judge.ScoreService.DescribeScore:output_type -> eolymp.judge.DescribeScoreOutput
	9,  // 21: eolymp.judge.ScoreService.ImportScore:output_type -> eolymp.judge.ImportScoreOutput
	11, // 22: eolymp.judge.ScoreService.ExportScore:output_type -> eolymp.judge.ExportScoreOutput
	13, // 23: eolymp.judge.ScoreService.ListResult:output_type -> eolymp.judge.ListResultOutput
	15, // 24: eolymp.judge.ScoreService.ExportResult:output_type -> eolymp.judge.ExportResultOutput
	1,  // 25: eolymp.judge.ScoreService.RebuildScore:output_type -> eolymp.judge.RebuildScoreOutput
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eolymp_judge_score_service_proto_init() }
func file_eolymp_judge_score_service_proto_init() {
	if File_eolymp_judge_score_service_proto != nil {
		return
	}
	file_eolymp_judge_result_proto_init()
	file_eolymp_judge_score_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_judge_score_service_proto_rawDesc), len(file_eolymp_judge_score_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_score_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_score_service_proto_depIdxs,
		MessageInfos:      file_eolymp_judge_score_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_score_service_proto = out.File
	file_eolymp_judge_score_service_proto_goTypes = nil
	file_eolymp_judge_score_service_proto_depIdxs = nil
}
