// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/judge/problem_service.proto

package judge

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	runtime "github.com/eolymp/go-sdk/eolymp/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateProblemInput_Patch int32

const (
	UpdateProblemInput_ALL                   UpdateProblemInput_Patch = 0
	UpdateProblemInput_INDEX                 UpdateProblemInput_Patch = 1
	UpdateProblemInput_SUBMIT_LIMIT          UpdateProblemInput_Patch = 2
	UpdateProblemInput_SCORE_BY_BEST_TESTSET UpdateProblemInput_Patch = 3
)

// Enum value maps for UpdateProblemInput_Patch.
var (
	UpdateProblemInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "INDEX",
		2: "SUBMIT_LIMIT",
		3: "SCORE_BY_BEST_TESTSET",
	}
	UpdateProblemInput_Patch_value = map[string]int32{
		"ALL":                   0,
		"INDEX":                 1,
		"SUBMIT_LIMIT":          2,
		"SCORE_BY_BEST_TESTSET": 3,
	}
)

func (x UpdateProblemInput_Patch) Enum() *UpdateProblemInput_Patch {
	p := new(UpdateProblemInput_Patch)
	*p = x
	return p
}

func (x UpdateProblemInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateProblemInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_judge_problem_service_proto_enumTypes[0].Descriptor()
}

func (UpdateProblemInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_judge_problem_service_proto_enumTypes[0]
}

func (x UpdateProblemInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateProblemInput_Patch.Descriptor instead.
func (UpdateProblemInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{4, 0}
}

type ImportProblemInput struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ContestId          string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ImportId           string                 `protobuf:"bytes,2,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	Index              uint32                 `protobuf:"varint,10,opt,name=index,proto3" json:"index,omitempty"`
	SubmitLimit        uint32                 `protobuf:"varint,11,opt,name=submit_limit,json=submitLimit,proto3" json:"submit_limit,omitempty"`
	ScoreByBestTestset bool                   `protobuf:"varint,12,opt,name=score_by_best_testset,json=scoreByBestTestset,proto3" json:"score_by_best_testset,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ImportProblemInput) Reset() {
	*x = ImportProblemInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportProblemInput) ProtoMessage() {}

func (x *ImportProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportProblemInput.ProtoReflect.Descriptor instead.
func (*ImportProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{0}
}

func (x *ImportProblemInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ImportProblemInput) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

func (x *ImportProblemInput) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ImportProblemInput) GetSubmitLimit() uint32 {
	if x != nil {
		return x.SubmitLimit
	}
	return 0
}

func (x *ImportProblemInput) GetScoreByBestTestset() bool {
	if x != nil {
		return x.ScoreByBestTestset
	}
	return false
}

type ImportProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportProblemOutput) Reset() {
	*x = ImportProblemOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportProblemOutput) ProtoMessage() {}

func (x *ImportProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportProblemOutput.ProtoReflect.Descriptor instead.
func (*ImportProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{1}
}

func (x *ImportProblemOutput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type SyncProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncProblemInput) Reset() {
	*x = SyncProblemInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncProblemInput) ProtoMessage() {}

func (x *SyncProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncProblemInput.ProtoReflect.Descriptor instead.
func (*SyncProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{2}
}

func (x *SyncProblemInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *SyncProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type SyncProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncProblemOutput) Reset() {
	*x = SyncProblemOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncProblemOutput) ProtoMessage() {}

func (x *SyncProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncProblemOutput.ProtoReflect.Descriptor instead.
func (*SyncProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{3}
}

type UpdateProblemInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Patch request to update participant partially (all fields are updated if not specified)
	Patch         []UpdateProblemInput_Patch `protobuf:"varint,3,rep,packed,name=patch,proto3,enum=eolymp.judge.UpdateProblemInput_Patch" json:"patch,omitempty"`
	ContestId     string                     `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                     `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Problem       *Problem                   `protobuf:"bytes,4,opt,name=problem,proto3" json:"problem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemInput) Reset() {
	*x = UpdateProblemInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemInput) ProtoMessage() {}

func (x *UpdateProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemInput.ProtoReflect.Descriptor instead.
func (*UpdateProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProblemInput) GetPatch() []UpdateProblemInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateProblemInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *UpdateProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *UpdateProblemInput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type UpdateProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemOutput) Reset() {
	*x = UpdateProblemOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemOutput) ProtoMessage() {}

func (x *UpdateProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemOutput.ProtoReflect.Descriptor instead.
func (*UpdateProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{5}
}

type DeleteProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemInput) Reset() {
	*x = DeleteProblemInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemInput) ProtoMessage() {}

func (x *DeleteProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemInput.ProtoReflect.Descriptor instead.
func (*DeleteProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProblemInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DeleteProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DeleteProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemOutput) Reset() {
	*x = DeleteProblemOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemOutput) ProtoMessage() {}

func (x *DeleteProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemOutput.ProtoReflect.Descriptor instead.
func (*DeleteProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{7}
}

type ListProblemsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Offset        int32                  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32                  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsInput) Reset() {
	*x = ListProblemsInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsInput) ProtoMessage() {}

func (x *ListProblemsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsInput.ProtoReflect.Descriptor instead.
func (*ListProblemsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListProblemsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListProblemsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListProblemsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListProblemsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Problem             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemsOutput) Reset() {
	*x = ListProblemsOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsOutput) ProtoMessage() {}

func (x *ListProblemsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsOutput.ProtoReflect.Descriptor instead.
func (*ListProblemsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListProblemsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProblemsOutput) GetItems() []*Problem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeProblemInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeProblemInput) Reset() {
	*x = DescribeProblemInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeProblemInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProblemInput) ProtoMessage() {}

func (x *DescribeProblemInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProblemInput.ProtoReflect.Descriptor instead.
func (*DescribeProblemInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeProblemInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeProblemInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type DescribeProblemOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Problem       *Problem               `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeProblemOutput) Reset() {
	*x = DescribeProblemOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeProblemOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProblemOutput) ProtoMessage() {}

func (x *DescribeProblemOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProblemOutput.ProtoReflect.Descriptor instead.
func (*DescribeProblemOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeProblemOutput) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type DescribeCodeTemplateInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	TemplateId    string                 `protobuf:"bytes,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeCodeTemplateInput) Reset() {
	*x = DescribeCodeTemplateInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeCodeTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCodeTemplateInput) ProtoMessage() {}

func (x *DescribeCodeTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCodeTemplateInput.ProtoReflect.Descriptor instead.
func (*DescribeCodeTemplateInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeCodeTemplateInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *DescribeCodeTemplateInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *DescribeCodeTemplateInput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type DescribeCodeTemplateOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *Template              `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeCodeTemplateOutput) Reset() {
	*x = DescribeCodeTemplateOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeCodeTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCodeTemplateOutput) ProtoMessage() {}

func (x *DescribeCodeTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCodeTemplateOutput.ProtoReflect.Descriptor instead.
func (*DescribeCodeTemplateOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{13}
}

func (x *DescribeCodeTemplateOutput) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

type LookupCodeTemplateInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Runtime       string                 `protobuf:"bytes,10,opt,name=runtime,proto3" json:"runtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupCodeTemplateInput) Reset() {
	*x = LookupCodeTemplateInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupCodeTemplateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupCodeTemplateInput) ProtoMessage() {}

func (x *LookupCodeTemplateInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupCodeTemplateInput.ProtoReflect.Descriptor instead.
func (*LookupCodeTemplateInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{14}
}

func (x *LookupCodeTemplateInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *LookupCodeTemplateInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *LookupCodeTemplateInput) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

type LookupCodeTemplateOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *Template              `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupCodeTemplateOutput) Reset() {
	*x = LookupCodeTemplateOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupCodeTemplateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupCodeTemplateOutput) ProtoMessage() {}

func (x *LookupCodeTemplateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupCodeTemplateOutput.ProtoReflect.Descriptor instead.
func (*LookupCodeTemplateOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{15}
}

func (x *LookupCodeTemplateOutput) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

type ListStatementsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStatementsInput) Reset() {
	*x = ListStatementsInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStatementsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatementsInput) ProtoMessage() {}

func (x *ListStatementsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatementsInput.ProtoReflect.Descriptor instead.
func (*ListStatementsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListStatementsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListStatementsInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListStatementsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Problem_Statement   `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStatementsOutput) Reset() {
	*x = ListStatementsOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStatementsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatementsOutput) ProtoMessage() {}

func (x *ListStatementsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatementsOutput.ProtoReflect.Descriptor instead.
func (*ListStatementsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListStatementsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStatementsOutput) GetItems() []*Problem_Statement {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListAttachmentsInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAttachmentsInput) Reset() {
	*x = ListAttachmentsInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttachmentsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachmentsInput) ProtoMessage() {}

func (x *ListAttachmentsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachmentsInput.ProtoReflect.Descriptor instead.
func (*ListAttachmentsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListAttachmentsInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListAttachmentsInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListAttachmentsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Problem_Attachment  `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAttachmentsOutput) Reset() {
	*x = ListAttachmentsOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttachmentsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachmentsOutput) ProtoMessage() {}

func (x *ListAttachmentsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachmentsOutput.ProtoReflect.Descriptor instead.
func (*ListAttachmentsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListAttachmentsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAttachmentsOutput) GetItems() []*Problem_Attachment {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListExamplesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExamplesInput) Reset() {
	*x = ListExamplesInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExamplesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExamplesInput) ProtoMessage() {}

func (x *ListExamplesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExamplesInput.ProtoReflect.Descriptor instead.
func (*ListExamplesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListExamplesInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListExamplesInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListExamplesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Problem_Test        `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExamplesOutput) Reset() {
	*x = ListExamplesOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExamplesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExamplesOutput) ProtoMessage() {}

func (x *ListExamplesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExamplesOutput.ProtoReflect.Descriptor instead.
func (*ListExamplesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListExamplesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListExamplesOutput) GetItems() []*Problem_Test {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListRuntimesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     string                 `protobuf:"bytes,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId     string                 `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuntimesInput) Reset() {
	*x = ListRuntimesInput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuntimesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimesInput) ProtoMessage() {}

func (x *ListRuntimesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimesInput.ProtoReflect.Descriptor instead.
func (*ListRuntimesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListRuntimesInput) GetContestId() string {
	if x != nil {
		return x.ContestId
	}
	return ""
}

func (x *ListRuntimesInput) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

type ListRuntimesOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*runtime.Runtime     `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuntimesOutput) Reset() {
	*x = ListRuntimesOutput{}
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuntimesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimesOutput) ProtoMessage() {}

func (x *ListRuntimesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_judge_problem_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimesOutput.ProtoReflect.Descriptor instead.
func (*ListRuntimesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_judge_problem_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListRuntimesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRuntimesOutput) GetItems() []*runtime.Runtime {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_eolymp_judge_problem_service_proto protoreflect.FileDescriptor

const file_eolymp_judge_problem_service_proto_rawDesc = "" +
	"\n" +
	"\"eolymp/judge/problem_service.proto\x12\feolymp.judge\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1aeolymp/judge/problem.proto\x1a\x1beolymp/judge/template.proto\x1a\x1ceolymp/runtime/runtime.proto\"\xbc\x01\n" +
	"\x12ImportProblemInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1b\n" +
	"\timport_id\x18\x02 \x01(\tR\bimportId\x12\x14\n" +
	"\x05index\x18\n" +
	" \x01(\rR\x05index\x12!\n" +
	"\fsubmit_limit\x18\v \x01(\rR\vsubmitLimit\x121\n" +
	"\x15score_by_best_testset\x18\f \x01(\bR\x12scoreByBestTestset\"4\n" +
	"\x13ImportProblemOutput\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"P\n" +
	"\x10SyncProblemInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"\x13\n" +
	"\x11SyncProblemOutput\"\x8b\x02\n" +
	"\x12UpdateProblemInput\x12<\n" +
	"\x05patch\x18\x03 \x03(\x0e2&.eolymp.judge.UpdateProblemInput.PatchR\x05patch\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\x12/\n" +
	"\aproblem\x18\x04 \x01(\v2\x15.eolymp.judge.ProblemR\aproblem\"H\n" +
	"\x05Patch\x12\a\n" +
	"\x03ALL\x10\x00\x12\t\n" +
	"\x05INDEX\x10\x01\x12\x10\n" +
	"\fSUBMIT_LIMIT\x10\x02\x12\x19\n" +
	"\x15SCORE_BY_BEST_TESTSET\x10\x03\"\x15\n" +
	"\x13UpdateProblemOutput\"R\n" +
	"\x12DeleteProblemInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"\x15\n" +
	"\x13DeleteProblemOutput\"^\n" +
	"\x11ListProblemsInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\"W\n" +
	"\x12ListProblemsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12+\n" +
	"\x05items\x18\x02 \x03(\v2\x15.eolymp.judge.ProblemR\x05items\"T\n" +
	"\x14DescribeProblemInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"H\n" +
	"\x15DescribeProblemOutput\x12/\n" +
	"\aproblem\x18\x01 \x01(\v2\x15.eolymp.judge.ProblemR\aproblem\"z\n" +
	"\x19DescribeCodeTemplateInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\x12\x1f\n" +
	"\vtemplate_id\x18\x03 \x01(\tR\n" +
	"templateId\"P\n" +
	"\x1aDescribeCodeTemplateOutput\x122\n" +
	"\btemplate\x18\x01 \x01(\v2\x16.eolymp.judge.TemplateR\btemplate\"q\n" +
	"\x17LookupCodeTemplateInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\x12\x18\n" +
	"\aruntime\x18\n" +
	" \x01(\tR\aruntime\"N\n" +
	"\x18LookupCodeTemplateOutput\x122\n" +
	"\btemplate\x18\x01 \x01(\v2\x16.eolymp.judge.TemplateR\btemplate\"S\n" +
	"\x13ListStatementsInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"c\n" +
	"\x14ListStatementsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x125\n" +
	"\x05items\x18\x02 \x03(\v2\x1f.eolymp.judge.Problem.StatementR\x05items\"T\n" +
	"\x14ListAttachmentsInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"e\n" +
	"\x15ListAttachmentsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x126\n" +
	"\x05items\x18\x02 \x03(\v2 .eolymp.judge.Problem.AttachmentR\x05items\"Q\n" +
	"\x11ListExamplesInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"\\\n" +
	"\x12ListExamplesOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x120\n" +
	"\x05items\x18\x02 \x03(\v2\x1a.eolymp.judge.Problem.TestR\x05items\"Q\n" +
	"\x11ListRuntimesInput\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\tR\tcontestId\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\tR\tproblemId\"Y\n" +
	"\x12ListRuntimesOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12-\n" +
	"\x05items\x18\x02 \x03(\v2\x17.eolymp.runtime.RuntimeR\x05items2\xf4\x0f\n" +
	"\x0eProblemService\x12\x91\x01\n" +
	"\rImportProblem\x12 .eolymp.judge.ImportProblemInput\x1a!.eolymp.judge.ImportProblemOutput\";\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\v\"\t/problems\x12\x9d\x01\n" +
	"\vSyncProblem\x12\x1e.eolymp.judge.SyncProblemInput\x1a\x1f.eolymp.judge.SyncProblemOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x1d\"\x1b/problems/{problem_id}/sync\x12\x9e\x01\n" +
	"\rUpdateProblem\x12 .eolymp.judge.UpdateProblemInput\x1a!.eolymp.judge.UpdateProblemOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x18\"\x16/problems/{problem_id}\x12\x8d\x01\n" +
	"\fListProblems\x12\x1f.eolymp.judge.ListProblemsInput\x1a .eolymp.judge.ListProblemsOutput\":\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00@@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\v\x12\t/problems\x12\xa4\x01\n" +
	"\x0fDescribeProblem\x12\".eolymp.judge.DescribeProblemInput\x1a#.eolymp.judge.DescribeProblemOutput\"H\xea\xe2\n" +
	"\f\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"\xc8\x01\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02\x18\x12\x16/problems/{problem_id}\x12\x9e\x01\n" +
	"\rDeleteProblem\x12 .eolymp.judge.DeleteProblemInput\x1a!.eolymp.judge.DeleteProblemOutput\"H\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x17\x8a\xe3\n" +
	"\x13judge:contest:write\x82\xd3\xe4\x93\x02\x18*\x16/problems/{problem_id}\x12\xbc\x01\n" +
	"\x12LookupCodeTemplate\x12%.eolymp.judge.LookupCodeTemplateInput\x1a&.eolymp.judge.LookupCodeTemplateOutput\"W\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02(\x12&/problems/{problem_id}/lookup-template\x12\xca\x01\n" +
	"\x14DescribeCodeTemplate\x12'.eolymp.judge.DescribeCodeTemplateInput\x1a(.eolymp.judge.DescribeCodeTemplateOutput\"_\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x020\x12./problems/{problem_id}/templates/{template_id}\x12\xab\x01\n" +
	"\x0eListStatements\x12!.eolymp.judge.ListStatementsInput\x1a\".eolymp.judge.ListStatementsOutput\"R\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02#\x12!/problems/{problem_id}/statements\x12\xaf\x01\n" +
	"\x0fListAttachments\x12\".eolymp.judge.ListAttachmentsInput\x1a#.eolymp.judge.ListAttachmentsOutput\"S\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02$\x12\"/problems/{problem_id}/attachments\x12\xa3\x01\n" +
	"\fListExamples\x12\x1f.eolymp.judge.ListExamplesInput\x1a .eolymp.judge.ListExamplesOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0A\xf8\xe2\n" +
	"d\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02!\x12\x1f/problems/{problem_id}/examples\x12\xa2\x01\n" +
	"\fListRuntimes\x12\x1f.eolymp.judge.ListRuntimesInput\x1a .eolymp.judge.ListRuntimesOutput\"O\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x19\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12judge:contest:read\x82\xd3\xe4\x93\x02 \x12\x1e/problems/{problem_id}/runtimeB-Z+github.com/eolymp/go-sdk/eolymp/judge;judgeb\x06proto3"

var (
	file_eolymp_judge_problem_service_proto_rawDescOnce sync.Once
	file_eolymp_judge_problem_service_proto_rawDescData []byte
)

func file_eolymp_judge_problem_service_proto_rawDescGZIP() []byte {
	file_eolymp_judge_problem_service_proto_rawDescOnce.Do(func() {
		file_eolymp_judge_problem_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_judge_problem_service_proto_rawDesc), len(file_eolymp_judge_problem_service_proto_rawDesc)))
	})
	return file_eolymp_judge_problem_service_proto_rawDescData
}

var file_eolymp_judge_problem_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eolymp_judge_problem_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_eolymp_judge_problem_service_proto_goTypes = []any{
	(UpdateProblemInput_Patch)(0),      // 0: eolymp.judge.UpdateProblemInput.Patch
	(*ImportProblemInput)(nil),         // 1: eolymp.judge.ImportProblemInput
	(*ImportProblemOutput)(nil),        // 2: eolymp.judge.ImportProblemOutput
	(*SyncProblemInput)(nil),           // 3: eolymp.judge.SyncProblemInput
	(*SyncProblemOutput)(nil),          // 4: eolymp.judge.SyncProblemOutput
	(*UpdateProblemInput)(nil),         // 5: eolymp.judge.UpdateProblemInput
	(*UpdateProblemOutput)(nil),        // 6: eolymp.judge.UpdateProblemOutput
	(*DeleteProblemInput)(nil),         // 7: eolymp.judge.DeleteProblemInput
	(*DeleteProblemOutput)(nil),        // 8: eolymp.judge.DeleteProblemOutput
	(*ListProblemsInput)(nil),          // 9: eolymp.judge.ListProblemsInput
	(*ListProblemsOutput)(nil),         // 10: eolymp.judge.ListProblemsOutput
	(*DescribeProblemInput)(nil),       // 11: eolymp.judge.DescribeProblemInput
	(*DescribeProblemOutput)(nil),      // 12: eolymp.judge.DescribeProblemOutput
	(*DescribeCodeTemplateInput)(nil),  // 13: eolymp.judge.DescribeCodeTemplateInput
	(*DescribeCodeTemplateOutput)(nil), // 14: eolymp.judge.DescribeCodeTemplateOutput
	(*LookupCodeTemplateInput)(nil),    // 15: eolymp.judge.LookupCodeTemplateInput
	(*LookupCodeTemplateOutput)(nil),   // 16: eolymp.judge.LookupCodeTemplateOutput
	(*ListStatementsInput)(nil),        // 17: eolymp.judge.ListStatementsInput
	(*ListStatementsOutput)(nil),       // 18: eolymp.judge.ListStatementsOutput
	(*ListAttachmentsInput)(nil),       // 19: eolymp.judge.ListAttachmentsInput
	(*ListAttachmentsOutput)(nil),      // 20: eolymp.judge.ListAttachmentsOutput
	(*ListExamplesInput)(nil),          // 21: eolymp.judge.ListExamplesInput
	(*ListExamplesOutput)(nil),         // 22: eolymp.judge.ListExamplesOutput
	(*ListRuntimesInput)(nil),          // 23: eolymp.judge.ListRuntimesInput
	(*ListRuntimesOutput)(nil),         // 24: eolymp.judge.ListRuntimesOutput
	(*Problem)(nil),                    // 25: eolymp.judge.Problem
	(*Template)(nil),                   // 26: eolymp.judge.Template
	(*Problem_Statement)(nil),          // 27: eolymp.judge.Problem.Statement
	(*Problem_Attachment)(nil),         // 28: eolymp.judge.Problem.Attachment
	(*Problem_Test)(nil),               // 29: eolymp.judge.Problem.Test
	(*runtime.Runtime)(nil),            // 30: eolymp.runtime.Runtime
}
var file_eolymp_judge_problem_service_proto_depIdxs = []int32{
	0,  // 0: eolymp.judge.UpdateProblemInput.patch:type_name -> eolymp.judge.UpdateProblemInput.Patch
	25, // 1: eolymp.judge.UpdateProblemInput.problem:type_name -> eolymp.judge.Problem
	25, // 2: eolymp.judge.ListProblemsOutput.items:type_name -> eolymp.judge.Problem
	25, // 3: eolymp.judge.DescribeProblemOutput.problem:type_name -> eolymp.judge.Problem
	26, // 4: eolymp.judge.DescribeCodeTemplateOutput.template:type_name -> eolymp.judge.Template
	26, // 5: eolymp.judge.LookupCodeTemplateOutput.template:type_name -> eolymp.judge.Template
	27, // 6: eolymp.judge.ListStatementsOutput.items:type_name -> eolymp.judge.Problem.Statement
	28, // 7: eolymp.judge.ListAttachmentsOutput.items:type_name -> eolymp.judge.Problem.Attachment
	29, // 8: eolymp.judge.ListExamplesOutput.items:type_name -> eolymp.judge.Problem.Test
	30, // 9: eolymp.judge.ListRuntimesOutput.items:type_name -> eolymp.runtime.Runtime
	1,  // 10: eolymp.judge.ProblemService.ImportProblem:input_type -> eolymp.judge.ImportProblemInput
	3,  // 11: eolymp.judge.ProblemService.SyncProblem:input_type -> eolymp.judge.SyncProblemInput
	5,  // 12: eolymp.judge.ProblemService.UpdateProblem:input_type -> eolymp.judge.UpdateProblemInput
	9,  // 13: eolymp.judge.ProblemService.ListProblems:input_type -> eolymp.judge.ListProblemsInput
	11, // 14: eolymp.judge.ProblemService.DescribeProblem:input_type -> eolymp.judge.DescribeProblemInput
	7,  // 15: eolymp.judge.ProblemService.DeleteProblem:input_type -> eolymp.judge.DeleteProblemInput
	15, // 16: eolymp.judge.ProblemService.LookupCodeTemplate:input_type -> eolymp.judge.LookupCodeTemplateInput
	13, // 17: eolymp.judge.ProblemService.DescribeCodeTemplate:input_type -> eolymp.judge.DescribeCodeTemplateInput
	17, // 18: eolymp.judge.ProblemService.ListStatements:input_type -> eolymp.judge.ListStatementsInput
	19, // 19: eolymp.judge.ProblemService.ListAttachments:input_type -> eolymp.judge.ListAttachmentsInput
	21, // 20: eolymp.judge.ProblemService.ListExamples:input_type -> eolymp.judge.ListExamplesInput
	23, // 21: eolymp.judge.ProblemService.ListRuntimes:input_type -> eolymp.judge.ListRuntimesInput
	2,  // 22: eolymp.judge.ProblemService.ImportProblem:output_type -> eolymp.judge.ImportProblemOutput
	4,  // 23: eolymp.judge.ProblemService.SyncProblem:output_type -> eolymp.judge.SyncProblemOutput
	6,  // 24: eolymp.judge.ProblemService.UpdateProblem:output_type -> eolymp.judge.UpdateProblemOutput
	10, // 25: eolymp.judge.ProblemService.ListProblems:output_type -> eolymp.judge.ListProblemsOutput
	12, // 26: eolymp.judge.ProblemService.DescribeProblem:output_type -> eolymp.judge.DescribeProblemOutput
	8,  // 27: eolymp.judge.ProblemService.DeleteProblem:output_type -> eolymp.judge.DeleteProblemOutput
	16, // 28: eolymp.judge.ProblemService.LookupCodeTemplate:output_type -> eolymp.judge.LookupCodeTemplateOutput
	14, // 29: eolymp.judge.ProblemService.DescribeCodeTemplate:output_type -> eolymp.judge.DescribeCodeTemplateOutput
	18, // 30: eolymp.judge.ProblemService.ListStatements:output_type -> eolymp.judge.ListStatementsOutput
	20, // 31: eolymp.judge.ProblemService.ListAttachments:output_type -> eolymp.judge.ListAttachmentsOutput
	22, // 32: eolymp.judge.ProblemService.ListExamples:output_type -> eolymp.judge.ListExamplesOutput
	24, // 33: eolymp.judge.ProblemService.ListRuntimes:output_type -> eolymp.judge.ListRuntimesOutput
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eolymp_judge_problem_service_proto_init() }
func file_eolymp_judge_problem_service_proto_init() {
	if File_eolymp_judge_problem_service_proto != nil {
		return
	}
	file_eolymp_judge_problem_proto_init()
	file_eolymp_judge_template_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_judge_problem_service_proto_rawDesc), len(file_eolymp_judge_problem_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_judge_problem_service_proto_goTypes,
		DependencyIndexes: file_eolymp_judge_problem_service_proto_depIdxs,
		EnumInfos:         file_eolymp_judge_problem_service_proto_enumTypes,
		MessageInfos:      file_eolymp_judge_problem_service_proto_msgTypes,
	}.Build()
	File_eolymp_judge_problem_service_proto = out.File
	file_eolymp_judge_problem_service_proto_goTypes = nil
	file_eolymp_judge_problem_service_proto_depIdxs = nil
}
