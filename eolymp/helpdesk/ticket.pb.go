// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: eolymp/helpdesk/ticket.proto

package helpdesk

import (
	ecm "github.com/eolymp/go-sdk/eolymp/ecm"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ticket_Type int32

const (
	Ticket_NONE                  Ticket_Type = 0
	Ticket_QUESTION              Ticket_Type = 1
	Ticket_QUOTA_INCREASE        Ticket_Type = 2
	Ticket_FEEDBACK              Ticket_Type = 3
	Ticket_ACADEMIC_PLAN_REQUEST Ticket_Type = 4
	Ticket_SALES_REQUEST         Ticket_Type = 5
)

// Enum value maps for Ticket_Type.
var (
	Ticket_Type_name = map[int32]string{
		0: "NONE",
		1: "QUESTION",
		2: "QUOTA_INCREASE",
		3: "FEEDBACK",
		4: "ACADEMIC_PLAN_REQUEST",
		5: "SALES_REQUEST",
	}
	Ticket_Type_value = map[string]int32{
		"NONE":                  0,
		"QUESTION":              1,
		"QUOTA_INCREASE":        2,
		"FEEDBACK":              3,
		"ACADEMIC_PLAN_REQUEST": 4,
		"SALES_REQUEST":         5,
	}
)

func (x Ticket_Type) Enum() *Ticket_Type {
	p := new(Ticket_Type)
	*p = x
	return p
}

func (x Ticket_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ticket_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_helpdesk_ticket_proto_enumTypes[0].Descriptor()
}

func (Ticket_Type) Type() protoreflect.EnumType {
	return &file_eolymp_helpdesk_ticket_proto_enumTypes[0]
}

func (x Ticket_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ticket_Type.Descriptor instead.
func (Ticket_Type) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_proto_rawDescGZIP(), []int{0, 0}
}

type Ticket_Status int32

const (
	Ticket_UNKNOWN  Ticket_Status = 0
	Ticket_PENDING  Ticket_Status = 1 // pending review by agent
	Ticket_AWAITING Ticket_Status = 2 // pending action from customer
	Ticket_CLOSED   Ticket_Status = 3 // ticket is resolved
	Ticket_APPROVED Ticket_Status = 4 // request is approved
	Ticket_REJECTED Ticket_Status = 5 // request is rejected
)

// Enum value maps for Ticket_Status.
var (
	Ticket_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "AWAITING",
		3: "CLOSED",
		4: "APPROVED",
		5: "REJECTED",
	}
	Ticket_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"PENDING":  1,
		"AWAITING": 2,
		"CLOSED":   3,
		"APPROVED": 4,
		"REJECTED": 5,
	}
)

func (x Ticket_Status) Enum() *Ticket_Status {
	p := new(Ticket_Status)
	*p = x
	return p
}

func (x Ticket_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ticket_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_helpdesk_ticket_proto_enumTypes[1].Descriptor()
}

func (Ticket_Status) Type() protoreflect.EnumType {
	return &file_eolymp_helpdesk_ticket_proto_enumTypes[1]
}

func (x Ticket_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ticket_Status.Descriptor instead.
func (Ticket_Status) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_proto_rawDescGZIP(), []int{0, 1}
}

type Ticket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          Ticket_Type            `protobuf:"varint,2,opt,name=type,proto3,enum=eolymp.helpdesk.Ticket_Type" json:"type,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail     string                 `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status        Ticket_Status          `protobuf:"varint,6,opt,name=status,proto3,enum=eolymp.helpdesk.Ticket_Status" json:"status,omitempty"`
	Locale        string                 `protobuf:"bytes,9,opt,name=locale,proto3" json:"locale,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Secret        string                 `protobuf:"bytes,12,opt,name=secret,proto3" json:"secret,omitempty"`
	Subject       string                 `protobuf:"bytes,20,opt,name=subject,proto3" json:"subject,omitempty"`
	Message       *ecm.Content           `protobuf:"bytes,50,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	mi := &file_eolymp_helpdesk_ticket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ticket) GetType() Ticket_Type {
	if x != nil {
		return x.Type
	}
	return Ticket_NONE
}

func (x *Ticket) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Ticket) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *Ticket) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Ticket) GetStatus() Ticket_Status {
	if x != nil {
		return x.Status
	}
	return Ticket_UNKNOWN
}

func (x *Ticket) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Ticket) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ticket) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Ticket) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Ticket) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Ticket) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

type Ticket_Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail     string                 `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Message       *ecm.Content           `protobuf:"bytes,50,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ticket_Comment) Reset() {
	*x = Ticket_Comment{}
	mi := &file_eolymp_helpdesk_ticket_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticket_Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Comment) ProtoMessage() {}

func (x *Ticket_Comment) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Comment.ProtoReflect.Descriptor instead.
func (*Ticket_Comment) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Ticket_Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ticket_Comment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Ticket_Comment) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *Ticket_Comment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Ticket_Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ticket_Comment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Ticket_Comment) GetMessage() *ecm.Content {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_eolymp_helpdesk_ticket_proto protoreflect.FileDescriptor

const file_eolymp_helpdesk_ticket_proto_rawDesc = "" +
	"\n" +
	"\x1ceolymp/helpdesk/ticket.proto\x12\x0feolymp.helpdesk\x1a\x18eolymp/ecm/content.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf4\b\n" +
	"\x06Ticket\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x120\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1c.eolymp.helpdesk.Ticket.TypeR\x04type\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"user_email\x18\x04 \x01(\tR\tuserEmail\x12A\n" +
	"\bmetadata\x18\x05 \x03(\v2%.eolymp.helpdesk.Ticket.MetadataEntryR\bmetadata\x126\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1e.eolymp.helpdesk.Ticket.StatusR\x06status\x12\x16\n" +
	"\x06locale\x18\t \x01(\tR\x06locale\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x16\n" +
	"\x06secret\x18\f \x01(\tR\x06secret\x12\x18\n" +
	"\asubject\x18\x14 \x01(\tR\asubject\x12-\n" +
	"\amessage\x182 \x01(\v2\x13.eolymp.ecm.ContentR\amessage\x1a\xfe\x02\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"user_email\x18\x04 \x01(\tR\tuserEmail\x12I\n" +
	"\bmetadata\x18\x05 \x03(\v2-.eolymp.helpdesk.Ticket.Comment.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12-\n" +
	"\amessage\x182 \x01(\v2\x13.eolymp.ecm.ContentR\amessage\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"n\n" +
	"\x04Type\x12\b\n" +
	"\x04NONE\x10\x00\x12\f\n" +
	"\bQUESTION\x10\x01\x12\x12\n" +
	"\x0eQUOTA_INCREASE\x10\x02\x12\f\n" +
	"\bFEEDBACK\x10\x03\x12\x19\n" +
	"\x15ACADEMIC_PLAN_REQUEST\x10\x04\x12\x11\n" +
	"\rSALES_REQUEST\x10\x05\"X\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\f\n" +
	"\bAWAITING\x10\x02\x12\n" +
	"\n" +
	"\x06CLOSED\x10\x03\x12\f\n" +
	"\bAPPROVED\x10\x04\x12\f\n" +
	"\bREJECTED\x10\x05B3Z1github.com/eolymp/go-sdk/eolymp/helpdesk;helpdeskb\x06proto3"

var (
	file_eolymp_helpdesk_ticket_proto_rawDescOnce sync.Once
	file_eolymp_helpdesk_ticket_proto_rawDescData []byte
)

func file_eolymp_helpdesk_ticket_proto_rawDescGZIP() []byte {
	file_eolymp_helpdesk_ticket_proto_rawDescOnce.Do(func() {
		file_eolymp_helpdesk_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_helpdesk_ticket_proto_rawDesc), len(file_eolymp_helpdesk_ticket_proto_rawDesc)))
	})
	return file_eolymp_helpdesk_ticket_proto_rawDescData
}

var file_eolymp_helpdesk_ticket_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_helpdesk_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eolymp_helpdesk_ticket_proto_goTypes = []any{
	(Ticket_Type)(0),              // 0: eolymp.helpdesk.Ticket.Type
	(Ticket_Status)(0),            // 1: eolymp.helpdesk.Ticket.Status
	(*Ticket)(nil),                // 2: eolymp.helpdesk.Ticket
	(*Ticket_Comment)(nil),        // 3: eolymp.helpdesk.Ticket.Comment
	nil,                           // 4: eolymp.helpdesk.Ticket.MetadataEntry
	nil,                           // 5: eolymp.helpdesk.Ticket.Comment.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*ecm.Content)(nil),           // 7: eolymp.ecm.Content
}
var file_eolymp_helpdesk_ticket_proto_depIdxs = []int32{
	0,  // 0: eolymp.helpdesk.Ticket.type:type_name -> eolymp.helpdesk.Ticket.Type
	4,  // 1: eolymp.helpdesk.Ticket.metadata:type_name -> eolymp.helpdesk.Ticket.MetadataEntry
	1,  // 2: eolymp.helpdesk.Ticket.status:type_name -> eolymp.helpdesk.Ticket.Status
	6,  // 3: eolymp.helpdesk.Ticket.created_at:type_name -> google.protobuf.Timestamp
	6,  // 4: eolymp.helpdesk.Ticket.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 5: eolymp.helpdesk.Ticket.message:type_name -> eolymp.ecm.Content
	5,  // 6: eolymp.helpdesk.Ticket.Comment.metadata:type_name -> eolymp.helpdesk.Ticket.Comment.MetadataEntry
	6,  // 7: eolymp.helpdesk.Ticket.Comment.created_at:type_name -> google.protobuf.Timestamp
	6,  // 8: eolymp.helpdesk.Ticket.Comment.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 9: eolymp.helpdesk.Ticket.Comment.message:type_name -> eolymp.ecm.Content
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eolymp_helpdesk_ticket_proto_init() }
func file_eolymp_helpdesk_ticket_proto_init() {
	if File_eolymp_helpdesk_ticket_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_helpdesk_ticket_proto_rawDesc), len(file_eolymp_helpdesk_ticket_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eolymp_helpdesk_ticket_proto_goTypes,
		DependencyIndexes: file_eolymp_helpdesk_ticket_proto_depIdxs,
		EnumInfos:         file_eolymp_helpdesk_ticket_proto_enumTypes,
		MessageInfos:      file_eolymp_helpdesk_ticket_proto_msgTypes,
	}.Build()
	File_eolymp_helpdesk_ticket_proto = out.File
	file_eolymp_helpdesk_ticket_proto_goTypes = nil
	file_eolymp_helpdesk_ticket_proto_depIdxs = nil
}
