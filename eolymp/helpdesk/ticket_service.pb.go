// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: eolymp/helpdesk/ticket_service.proto

package helpdesk

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Captcha       string                 `protobuf:"bytes,2,opt,name=captcha,proto3" json:"captcha,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketInput) Reset() {
	*x = CreateTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketInput) ProtoMessage() {}

func (x *CreateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketInput.ProtoReflect.Descriptor instead.
func (*CreateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTicketInput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CreateTicketInput) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

type CreateTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketOutput) Reset() {
	*x = CreateTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOutput) ProtoMessage() {}

func (x *CreateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOutput.ProtoReflect.Descriptor instead.
func (*CreateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTicketOutput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type UpdateTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Ticket        *Ticket                `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketInput) Reset() {
	*x = UpdateTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketInput) ProtoMessage() {}

func (x *UpdateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketInput.ProtoReflect.Descriptor instead.
func (*UpdateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateTicketInput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type UpdateTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketOutput) Reset() {
	*x = UpdateTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketOutput) ProtoMessage() {}

func (x *UpdateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketOutput.ProtoReflect.Descriptor instead.
func (*UpdateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{3}
}

type DeleteTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketInput) Reset() {
	*x = DeleteTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketInput) ProtoMessage() {}

func (x *DeleteTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketInput.ProtoReflect.Descriptor instead.
func (*DeleteTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type DeleteTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketOutput) Reset() {
	*x = DeleteTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketOutput) ProtoMessage() {}

func (x *DeleteTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketOutput.ProtoReflect.Descriptor instead.
func (*DeleteTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{5}
}

type DescribeTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Render        bool                   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTicketInput) Reset() {
	*x = DescribeTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketInput) ProtoMessage() {}

func (x *DescribeTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketInput.ProtoReflect.Descriptor instead.
func (*DescribeTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeTicketInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

type DescribeTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTicketOutput) Reset() {
	*x = DescribeTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketOutput) ProtoMessage() {}

func (x *DescribeTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketOutput.ProtoReflect.Descriptor instead.
func (*DescribeTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeTicketOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type ListTicketsInput struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Render bool                   `protobuf:"varint,1,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters       *ListTicketsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsInput) Reset() {
	*x = ListTicketsInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput) ProtoMessage() {}

func (x *ListTicketsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput.ProtoReflect.Descriptor instead.
func (*ListTicketsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListTicketsInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListTicketsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTicketsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTicketsInput) GetFilters() *ListTicketsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListTicketsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Ticket              `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsOutput) Reset() {
	*x = ListTicketsOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsOutput) ProtoMessage() {}

func (x *ListTicketsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsOutput.ProtoReflect.Descriptor instead.
func (*ListTicketsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListTicketsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTicketsOutput) GetItems() []*Ticket {
	if x != nil {
		return x.Items
	}
	return nil
}

type ApproveTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveTicketInput) Reset() {
	*x = ApproveTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTicketInput) ProtoMessage() {}

func (x *ApproveTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTicketInput.ProtoReflect.Descriptor instead.
func (*ApproveTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{10}
}

func (x *ApproveTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ApproveTicketInput) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ApproveTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveTicketOutput) Reset() {
	*x = ApproveTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTicketOutput) ProtoMessage() {}

func (x *ApproveTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTicketOutput.ProtoReflect.Descriptor instead.
func (*ApproveTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{11}
}

type RejectTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectTicketInput) Reset() {
	*x = RejectTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTicketInput) ProtoMessage() {}

func (x *RejectTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTicketInput.ProtoReflect.Descriptor instead.
func (*RejectTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{12}
}

func (x *RejectTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *RejectTicketInput) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type RejectTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectTicketOutput) Reset() {
	*x = RejectTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTicketOutput) ProtoMessage() {}

func (x *RejectTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTicketOutput.ProtoReflect.Descriptor instead.
func (*RejectTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{13}
}

type CloseTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketInput) Reset() {
	*x = CloseTicketInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketInput) ProtoMessage() {}

func (x *CloseTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketInput.ProtoReflect.Descriptor instead.
func (*CloseTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{14}
}

func (x *CloseTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *CloseTicketInput) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CloseTicketOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketOutput) Reset() {
	*x = CloseTicketOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketOutput) ProtoMessage() {}

func (x *CloseTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketOutput.ProtoReflect.Descriptor instead.
func (*CloseTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{15}
}

type AddCommentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment       *Ticket_Comment        `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentInput) Reset() {
	*x = AddCommentInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentInput) ProtoMessage() {}

func (x *AddCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentInput.ProtoReflect.Descriptor instead.
func (*AddCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{16}
}

func (x *AddCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AddCommentInput) GetComment() *Ticket_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type AddCommentOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentOutput) Reset() {
	*x = AddCommentOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentOutput) ProtoMessage() {}

func (x *AddCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentOutput.ProtoReflect.Descriptor instead.
func (*AddCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{17}
}

func (x *AddCommentOutput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type UpdateCommentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Comment       *Ticket_Comment        `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentInput) Reset() {
	*x = UpdateCommentInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentInput) ProtoMessage() {}

func (x *UpdateCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentInput.ProtoReflect.Descriptor instead.
func (*UpdateCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateCommentInput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *UpdateCommentInput) GetComment() *Ticket_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UpdateCommentOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentOutput) Reset() {
	*x = UpdateCommentOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentOutput) ProtoMessage() {}

func (x *UpdateCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentOutput.ProtoReflect.Descriptor instead.
func (*UpdateCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{19}
}

type DeleteCommentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentInput) Reset() {
	*x = DeleteCommentInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentInput) ProtoMessage() {}

func (x *DeleteCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentInput.ProtoReflect.Descriptor instead.
func (*DeleteCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DeleteCommentInput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type DeleteCommentOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentOutput) Reset() {
	*x = DeleteCommentOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentOutput) ProtoMessage() {}

func (x *DeleteCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentOutput.ProtoReflect.Descriptor instead.
func (*DeleteCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{21}
}

type ListCommentsInput struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TicketId string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Render   bool                   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	Offset        int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size          int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsInput) Reset() {
	*x = ListCommentsInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsInput) ProtoMessage() {}

func (x *ListCommentsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsInput.ProtoReflect.Descriptor instead.
func (*ListCommentsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListCommentsInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ListCommentsInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListCommentsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListCommentsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListCommentsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*Ticket_Comment      `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsOutput) Reset() {
	*x = ListCommentsOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsOutput) ProtoMessage() {}

func (x *ListCommentsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsOutput.ProtoReflect.Descriptor instead.
func (*ListCommentsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListCommentsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCommentsOutput) GetItems() []*Ticket_Comment {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeCommentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Render        bool                   `protobuf:"varint,3,opt,name=render,proto3" json:"render,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeCommentInput) Reset() {
	*x = DescribeCommentInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCommentInput) ProtoMessage() {}

func (x *DescribeCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCommentInput.ProtoReflect.Descriptor instead.
func (*DescribeCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{24}
}

func (x *DescribeCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeCommentInput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *DescribeCommentInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

type DescribeCommentOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Ticket_Comment        `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeCommentOutput) Reset() {
	*x = DescribeCommentOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCommentOutput) ProtoMessage() {}

func (x *DescribeCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCommentOutput.ProtoReflect.Descriptor instead.
func (*DescribeCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeCommentOutput) GetComment() *Ticket_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UploadAttachmentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAttachmentInput) Reset() {
	*x = UploadAttachmentInput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAttachmentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAttachmentInput) ProtoMessage() {}

func (x *UploadAttachmentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAttachmentInput.ProtoReflect.Descriptor instead.
func (*UploadAttachmentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{26}
}

func (x *UploadAttachmentInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadAttachmentInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadAttachmentInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadAttachmentOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttachmentUrl string                 `protobuf:"bytes,1,opt,name=attachment_url,json=attachmentUrl,proto3" json:"attachment_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAttachmentOutput) Reset() {
	*x = UploadAttachmentOutput{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAttachmentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAttachmentOutput) ProtoMessage() {}

func (x *UploadAttachmentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAttachmentOutput.ProtoReflect.Descriptor instead.
func (*UploadAttachmentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{27}
}

func (x *UploadAttachmentOutput) GetAttachmentUrl() string {
	if x != nil {
		return x.AttachmentUrl
	}
	return ""
}

type ListTicketsInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Query         string                           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id            []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	UserId        []*wellknown.ExpressionID        `protobuf:"bytes,3,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail     []*wellknown.ExpressionEnum      `protobuf:"bytes,4,rep,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	Status        []*wellknown.ExpressionEnum      `protobuf:"bytes,5,rep,name=status,proto3" json:"status,omitempty"`
	Type          []*wellknown.ExpressionEnum      `protobuf:"bytes,6,rep,name=type,proto3" json:"type,omitempty"`
	CreatedAt     []*wellknown.ExpressionTimestamp `protobuf:"bytes,7,rep,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     []*wellknown.ExpressionTimestamp `protobuf:"bytes,8,rep,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Locale        []*wellknown.ExpressionEnum      `protobuf:"bytes,9,rep,name=locale,proto3" json:"locale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsInput_Filter) Reset() {
	*x = ListTicketsInput_Filter{}
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput_Filter) ProtoMessage() {}

func (x *ListTicketsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_ticket_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListTicketsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListTicketsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListTicketsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetUserId() []*wellknown.ExpressionID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetUserEmail() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.UserEmail
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetType() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetCreatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetUpdatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetLocale() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Locale
	}
	return nil
}

var File_eolymp_helpdesk_ticket_service_proto protoreflect.FileDescriptor

const file_eolymp_helpdesk_ticket_service_proto_rawDesc = "" +
	"\n" +
	"$eolymp/helpdesk/ticket_service.proto\x12\x0feolymp.helpdesk\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1ceolymp/helpdesk/ticket.proto\x1a!eolymp/wellknown/expression.proto\"^\n" +
	"\x11CreateTicketInput\x12/\n" +
	"\x06ticket\x18\x01 \x01(\v2\x17.eolymp.helpdesk.TicketR\x06ticket\x12\x18\n" +
	"\acaptcha\x18\x02 \x01(\tR\acaptcha\"1\n" +
	"\x12CreateTicketOutput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\"a\n" +
	"\x11UpdateTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12/\n" +
	"\x06ticket\x18\x02 \x01(\v2\x17.eolymp.helpdesk.TicketR\x06ticket\"\x14\n" +
	"\x12UpdateTicketOutput\"0\n" +
	"\x11DeleteTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\"\x14\n" +
	"\x12DeleteTicketOutput\"J\n" +
	"\x13DescribeTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x16\n" +
	"\x06render\x18\x02 \x01(\bR\x06render\"G\n" +
	"\x14DescribeTicketOutput\x12/\n" +
	"\x06ticket\x18\x01 \x01(\v2\x17.eolymp.helpdesk.TicketR\x06ticket\"\x9b\x05\n" +
	"\x10ListTicketsInput\x12\x16\n" +
	"\x06render\x18\x01 \x01(\bR\x06render\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12B\n" +
	"\afilters\x18( \x01(\v2(.eolymp.helpdesk.ListTicketsInput.FilterR\afilters\x1a\xfe\x03\n" +
	"\x06Filter\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12.\n" +
	"\x02id\x18\x02 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x127\n" +
	"\auser_id\x18\x03 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x06userId\x12?\n" +
	"\n" +
	"user_email\x18\x04 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\tuserEmail\x128\n" +
	"\x06status\x18\x05 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\x124\n" +
	"\x04type\x18\x06 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x04type\x12D\n" +
	"\n" +
	"created_at\x18\a \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\tcreatedAt\x12D\n" +
	"\n" +
	"updated_at\x18\b \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\tupdatedAt\x128\n" +
	"\x06locale\x18\t \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06locale\"X\n" +
	"\x11ListTicketsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12-\n" +
	"\x05items\x18\x02 \x03(\v2\x17.eolymp.helpdesk.TicketR\x05items\"K\n" +
	"\x12ApproveTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"\x15\n" +
	"\x13ApproveTicketOutput\"J\n" +
	"\x11RejectTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"\x14\n" +
	"\x12RejectTicketOutput\"I\n" +
	"\x10CloseTicketInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"\x13\n" +
	"\x11CloseTicketOutput\"i\n" +
	"\x0fAddCommentInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x129\n" +
	"\acomment\x18\x02 \x01(\v2\x1f.eolymp.helpdesk.Ticket.CommentR\acomment\"1\n" +
	"\x10AddCommentOutput\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"\x8b\x01\n" +
	"\x12UpdateCommentInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\x129\n" +
	"\acomment\x18\x03 \x01(\v2\x1f.eolymp.helpdesk.Ticket.CommentR\acomment\"\x15\n" +
	"\x13UpdateCommentOutput\"P\n" +
	"\x12DeleteCommentInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\"\x15\n" +
	"\x13DeleteCommentOutput\"t\n" +
	"\x11ListCommentsInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x16\n" +
	"\x06render\x18\x02 \x01(\bR\x06render\x12\x16\n" +
	"\x06offset\x18\n" +
	" \x01(\x05R\x06offset\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\"a\n" +
	"\x12ListCommentsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x125\n" +
	"\x05items\x18\x02 \x03(\v2\x1f.eolymp.helpdesk.Ticket.CommentR\x05items\"j\n" +
	"\x14DescribeCommentInput\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\x12\x16\n" +
	"\x06render\x18\x03 \x01(\bR\x06render\"R\n" +
	"\x15DescribeCommentOutput\x129\n" +
	"\acomment\x18\x01 \x01(\v2\x1f.eolymp.helpdesk.Ticket.CommentR\acomment\"S\n" +
	"\x15UploadAttachmentInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"?\n" +
	"\x16UploadAttachmentOutput\x12%\n" +
	"\x0eattachment_url\x18\x01 \x01(\tR\rattachmentUrl2\xe3\x13\n" +
	"\rTicketService\x12\x9e\x01\n" +
	"\fCreateTicket\x12\".eolymp.helpdesk.CreateTicketInput\x1a#.eolymp.helpdesk.CreateTicketOutput\"E\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02\x13\"\x11/helpdesk/tickets\x12\xaa\x01\n" +
	"\fUpdateTicket\x12\".eolymp.helpdesk.UpdateTicketInput\x1a#.eolymp.helpdesk.UpdateTicketOutput\"Q\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02\x1f\x1a\x1d/helpdesk/tickets/{ticket_id}\x12\xaa\x01\n" +
	"\fDeleteTicket\x12\".eolymp.helpdesk.DeleteTicketInput\x1a#.eolymp.helpdesk.DeleteTicketOutput\"Q\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02\x1f*\x1d/helpdesk/tickets/{ticket_id}\x12\xaf\x01\n" +
	"\x0eDescribeTicket\x12$.eolymp.helpdesk.DescribeTicketInput\x1a%.eolymp.helpdesk.DescribeTicketOutput\"P\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x18\x8a\xe3\n" +
	"\x14helpdesk:ticket:read\x82\xd3\xe4\x93\x02\x1f\x12\x1d/helpdesk/tickets/{ticket_id}\x12\x9a\x01\n" +
	"\vListTickets\x12!.eolymp.helpdesk.ListTicketsInput\x1a\".eolymp.helpdesk.ListTicketsOutput\"D\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x18\x8a\xe3\n" +
	"\x14helpdesk:ticket:read\x82\xd3\xe4\x93\x02\x13\x12\x11/helpdesk/tickets\x12\xb5\x01\n" +
	"\rApproveTicket\x12#.eolymp.helpdesk.ApproveTicketInput\x1a$.eolymp.helpdesk.ApproveTicketOutput\"Y\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02'\"%/helpdesk/tickets/{ticket_id}/approve\x12\xb1\x01\n" +
	"\fRejectTicket\x12\".eolymp.helpdesk.RejectTicketInput\x1a#.eolymp.helpdesk.RejectTicketOutput\"X\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02&\"$/helpdesk/tickets/{ticket_id}/reject\x12\xad\x01\n" +
	"\vCloseTicket\x12!.eolymp.helpdesk.CloseTicketInput\x1a\".eolymp.helpdesk.CloseTicketOutput\"W\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02%\"#/helpdesk/tickets/{ticket_id}/close\x12\xad\x01\n" +
	"\n" +
	"AddComment\x12 .eolymp.helpdesk.AddCommentInput\x1a!.eolymp.helpdesk.AddCommentOutput\"Z\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02(\"&/helpdesk/tickets/{ticket_id}/comments\x12\xc3\x01\n" +
	"\rUpdateComment\x12#.eolymp.helpdesk.UpdateCommentInput\x1a$.eolymp.helpdesk.UpdateCommentOutput\"g\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x025\x1a3/helpdesk/tickets/{ticket_id}/comments/{comment_id}\x12\xc3\x01\n" +
	"\rDeleteComment\x12#.eolymp.helpdesk.DeleteCommentInput\x1a$.eolymp.helpdesk.DeleteCommentOutput\"g\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x025*3/helpdesk/tickets/{ticket_id}/comments/{comment_id}\x12\xb2\x01\n" +
	"\fListComments\x12\".eolymp.helpdesk.ListCommentsInput\x1a#.eolymp.helpdesk.ListCommentsOutput\"Y\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"\x14\x82\xe3\n" +
	"\x18\x8a\xe3\n" +
	"\x14helpdesk:ticket:read\x82\xd3\xe4\x93\x02(\x12&/helpdesk/tickets/{ticket_id}/comments\x12\xc9\x01\n" +
	"\x0fDescribeComment\x12%.eolymp.helpdesk.DescribeCommentInput\x1a&.eolymp.helpdesk.DescribeCommentOutput\"g\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x025\x123/helpdesk/tickets/{ticket_id}/comments/{comment_id}\x12\xae\x01\n" +
	"\x10UploadAttachment\x12&.eolymp.helpdesk.UploadAttachmentInput\x1a'.eolymp.helpdesk.UploadAttachmentOutput\"I\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\xa0@\xf8\xe2\n" +
	"2\x82\xe3\n" +
	"\x19\x8a\xe3\n" +
	"\x15helpdesk:ticket:write\x82\xd3\xe4\x93\x02\x17\"\x15/helpdesk/attachmentsB3Z1github.com/eolymp/go-sdk/eolymp/helpdesk;helpdeskb\x06proto3"

var (
	file_eolymp_helpdesk_ticket_service_proto_rawDescOnce sync.Once
	file_eolymp_helpdesk_ticket_service_proto_rawDescData []byte
)

func file_eolymp_helpdesk_ticket_service_proto_rawDescGZIP() []byte {
	file_eolymp_helpdesk_ticket_service_proto_rawDescOnce.Do(func() {
		file_eolymp_helpdesk_ticket_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_helpdesk_ticket_service_proto_rawDesc), len(file_eolymp_helpdesk_ticket_service_proto_rawDesc)))
	})
	return file_eolymp_helpdesk_ticket_service_proto_rawDescData
}

var file_eolymp_helpdesk_ticket_service_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_eolymp_helpdesk_ticket_service_proto_goTypes = []any{
	(*CreateTicketInput)(nil),             // 0: eolymp.helpdesk.CreateTicketInput
	(*CreateTicketOutput)(nil),            // 1: eolymp.helpdesk.CreateTicketOutput
	(*UpdateTicketInput)(nil),             // 2: eolymp.helpdesk.UpdateTicketInput
	(*UpdateTicketOutput)(nil),            // 3: eolymp.helpdesk.UpdateTicketOutput
	(*DeleteTicketInput)(nil),             // 4: eolymp.helpdesk.DeleteTicketInput
	(*DeleteTicketOutput)(nil),            // 5: eolymp.helpdesk.DeleteTicketOutput
	(*DescribeTicketInput)(nil),           // 6: eolymp.helpdesk.DescribeTicketInput
	(*DescribeTicketOutput)(nil),          // 7: eolymp.helpdesk.DescribeTicketOutput
	(*ListTicketsInput)(nil),              // 8: eolymp.helpdesk.ListTicketsInput
	(*ListTicketsOutput)(nil),             // 9: eolymp.helpdesk.ListTicketsOutput
	(*ApproveTicketInput)(nil),            // 10: eolymp.helpdesk.ApproveTicketInput
	(*ApproveTicketOutput)(nil),           // 11: eolymp.helpdesk.ApproveTicketOutput
	(*RejectTicketInput)(nil),             // 12: eolymp.helpdesk.RejectTicketInput
	(*RejectTicketOutput)(nil),            // 13: eolymp.helpdesk.RejectTicketOutput
	(*CloseTicketInput)(nil),              // 14: eolymp.helpdesk.CloseTicketInput
	(*CloseTicketOutput)(nil),             // 15: eolymp.helpdesk.CloseTicketOutput
	(*AddCommentInput)(nil),               // 16: eolymp.helpdesk.AddCommentInput
	(*AddCommentOutput)(nil),              // 17: eolymp.helpdesk.AddCommentOutput
	(*UpdateCommentInput)(nil),            // 18: eolymp.helpdesk.UpdateCommentInput
	(*UpdateCommentOutput)(nil),           // 19: eolymp.helpdesk.UpdateCommentOutput
	(*DeleteCommentInput)(nil),            // 20: eolymp.helpdesk.DeleteCommentInput
	(*DeleteCommentOutput)(nil),           // 21: eolymp.helpdesk.DeleteCommentOutput
	(*ListCommentsInput)(nil),             // 22: eolymp.helpdesk.ListCommentsInput
	(*ListCommentsOutput)(nil),            // 23: eolymp.helpdesk.ListCommentsOutput
	(*DescribeCommentInput)(nil),          // 24: eolymp.helpdesk.DescribeCommentInput
	(*DescribeCommentOutput)(nil),         // 25: eolymp.helpdesk.DescribeCommentOutput
	(*UploadAttachmentInput)(nil),         // 26: eolymp.helpdesk.UploadAttachmentInput
	(*UploadAttachmentOutput)(nil),        // 27: eolymp.helpdesk.UploadAttachmentOutput
	(*ListTicketsInput_Filter)(nil),       // 28: eolymp.helpdesk.ListTicketsInput.Filter
	(*Ticket)(nil),                        // 29: eolymp.helpdesk.Ticket
	(*Ticket_Comment)(nil),                // 30: eolymp.helpdesk.Ticket.Comment
	(*wellknown.ExpressionID)(nil),        // 31: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionEnum)(nil),      // 32: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionTimestamp)(nil), // 33: eolymp.wellknown.ExpressionTimestamp
}
var file_eolymp_helpdesk_ticket_service_proto_depIdxs = []int32{
	29, // 0: eolymp.helpdesk.CreateTicketInput.ticket:type_name -> eolymp.helpdesk.Ticket
	29, // 1: eolymp.helpdesk.UpdateTicketInput.ticket:type_name -> eolymp.helpdesk.Ticket
	29, // 2: eolymp.helpdesk.DescribeTicketOutput.ticket:type_name -> eolymp.helpdesk.Ticket
	28, // 3: eolymp.helpdesk.ListTicketsInput.filters:type_name -> eolymp.helpdesk.ListTicketsInput.Filter
	29, // 4: eolymp.helpdesk.ListTicketsOutput.items:type_name -> eolymp.helpdesk.Ticket
	30, // 5: eolymp.helpdesk.AddCommentInput.comment:type_name -> eolymp.helpdesk.Ticket.Comment
	30, // 6: eolymp.helpdesk.UpdateCommentInput.comment:type_name -> eolymp.helpdesk.Ticket.Comment
	30, // 7: eolymp.helpdesk.ListCommentsOutput.items:type_name -> eolymp.helpdesk.Ticket.Comment
	30, // 8: eolymp.helpdesk.DescribeCommentOutput.comment:type_name -> eolymp.helpdesk.Ticket.Comment
	31, // 9: eolymp.helpdesk.ListTicketsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	31, // 10: eolymp.helpdesk.ListTicketsInput.Filter.user_id:type_name -> eolymp.wellknown.ExpressionID
	32, // 11: eolymp.helpdesk.ListTicketsInput.Filter.user_email:type_name -> eolymp.wellknown.ExpressionEnum
	32, // 12: eolymp.helpdesk.ListTicketsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	32, // 13: eolymp.helpdesk.ListTicketsInput.Filter.type:type_name -> eolymp.wellknown.ExpressionEnum
	33, // 14: eolymp.helpdesk.ListTicketsInput.Filter.created_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	33, // 15: eolymp.helpdesk.ListTicketsInput.Filter.updated_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	32, // 16: eolymp.helpdesk.ListTicketsInput.Filter.locale:type_name -> eolymp.wellknown.ExpressionEnum
	0,  // 17: eolymp.helpdesk.TicketService.CreateTicket:input_type -> eolymp.helpdesk.CreateTicketInput
	2,  // 18: eolymp.helpdesk.TicketService.UpdateTicket:input_type -> eolymp.helpdesk.UpdateTicketInput
	4,  // 19: eolymp.helpdesk.TicketService.DeleteTicket:input_type -> eolymp.helpdesk.DeleteTicketInput
	6,  // 20: eolymp.helpdesk.TicketService.DescribeTicket:input_type -> eolymp.helpdesk.DescribeTicketInput
	8,  // 21: eolymp.helpdesk.TicketService.ListTickets:input_type -> eolymp.helpdesk.ListTicketsInput
	10, // 22: eolymp.helpdesk.TicketService.ApproveTicket:input_type -> eolymp.helpdesk.ApproveTicketInput
	12, // 23: eolymp.helpdesk.TicketService.RejectTicket:input_type -> eolymp.helpdesk.RejectTicketInput
	14, // 24: eolymp.helpdesk.TicketService.CloseTicket:input_type -> eolymp.helpdesk.CloseTicketInput
	16, // 25: eolymp.helpdesk.TicketService.AddComment:input_type -> eolymp.helpdesk.AddCommentInput
	18, // 26: eolymp.helpdesk.TicketService.UpdateComment:input_type -> eolymp.helpdesk.UpdateCommentInput
	20, // 27: eolymp.helpdesk.TicketService.DeleteComment:input_type -> eolymp.helpdesk.DeleteCommentInput
	22, // 28: eolymp.helpdesk.TicketService.ListComments:input_type -> eolymp.helpdesk.ListCommentsInput
	24, // 29: eolymp.helpdesk.TicketService.DescribeComment:input_type -> eolymp.helpdesk.DescribeCommentInput
	26, // 30: eolymp.helpdesk.TicketService.UploadAttachment:input_type -> eolymp.helpdesk.UploadAttachmentInput
	1,  // 31: eolymp.helpdesk.TicketService.CreateTicket:output_type -> eolymp.helpdesk.CreateTicketOutput
	3,  // 32: eolymp.helpdesk.TicketService.UpdateTicket:output_type -> eolymp.helpdesk.UpdateTicketOutput
	5,  // 33: eolymp.helpdesk.TicketService.DeleteTicket:output_type -> eolymp.helpdesk.DeleteTicketOutput
	7,  // 34: eolymp.helpdesk.TicketService.DescribeTicket:output_type -> eolymp.helpdesk.DescribeTicketOutput
	9,  // 35: eolymp.helpdesk.TicketService.ListTickets:output_type -> eolymp.helpdesk.ListTicketsOutput
	11, // 36: eolymp.helpdesk.TicketService.ApproveTicket:output_type -> eolymp.helpdesk.ApproveTicketOutput
	13, // 37: eolymp.helpdesk.TicketService.RejectTicket:output_type -> eolymp.helpdesk.RejectTicketOutput
	15, // 38: eolymp.helpdesk.TicketService.CloseTicket:output_type -> eolymp.helpdesk.CloseTicketOutput
	17, // 39: eolymp.helpdesk.TicketService.AddComment:output_type -> eolymp.helpdesk.AddCommentOutput
	19, // 40: eolymp.helpdesk.TicketService.UpdateComment:output_type -> eolymp.helpdesk.UpdateCommentOutput
	21, // 41: eolymp.helpdesk.TicketService.DeleteComment:output_type -> eolymp.helpdesk.DeleteCommentOutput
	23, // 42: eolymp.helpdesk.TicketService.ListComments:output_type -> eolymp.helpdesk.ListCommentsOutput
	25, // 43: eolymp.helpdesk.TicketService.DescribeComment:output_type -> eolymp.helpdesk.DescribeCommentOutput
	27, // 44: eolymp.helpdesk.TicketService.UploadAttachment:output_type -> eolymp.helpdesk.UploadAttachmentOutput
	31, // [31:45] is the sub-list for method output_type
	17, // [17:31] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_eolymp_helpdesk_ticket_service_proto_init() }
func file_eolymp_helpdesk_ticket_service_proto_init() {
	if File_eolymp_helpdesk_ticket_service_proto != nil {
		return
	}
	file_eolymp_helpdesk_ticket_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_helpdesk_ticket_service_proto_rawDesc), len(file_eolymp_helpdesk_ticket_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_helpdesk_ticket_service_proto_goTypes,
		DependencyIndexes: file_eolymp_helpdesk_ticket_service_proto_depIdxs,
		MessageInfos:      file_eolymp_helpdesk_ticket_service_proto_msgTypes,
	}.Build()
	File_eolymp_helpdesk_ticket_service_proto = out.File
	file_eolymp_helpdesk_ticket_service_proto_goTypes = nil
	file_eolymp_helpdesk_ticket_service_proto_depIdxs = nil
}
