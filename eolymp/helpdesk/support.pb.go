// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: eolymp/helpdesk/support.proto

package helpdesk

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket  *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Captcha string  `protobuf:"bytes,2,opt,name=captcha,proto3" json:"captcha,omitempty"`
}

func (x *CreateTicketInput) Reset() {
	*x = CreateTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketInput) ProtoMessage() {}

func (x *CreateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketInput.ProtoReflect.Descriptor instead.
func (*CreateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTicketInput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CreateTicketInput) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

type CreateTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *CreateTicketOutput) Reset() {
	*x = CreateTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOutput) ProtoMessage() {}

func (x *CreateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOutput.ProtoReflect.Descriptor instead.
func (*CreateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTicketOutput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type UpdateTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string  `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Ticket   *Ticket `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *UpdateTicketInput) Reset() {
	*x = UpdateTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketInput) ProtoMessage() {}

func (x *UpdateTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketInput.ProtoReflect.Descriptor instead.
func (*UpdateTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateTicketInput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type UpdateTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTicketOutput) Reset() {
	*x = UpdateTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketOutput) ProtoMessage() {}

func (x *UpdateTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketOutput.ProtoReflect.Descriptor instead.
func (*UpdateTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{3}
}

type DeleteTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *DeleteTicketInput) Reset() {
	*x = DeleteTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketInput) ProtoMessage() {}

func (x *DeleteTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketInput.ProtoReflect.Descriptor instead.
func (*DeleteTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type DeleteTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTicketOutput) Reset() {
	*x = DeleteTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketOutput) ProtoMessage() {}

func (x *DeleteTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketOutput.ProtoReflect.Descriptor instead.
func (*DeleteTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{5}
}

type DescribeTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Render   bool   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
}

func (x *DescribeTicketInput) Reset() {
	*x = DescribeTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketInput) ProtoMessage() {}

func (x *DescribeTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketInput.ProtoReflect.Descriptor instead.
func (*DescribeTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeTicketInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

type DescribeTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *DescribeTicketOutput) Reset() {
	*x = DescribeTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTicketOutput) ProtoMessage() {}

func (x *DescribeTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTicketOutput.ProtoReflect.Descriptor instead.
func (*DescribeTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeTicketOutput) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type ListTicketsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Render bool `protobuf:"varint,1,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListTicketsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListTicketsInput) Reset() {
	*x = ListTicketsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTicketsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput) ProtoMessage() {}

func (x *ListTicketsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput.ProtoReflect.Descriptor instead.
func (*ListTicketsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{8}
}

func (x *ListTicketsInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListTicketsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTicketsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTicketsInput) GetFilters() *ListTicketsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListTicketsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Ticket `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTicketsOutput) Reset() {
	*x = ListTicketsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTicketsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsOutput) ProtoMessage() {}

func (x *ListTicketsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsOutput.ProtoReflect.Descriptor instead.
func (*ListTicketsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{9}
}

func (x *ListTicketsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTicketsOutput) GetItems() []*Ticket {
	if x != nil {
		return x.Items
	}
	return nil
}

type ApproveTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment  string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ApproveTicketInput) Reset() {
	*x = ApproveTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTicketInput) ProtoMessage() {}

func (x *ApproveTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTicketInput.ProtoReflect.Descriptor instead.
func (*ApproveTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{10}
}

func (x *ApproveTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ApproveTicketInput) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ApproveTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApproveTicketOutput) Reset() {
	*x = ApproveTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTicketOutput) ProtoMessage() {}

func (x *ApproveTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTicketOutput.ProtoReflect.Descriptor instead.
func (*ApproveTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{11}
}

type RejectTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment  string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *RejectTicketInput) Reset() {
	*x = RejectTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTicketInput) ProtoMessage() {}

func (x *RejectTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTicketInput.ProtoReflect.Descriptor instead.
func (*RejectTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{12}
}

func (x *RejectTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *RejectTicketInput) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type RejectTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejectTicketOutput) Reset() {
	*x = RejectTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTicketOutput) ProtoMessage() {}

func (x *RejectTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTicketOutput.ProtoReflect.Descriptor instead.
func (*RejectTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{13}
}

type CloseTicketInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment  string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CloseTicketInput) Reset() {
	*x = CloseTicketInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketInput) ProtoMessage() {}

func (x *CloseTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketInput.ProtoReflect.Descriptor instead.
func (*CloseTicketInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{14}
}

func (x *CloseTicketInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *CloseTicketInput) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CloseTicketOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseTicketOutput) Reset() {
	*x = CloseTicketOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTicketOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketOutput) ProtoMessage() {}

func (x *CloseTicketOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketOutput.ProtoReflect.Descriptor instead.
func (*CloseTicketOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{15}
}

type AddCommentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string          `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Comment  *Ticket_Comment `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *AddCommentInput) Reset() {
	*x = AddCommentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentInput) ProtoMessage() {}

func (x *AddCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentInput.ProtoReflect.Descriptor instead.
func (*AddCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{16}
}

func (x *AddCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AddCommentInput) GetComment() *Ticket_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type AddCommentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *AddCommentOutput) Reset() {
	*x = AddCommentOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentOutput) ProtoMessage() {}

func (x *AddCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentOutput.ProtoReflect.Descriptor instead.
func (*AddCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{17}
}

func (x *AddCommentOutput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type UpdateCommentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId  string          `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CommentId string          `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Comment   *Ticket_Comment `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *UpdateCommentInput) Reset() {
	*x = UpdateCommentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentInput) ProtoMessage() {}

func (x *UpdateCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentInput.ProtoReflect.Descriptor instead.
func (*UpdateCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateCommentInput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *UpdateCommentInput) GetComment() *Ticket_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UpdateCommentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCommentOutput) Reset() {
	*x = UpdateCommentOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentOutput) ProtoMessage() {}

func (x *UpdateCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentOutput.ProtoReflect.Descriptor instead.
func (*UpdateCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{19}
}

type DeleteCommentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId  string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *DeleteCommentInput) Reset() {
	*x = DeleteCommentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentInput) ProtoMessage() {}

func (x *DeleteCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentInput.ProtoReflect.Descriptor instead.
func (*DeleteCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DeleteCommentInput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type DeleteCommentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCommentOutput) Reset() {
	*x = DeleteCommentOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentOutput) ProtoMessage() {}

func (x *DeleteCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentOutput.ProtoReflect.Descriptor instead.
func (*DeleteCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{21}
}

type ListCommentsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Render   bool   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListCommentsInput) Reset() {
	*x = ListCommentsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommentsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsInput) ProtoMessage() {}

func (x *ListCommentsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsInput.ProtoReflect.Descriptor instead.
func (*ListCommentsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{22}
}

func (x *ListCommentsInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ListCommentsInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListCommentsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListCommentsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListCommentsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Ticket_Comment `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListCommentsOutput) Reset() {
	*x = ListCommentsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommentsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsOutput) ProtoMessage() {}

func (x *ListCommentsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsOutput.ProtoReflect.Descriptor instead.
func (*ListCommentsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{23}
}

func (x *ListCommentsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCommentsOutput) GetItems() []*Ticket_Comment {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeCommentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId  string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Render    bool   `protobuf:"varint,3,opt,name=render,proto3" json:"render,omitempty"`
}

func (x *DescribeCommentInput) Reset() {
	*x = DescribeCommentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCommentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCommentInput) ProtoMessage() {}

func (x *DescribeCommentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCommentInput.ProtoReflect.Descriptor instead.
func (*DescribeCommentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{24}
}

func (x *DescribeCommentInput) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *DescribeCommentInput) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *DescribeCommentInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

type DescribeCommentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *Ticket_Comment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *DescribeCommentOutput) Reset() {
	*x = DescribeCommentOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCommentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCommentOutput) ProtoMessage() {}

func (x *DescribeCommentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCommentOutput.ProtoReflect.Descriptor instead.
func (*DescribeCommentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeCommentOutput) GetComment() *Ticket_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CreateAutoReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *AutoReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *CreateAutoReplyInput) Reset() {
	*x = CreateAutoReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAutoReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAutoReplyInput) ProtoMessage() {}

func (x *CreateAutoReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAutoReplyInput.ProtoReflect.Descriptor instead.
func (*CreateAutoReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{26}
}

func (x *CreateAutoReplyInput) GetReply() *AutoReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type CreateAutoReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId string `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
}

func (x *CreateAutoReplyOutput) Reset() {
	*x = CreateAutoReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAutoReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAutoReplyOutput) ProtoMessage() {}

func (x *CreateAutoReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAutoReplyOutput.ProtoReflect.Descriptor instead.
func (*CreateAutoReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{27}
}

func (x *CreateAutoReplyOutput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

type UpdateAutoReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId string     `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Reply   *AutoReply `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *UpdateAutoReplyInput) Reset() {
	*x = UpdateAutoReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAutoReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAutoReplyInput) ProtoMessage() {}

func (x *UpdateAutoReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAutoReplyInput.ProtoReflect.Descriptor instead.
func (*UpdateAutoReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateAutoReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *UpdateAutoReplyInput) GetReply() *AutoReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type UpdateAutoReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAutoReplyOutput) Reset() {
	*x = UpdateAutoReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAutoReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAutoReplyOutput) ProtoMessage() {}

func (x *UpdateAutoReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAutoReplyOutput.ProtoReflect.Descriptor instead.
func (*UpdateAutoReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{29}
}

type DeleteAutoReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId string `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
}

func (x *DeleteAutoReplyInput) Reset() {
	*x = DeleteAutoReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAutoReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAutoReplyInput) ProtoMessage() {}

func (x *DeleteAutoReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAutoReplyInput.ProtoReflect.Descriptor instead.
func (*DeleteAutoReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteAutoReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

type DeleteAutoReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAutoReplyOutput) Reset() {
	*x = DeleteAutoReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAutoReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAutoReplyOutput) ProtoMessage() {}

func (x *DeleteAutoReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAutoReplyOutput.ProtoReflect.Descriptor instead.
func (*DeleteAutoReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{31}
}

type ListAutoRepliesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Render bool `protobuf:"varint,1,opt,name=render,proto3" json:"render,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListAutoRepliesInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListAutoRepliesInput) Reset() {
	*x = ListAutoRepliesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAutoRepliesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAutoRepliesInput) ProtoMessage() {}

func (x *ListAutoRepliesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAutoRepliesInput.ProtoReflect.Descriptor instead.
func (*ListAutoRepliesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{32}
}

func (x *ListAutoRepliesInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

func (x *ListAutoRepliesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListAutoRepliesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAutoRepliesInput) GetFilters() *ListAutoRepliesInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListAutoRepliesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*AutoReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAutoRepliesOutput) Reset() {
	*x = ListAutoRepliesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAutoRepliesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAutoRepliesOutput) ProtoMessage() {}

func (x *ListAutoRepliesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAutoRepliesOutput.ProtoReflect.Descriptor instead.
func (*ListAutoRepliesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{33}
}

func (x *ListAutoRepliesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAutoRepliesOutput) GetItems() []*AutoReply {
	if x != nil {
		return x.Items
	}
	return nil
}

type DescribeAutoReplyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId string `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Render  bool   `protobuf:"varint,2,opt,name=render,proto3" json:"render,omitempty"`
}

func (x *DescribeAutoReplyInput) Reset() {
	*x = DescribeAutoReplyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeAutoReplyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAutoReplyInput) ProtoMessage() {}

func (x *DescribeAutoReplyInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAutoReplyInput.ProtoReflect.Descriptor instead.
func (*DescribeAutoReplyInput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{34}
}

func (x *DescribeAutoReplyInput) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *DescribeAutoReplyInput) GetRender() bool {
	if x != nil {
		return x.Render
	}
	return false
}

type DescribeAutoReplyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *AutoReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *DescribeAutoReplyOutput) Reset() {
	*x = DescribeAutoReplyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeAutoReplyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeAutoReplyOutput) ProtoMessage() {}

func (x *DescribeAutoReplyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeAutoReplyOutput.ProtoReflect.Descriptor instead.
func (*DescribeAutoReplyOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{35}
}

func (x *DescribeAutoReplyOutput) GetReply() *AutoReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type ListTicketsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     string                           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id        []*wellknown.ExpressionID        `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	UserId    []*wellknown.ExpressionID        `protobuf:"bytes,3,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail []*wellknown.ExpressionEnum      `protobuf:"bytes,4,rep,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	Status    []*wellknown.ExpressionEnum      `protobuf:"bytes,5,rep,name=status,proto3" json:"status,omitempty"`
	Type      []*wellknown.ExpressionEnum      `protobuf:"bytes,6,rep,name=type,proto3" json:"type,omitempty"`
	CreatedAt []*wellknown.ExpressionTimestamp `protobuf:"bytes,7,rep,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt []*wellknown.ExpressionTimestamp `protobuf:"bytes,8,rep,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Locale    []*wellknown.ExpressionEnum      `protobuf:"bytes,9,rep,name=locale,proto3" json:"locale,omitempty"`
}

func (x *ListTicketsInput_Filter) Reset() {
	*x = ListTicketsInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTicketsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsInput_Filter) ProtoMessage() {}

func (x *ListTicketsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListTicketsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListTicketsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListTicketsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetUserId() []*wellknown.ExpressionID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetUserEmail() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.UserEmail
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetType() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetCreatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetUpdatedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ListTicketsInput_Filter) GetLocale() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Locale
	}
	return nil
}

type ListAutoRepliesInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  string                      `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id     []*wellknown.ExpressionID   `protobuf:"bytes,2,rep,name=id,proto3" json:"id,omitempty"`
	Locale []*wellknown.ExpressionEnum `protobuf:"bytes,3,rep,name=locale,proto3" json:"locale,omitempty"`
}

func (x *ListAutoRepliesInput_Filter) Reset() {
	*x = ListAutoRepliesInput_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eolymp_helpdesk_support_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAutoRepliesInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAutoRepliesInput_Filter) ProtoMessage() {}

func (x *ListAutoRepliesInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_helpdesk_support_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAutoRepliesInput_Filter.ProtoReflect.Descriptor instead.
func (*ListAutoRepliesInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_helpdesk_support_proto_rawDescGZIP(), []int{32, 0}
}

func (x *ListAutoRepliesInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListAutoRepliesInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListAutoRepliesInput_Filter) GetLocale() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Locale
	}
	return nil
}

var File_eolymp_helpdesk_support_proto protoreflect.FileDescriptor

var file_eolymp_helpdesk_support_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73,
	0x6b, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x68, 0x65, 0x6c, 0x70,
	0x64, 0x65, 0x73, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0x31, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x30, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4a, 0x0a, 0x13, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f,
	0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x9b, 0x05, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xfe, 0x03, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x58, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4b, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4a, 0x0a, 0x11, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x49, 0x0a,
	0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x69, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73,
	0x6b, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x50, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x74, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x61, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52,
	0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64,
	0x22, 0x63, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x31,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xad, 0x02, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a,
	0x88, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4b, 0x0a, 0x16, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xcc, 0x19, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x9e, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x45, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x19,
	0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22,
	0x11, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0xaa, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c,
	0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x51, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a,
	0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x1a, 0x1d, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0xaa, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65,
	0x73, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x51, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3,
	0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f,
	0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01, 0x0a,
	0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73,
	0x6b, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68,
	0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x50, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a,
	0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12,
	0x1d, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9a,
	0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x21,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x44, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x72, 0x65,
	0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64,
	0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0xb5, 0x01, 0x0a, 0x0d,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x59, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2,
	0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a,
	0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x25, 0x2f, 0x68,
	0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f,
	0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x12, 0xb1, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3,
	0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x22, 0x24, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0xad, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x57,
	0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82,
	0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x22, 0x23, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5a, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x19,
	0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22,
	0x26, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xc3, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x67, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00,
	0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x19, 0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c,
	0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x1a, 0x33, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64,
	0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc3, 0x01,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73,
	0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x67, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x19, 0x8a,
	0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x2a, 0x33,
	0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xb2, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x59, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3,
	0x0a, 0x18, 0x8a, 0xe3, 0x0a, 0x14, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x12, 0x26, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xc9, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c,
	0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x67, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x19,
	0x8a, 0xe3, 0x0a, 0x15, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12,
	0x33, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73,
	0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x1d, 0x8a, 0xe3, 0x0a, 0x19,
	0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x15, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x1d, 0x8a, 0xe3,
	0x0a, 0x19, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x61, 0x75, 0x74, 0x6f, 0x2d,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x1a, 0x20, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x61, 0x75, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xba, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a, 0x1d, 0x8a, 0xe3, 0x0a, 0x19, 0x68,
	0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20,
	0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xae, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65,
	0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x4c, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40,
	0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x1c, 0x8a, 0xe3, 0x0a, 0x18, 0x68, 0x65, 0x6c, 0x70,
	0x64, 0x65, 0x73, 0x6b, 0x3a, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x3a,
	0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x68, 0x65, 0x6c,
	0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x12, 0xc0, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65,
	0x73, 0x6b, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0xea, 0xe2, 0x0a, 0x0b,
	0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x32, 0x82, 0xe3, 0x0a, 0x1d, 0x8a,
	0xe3, 0x0a, 0x19, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x3a, 0x61, 0x75, 0x74, 0x6f,
	0x2d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x69, 0x64, 0x7d, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b,
	0x3b, 0x68, 0x65, 0x6c, 0x70, 0x64, 0x65, 0x73, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_eolymp_helpdesk_support_proto_rawDescOnce sync.Once
	file_eolymp_helpdesk_support_proto_rawDescData = file_eolymp_helpdesk_support_proto_rawDesc
)

func file_eolymp_helpdesk_support_proto_rawDescGZIP() []byte {
	file_eolymp_helpdesk_support_proto_rawDescOnce.Do(func() {
		file_eolymp_helpdesk_support_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_helpdesk_support_proto_rawDescData)
	})
	return file_eolymp_helpdesk_support_proto_rawDescData
}

var file_eolymp_helpdesk_support_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_eolymp_helpdesk_support_proto_goTypes = []interface{}{
	(*CreateTicketInput)(nil),             // 0: eolymp.helpdesk.CreateTicketInput
	(*CreateTicketOutput)(nil),            // 1: eolymp.helpdesk.CreateTicketOutput
	(*UpdateTicketInput)(nil),             // 2: eolymp.helpdesk.UpdateTicketInput
	(*UpdateTicketOutput)(nil),            // 3: eolymp.helpdesk.UpdateTicketOutput
	(*DeleteTicketInput)(nil),             // 4: eolymp.helpdesk.DeleteTicketInput
	(*DeleteTicketOutput)(nil),            // 5: eolymp.helpdesk.DeleteTicketOutput
	(*DescribeTicketInput)(nil),           // 6: eolymp.helpdesk.DescribeTicketInput
	(*DescribeTicketOutput)(nil),          // 7: eolymp.helpdesk.DescribeTicketOutput
	(*ListTicketsInput)(nil),              // 8: eolymp.helpdesk.ListTicketsInput
	(*ListTicketsOutput)(nil),             // 9: eolymp.helpdesk.ListTicketsOutput
	(*ApproveTicketInput)(nil),            // 10: eolymp.helpdesk.ApproveTicketInput
	(*ApproveTicketOutput)(nil),           // 11: eolymp.helpdesk.ApproveTicketOutput
	(*RejectTicketInput)(nil),             // 12: eolymp.helpdesk.RejectTicketInput
	(*RejectTicketOutput)(nil),            // 13: eolymp.helpdesk.RejectTicketOutput
	(*CloseTicketInput)(nil),              // 14: eolymp.helpdesk.CloseTicketInput
	(*CloseTicketOutput)(nil),             // 15: eolymp.helpdesk.CloseTicketOutput
	(*AddCommentInput)(nil),               // 16: eolymp.helpdesk.AddCommentInput
	(*AddCommentOutput)(nil),              // 17: eolymp.helpdesk.AddCommentOutput
	(*UpdateCommentInput)(nil),            // 18: eolymp.helpdesk.UpdateCommentInput
	(*UpdateCommentOutput)(nil),           // 19: eolymp.helpdesk.UpdateCommentOutput
	(*DeleteCommentInput)(nil),            // 20: eolymp.helpdesk.DeleteCommentInput
	(*DeleteCommentOutput)(nil),           // 21: eolymp.helpdesk.DeleteCommentOutput
	(*ListCommentsInput)(nil),             // 22: eolymp.helpdesk.ListCommentsInput
	(*ListCommentsOutput)(nil),            // 23: eolymp.helpdesk.ListCommentsOutput
	(*DescribeCommentInput)(nil),          // 24: eolymp.helpdesk.DescribeCommentInput
	(*DescribeCommentOutput)(nil),         // 25: eolymp.helpdesk.DescribeCommentOutput
	(*CreateAutoReplyInput)(nil),          // 26: eolymp.helpdesk.CreateAutoReplyInput
	(*CreateAutoReplyOutput)(nil),         // 27: eolymp.helpdesk.CreateAutoReplyOutput
	(*UpdateAutoReplyInput)(nil),          // 28: eolymp.helpdesk.UpdateAutoReplyInput
	(*UpdateAutoReplyOutput)(nil),         // 29: eolymp.helpdesk.UpdateAutoReplyOutput
	(*DeleteAutoReplyInput)(nil),          // 30: eolymp.helpdesk.DeleteAutoReplyInput
	(*DeleteAutoReplyOutput)(nil),         // 31: eolymp.helpdesk.DeleteAutoReplyOutput
	(*ListAutoRepliesInput)(nil),          // 32: eolymp.helpdesk.ListAutoRepliesInput
	(*ListAutoRepliesOutput)(nil),         // 33: eolymp.helpdesk.ListAutoRepliesOutput
	(*DescribeAutoReplyInput)(nil),        // 34: eolymp.helpdesk.DescribeAutoReplyInput
	(*DescribeAutoReplyOutput)(nil),       // 35: eolymp.helpdesk.DescribeAutoReplyOutput
	(*ListTicketsInput_Filter)(nil),       // 36: eolymp.helpdesk.ListTicketsInput.Filter
	(*ListAutoRepliesInput_Filter)(nil),   // 37: eolymp.helpdesk.ListAutoRepliesInput.Filter
	(*Ticket)(nil),                        // 38: eolymp.helpdesk.Ticket
	(*Ticket_Comment)(nil),                // 39: eolymp.helpdesk.Ticket.Comment
	(*AutoReply)(nil),                     // 40: eolymp.helpdesk.AutoReply
	(*wellknown.ExpressionID)(nil),        // 41: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionEnum)(nil),      // 42: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionTimestamp)(nil), // 43: eolymp.wellknown.ExpressionTimestamp
}
var file_eolymp_helpdesk_support_proto_depIdxs = []int32{
	38, // 0: eolymp.helpdesk.CreateTicketInput.ticket:type_name -> eolymp.helpdesk.Ticket
	38, // 1: eolymp.helpdesk.UpdateTicketInput.ticket:type_name -> eolymp.helpdesk.Ticket
	38, // 2: eolymp.helpdesk.DescribeTicketOutput.ticket:type_name -> eolymp.helpdesk.Ticket
	36, // 3: eolymp.helpdesk.ListTicketsInput.filters:type_name -> eolymp.helpdesk.ListTicketsInput.Filter
	38, // 4: eolymp.helpdesk.ListTicketsOutput.items:type_name -> eolymp.helpdesk.Ticket
	39, // 5: eolymp.helpdesk.AddCommentInput.comment:type_name -> eolymp.helpdesk.Ticket.Comment
	39, // 6: eolymp.helpdesk.UpdateCommentInput.comment:type_name -> eolymp.helpdesk.Ticket.Comment
	39, // 7: eolymp.helpdesk.ListCommentsOutput.items:type_name -> eolymp.helpdesk.Ticket.Comment
	39, // 8: eolymp.helpdesk.DescribeCommentOutput.comment:type_name -> eolymp.helpdesk.Ticket.Comment
	40, // 9: eolymp.helpdesk.CreateAutoReplyInput.reply:type_name -> eolymp.helpdesk.AutoReply
	40, // 10: eolymp.helpdesk.UpdateAutoReplyInput.reply:type_name -> eolymp.helpdesk.AutoReply
	37, // 11: eolymp.helpdesk.ListAutoRepliesInput.filters:type_name -> eolymp.helpdesk.ListAutoRepliesInput.Filter
	40, // 12: eolymp.helpdesk.ListAutoRepliesOutput.items:type_name -> eolymp.helpdesk.AutoReply
	40, // 13: eolymp.helpdesk.DescribeAutoReplyOutput.reply:type_name -> eolymp.helpdesk.AutoReply
	41, // 14: eolymp.helpdesk.ListTicketsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	41, // 15: eolymp.helpdesk.ListTicketsInput.Filter.user_id:type_name -> eolymp.wellknown.ExpressionID
	42, // 16: eolymp.helpdesk.ListTicketsInput.Filter.user_email:type_name -> eolymp.wellknown.ExpressionEnum
	42, // 17: eolymp.helpdesk.ListTicketsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	42, // 18: eolymp.helpdesk.ListTicketsInput.Filter.type:type_name -> eolymp.wellknown.ExpressionEnum
	43, // 19: eolymp.helpdesk.ListTicketsInput.Filter.created_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	43, // 20: eolymp.helpdesk.ListTicketsInput.Filter.updated_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	42, // 21: eolymp.helpdesk.ListTicketsInput.Filter.locale:type_name -> eolymp.wellknown.ExpressionEnum
	41, // 22: eolymp.helpdesk.ListAutoRepliesInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	42, // 23: eolymp.helpdesk.ListAutoRepliesInput.Filter.locale:type_name -> eolymp.wellknown.ExpressionEnum
	0,  // 24: eolymp.helpdesk.Support.CreateTicket:input_type -> eolymp.helpdesk.CreateTicketInput
	2,  // 25: eolymp.helpdesk.Support.UpdateTicket:input_type -> eolymp.helpdesk.UpdateTicketInput
	4,  // 26: eolymp.helpdesk.Support.DeleteTicket:input_type -> eolymp.helpdesk.DeleteTicketInput
	6,  // 27: eolymp.helpdesk.Support.DescribeTicket:input_type -> eolymp.helpdesk.DescribeTicketInput
	8,  // 28: eolymp.helpdesk.Support.ListTickets:input_type -> eolymp.helpdesk.ListTicketsInput
	10, // 29: eolymp.helpdesk.Support.ApproveTicket:input_type -> eolymp.helpdesk.ApproveTicketInput
	12, // 30: eolymp.helpdesk.Support.RejectTicket:input_type -> eolymp.helpdesk.RejectTicketInput
	14, // 31: eolymp.helpdesk.Support.CloseTicket:input_type -> eolymp.helpdesk.CloseTicketInput
	16, // 32: eolymp.helpdesk.Support.AddComment:input_type -> eolymp.helpdesk.AddCommentInput
	18, // 33: eolymp.helpdesk.Support.UpdateComment:input_type -> eolymp.helpdesk.UpdateCommentInput
	20, // 34: eolymp.helpdesk.Support.DeleteComment:input_type -> eolymp.helpdesk.DeleteCommentInput
	22, // 35: eolymp.helpdesk.Support.ListComments:input_type -> eolymp.helpdesk.ListCommentsInput
	24, // 36: eolymp.helpdesk.Support.DescribeComment:input_type -> eolymp.helpdesk.DescribeCommentInput
	26, // 37: eolymp.helpdesk.Support.CreateAutoReply:input_type -> eolymp.helpdesk.CreateAutoReplyInput
	28, // 38: eolymp.helpdesk.Support.UpdateAutoReply:input_type -> eolymp.helpdesk.UpdateAutoReplyInput
	30, // 39: eolymp.helpdesk.Support.DeleteAutoReply:input_type -> eolymp.helpdesk.DeleteAutoReplyInput
	32, // 40: eolymp.helpdesk.Support.ListAutoReplies:input_type -> eolymp.helpdesk.ListAutoRepliesInput
	34, // 41: eolymp.helpdesk.Support.DescribeAutoReply:input_type -> eolymp.helpdesk.DescribeAutoReplyInput
	1,  // 42: eolymp.helpdesk.Support.CreateTicket:output_type -> eolymp.helpdesk.CreateTicketOutput
	3,  // 43: eolymp.helpdesk.Support.UpdateTicket:output_type -> eolymp.helpdesk.UpdateTicketOutput
	5,  // 44: eolymp.helpdesk.Support.DeleteTicket:output_type -> eolymp.helpdesk.DeleteTicketOutput
	7,  // 45: eolymp.helpdesk.Support.DescribeTicket:output_type -> eolymp.helpdesk.DescribeTicketOutput
	9,  // 46: eolymp.helpdesk.Support.ListTickets:output_type -> eolymp.helpdesk.ListTicketsOutput
	11, // 47: eolymp.helpdesk.Support.ApproveTicket:output_type -> eolymp.helpdesk.ApproveTicketOutput
	13, // 48: eolymp.helpdesk.Support.RejectTicket:output_type -> eolymp.helpdesk.RejectTicketOutput
	15, // 49: eolymp.helpdesk.Support.CloseTicket:output_type -> eolymp.helpdesk.CloseTicketOutput
	17, // 50: eolymp.helpdesk.Support.AddComment:output_type -> eolymp.helpdesk.AddCommentOutput
	19, // 51: eolymp.helpdesk.Support.UpdateComment:output_type -> eolymp.helpdesk.UpdateCommentOutput
	21, // 52: eolymp.helpdesk.Support.DeleteComment:output_type -> eolymp.helpdesk.DeleteCommentOutput
	23, // 53: eolymp.helpdesk.Support.ListComments:output_type -> eolymp.helpdesk.ListCommentsOutput
	25, // 54: eolymp.helpdesk.Support.DescribeComment:output_type -> eolymp.helpdesk.DescribeCommentOutput
	27, // 55: eolymp.helpdesk.Support.CreateAutoReply:output_type -> eolymp.helpdesk.CreateAutoReplyOutput
	29, // 56: eolymp.helpdesk.Support.UpdateAutoReply:output_type -> eolymp.helpdesk.UpdateAutoReplyOutput
	31, // 57: eolymp.helpdesk.Support.DeleteAutoReply:output_type -> eolymp.helpdesk.DeleteAutoReplyOutput
	33, // 58: eolymp.helpdesk.Support.ListAutoReplies:output_type -> eolymp.helpdesk.ListAutoRepliesOutput
	35, // 59: eolymp.helpdesk.Support.DescribeAutoReply:output_type -> eolymp.helpdesk.DescribeAutoReplyOutput
	42, // [42:60] is the sub-list for method output_type
	24, // [24:42] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_eolymp_helpdesk_support_proto_init() }
func file_eolymp_helpdesk_support_proto_init() {
	if File_eolymp_helpdesk_support_proto != nil {
		return
	}
	file_eolymp_helpdesk_auto_reply_proto_init()
	file_eolymp_helpdesk_ticket_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eolymp_helpdesk_support_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTicketsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTicketsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTicketInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTicketOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommentsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommentsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCommentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCommentOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAutoReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAutoReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAutoReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAutoReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAutoReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAutoReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAutoRepliesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAutoRepliesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeAutoReplyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeAutoReplyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTicketsInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eolymp_helpdesk_support_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAutoRepliesInput_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_helpdesk_support_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_helpdesk_support_proto_goTypes,
		DependencyIndexes: file_eolymp_helpdesk_support_proto_depIdxs,
		MessageInfos:      file_eolymp_helpdesk_support_proto_msgTypes,
	}.Build()
	File_eolymp_helpdesk_support_proto = out.File
	file_eolymp_helpdesk_support_proto_rawDesc = nil
	file_eolymp_helpdesk_support_proto_goTypes = nil
	file_eolymp_helpdesk_support_proto_depIdxs = nil
}
