// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: eolymp/course/module_service.proto

package course

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateModuleInput_Patch int32

const (
	UpdateModuleInput_ALL         UpdateModuleInput_Patch = 0
	UpdateModuleInput_DRAFT       UpdateModuleInput_Patch = 1
	UpdateModuleInput_EXTRA       UpdateModuleInput_Patch = 6
	UpdateModuleInput_NAME        UpdateModuleInput_Patch = 2
	UpdateModuleInput_IMAGE_URL   UpdateModuleInput_Patch = 3
	UpdateModuleInput_INDEX       UpdateModuleInput_Patch = 4
	UpdateModuleInput_DESCRIPTION UpdateModuleInput_Patch = 5
	UpdateModuleInput_WEIGHT      UpdateModuleInput_Patch = 7
)

// Enum value maps for UpdateModuleInput_Patch.
var (
	UpdateModuleInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "DRAFT",
		6: "EXTRA",
		2: "NAME",
		3: "IMAGE_URL",
		4: "INDEX",
		5: "DESCRIPTION",
		7: "WEIGHT",
	}
	UpdateModuleInput_Patch_value = map[string]int32{
		"ALL":         0,
		"DRAFT":       1,
		"EXTRA":       6,
		"NAME":        2,
		"IMAGE_URL":   3,
		"INDEX":       4,
		"DESCRIPTION": 5,
		"WEIGHT":      7,
	}
)

func (x UpdateModuleInput_Patch) Enum() *UpdateModuleInput_Patch {
	p := new(UpdateModuleInput_Patch)
	*p = x
	return p
}

func (x UpdateModuleInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateModuleInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_course_module_service_proto_enumTypes[0].Descriptor()
}

func (UpdateModuleInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_course_module_service_proto_enumTypes[0]
}

func (x UpdateModuleInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateModuleInput_Patch.Descriptor instead.
func (UpdateModuleInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{2, 0}
}

type ListModulesInput_Sort int32

const (
	ListModulesInput_INDEX ListModulesInput_Sort = 0
)

// Enum value maps for ListModulesInput_Sort.
var (
	ListModulesInput_Sort_name = map[int32]string{
		0: "INDEX",
	}
	ListModulesInput_Sort_value = map[string]int32{
		"INDEX": 0,
	}
)

func (x ListModulesInput_Sort) Enum() *ListModulesInput_Sort {
	p := new(ListModulesInput_Sort)
	*p = x
	return p
}

func (x ListModulesInput_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListModulesInput_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_course_module_service_proto_enumTypes[1].Descriptor()
}

func (ListModulesInput_Sort) Type() protoreflect.EnumType {
	return &file_eolymp_course_module_service_proto_enumTypes[1]
}

func (x ListModulesInput_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListModulesInput_Sort.Descriptor instead.
func (ListModulesInput_Sort) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{8, 0}
}

type CreateModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *CreateModuleInput) Reset() {
	*x = CreateModuleInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModuleInput) ProtoMessage() {}

func (x *CreateModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModuleInput.ProtoReflect.Descriptor instead.
func (*CreateModuleInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateModuleInput) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type CreateModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId string `protobuf:"bytes,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *CreateModuleOutput) Reset() {
	*x = CreateModuleOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModuleOutput) ProtoMessage() {}

func (x *CreateModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModuleOutput.ProtoReflect.Descriptor instead.
func (*CreateModuleOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateModuleOutput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

type UpdateModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// specify list of fields to update, if empty all fields are updated
	Patch    []UpdateModuleInput_Patch `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.course.UpdateModuleInput_Patch" json:"patch,omitempty"`
	ModuleId string                    `protobuf:"bytes,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	Module   *Module                   `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *UpdateModuleInput) Reset() {
	*x = UpdateModuleInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModuleInput) ProtoMessage() {}

func (x *UpdateModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModuleInput.ProtoReflect.Descriptor instead.
func (*UpdateModuleInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateModuleInput) GetPatch() []UpdateModuleInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateModuleInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *UpdateModuleInput) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type UpdateModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateModuleOutput) Reset() {
	*x = UpdateModuleOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModuleOutput) ProtoMessage() {}

func (x *UpdateModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModuleOutput.ProtoReflect.Descriptor instead.
func (*UpdateModuleOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{3}
}

type DeleteModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId string `protobuf:"bytes,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *DeleteModuleInput) Reset() {
	*x = DeleteModuleInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModuleInput) ProtoMessage() {}

func (x *DeleteModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModuleInput.ProtoReflect.Descriptor instead.
func (*DeleteModuleInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteModuleInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

type DeleteModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteModuleOutput) Reset() {
	*x = DeleteModuleOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModuleOutput) ProtoMessage() {}

func (x *DeleteModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModuleOutput.ProtoReflect.Descriptor instead.
func (*DeleteModuleOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{5}
}

type DescribeModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId string `protobuf:"bytes,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// Types that are assignable to Assignee:
	//
	//	*DescribeModuleInput_MemberId
	//	*DescribeModuleInput_GroupId
	Assignee isDescribeModuleInput_Assignee `protobuf_oneof:"assignee"`
	Extra    []Module_Extra                 `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.course.Module_Extra" json:"extra,omitempty"`
}

func (x *DescribeModuleInput) Reset() {
	*x = DescribeModuleInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeModuleInput) ProtoMessage() {}

func (x *DescribeModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeModuleInput.ProtoReflect.Descriptor instead.
func (*DescribeModuleInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeModuleInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (m *DescribeModuleInput) GetAssignee() isDescribeModuleInput_Assignee {
	if m != nil {
		return m.Assignee
	}
	return nil
}

func (x *DescribeModuleInput) GetMemberId() string {
	if x, ok := x.GetAssignee().(*DescribeModuleInput_MemberId); ok {
		return x.MemberId
	}
	return ""
}

func (x *DescribeModuleInput) GetGroupId() string {
	if x, ok := x.GetAssignee().(*DescribeModuleInput_GroupId); ok {
		return x.GroupId
	}
	return ""
}

func (x *DescribeModuleInput) GetExtra() []Module_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type isDescribeModuleInput_Assignee interface {
	isDescribeModuleInput_Assignee()
}

type DescribeModuleInput_MemberId struct {
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3,oneof"` // optionally, student who's progress/assignment and grade will be returned, if empty authorized user is used
}

type DescribeModuleInput_GroupId struct {
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3,oneof"`
}

func (*DescribeModuleInput_MemberId) isDescribeModuleInput_Assignee() {}

func (*DescribeModuleInput_GroupId) isDescribeModuleInput_Assignee() {}

type DescribeModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *DescribeModuleOutput) Reset() {
	*x = DescribeModuleOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeModuleOutput) ProtoMessage() {}

func (x *DescribeModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeModuleOutput.ProtoReflect.Descriptor instead.
func (*DescribeModuleOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeModuleOutput) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type ListModulesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Assignee:
	//
	//	*ListModulesInput_MemberId
	//	*ListModulesInput_GroupId
	Assignee isListModulesInput_Assignee `protobuf_oneof:"assignee"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListModulesInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort    ListModulesInput_Sort    `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.course.ListModulesInput_Sort" json:"sort,omitempty"`
	Order   wellknown.Direction      `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	Extra   []Module_Extra           `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.course.Module_Extra" json:"extra,omitempty"`
}

func (x *ListModulesInput) Reset() {
	*x = ListModulesInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModulesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModulesInput) ProtoMessage() {}

func (x *ListModulesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModulesInput.ProtoReflect.Descriptor instead.
func (*ListModulesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{8}
}

func (m *ListModulesInput) GetAssignee() isListModulesInput_Assignee {
	if m != nil {
		return m.Assignee
	}
	return nil
}

func (x *ListModulesInput) GetMemberId() string {
	if x, ok := x.GetAssignee().(*ListModulesInput_MemberId); ok {
		return x.MemberId
	}
	return ""
}

func (x *ListModulesInput) GetGroupId() string {
	if x, ok := x.GetAssignee().(*ListModulesInput_GroupId); ok {
		return x.GroupId
	}
	return ""
}

func (x *ListModulesInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListModulesInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListModulesInput) GetFilters() *ListModulesInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListModulesInput) GetSort() ListModulesInput_Sort {
	if x != nil {
		return x.Sort
	}
	return ListModulesInput_INDEX
}

func (x *ListModulesInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListModulesInput) GetExtra() []Module_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type isListModulesInput_Assignee interface {
	isListModulesInput_Assignee()
}

type ListModulesInput_MemberId struct {
	MemberId string `protobuf:"bytes,5,opt,name=member_id,json=memberId,proto3,oneof"` // optionally, student who's progress/assignment and grade will be returned, if empty authorized user is used
}

type ListModulesInput_GroupId struct {
	GroupId string `protobuf:"bytes,6,opt,name=group_id,json=groupId,proto3,oneof"`
}

func (*ListModulesInput_MemberId) isListModulesInput_Assignee() {}

func (*ListModulesInput_GroupId) isListModulesInput_Assignee() {}

type ListModulesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Module `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListModulesOutput) Reset() {
	*x = ListModulesOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModulesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModulesOutput) ProtoMessage() {}

func (x *ListModulesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModulesOutput.ProtoReflect.Descriptor instead.
func (*ListModulesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListModulesOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListModulesOutput) GetItems() []*Module {
	if x != nil {
		return x.Items
	}
	return nil
}

type StartModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId string `protobuf:"bytes,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *StartModuleInput) Reset() {
	*x = StartModuleInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartModuleInput) ProtoMessage() {}

func (x *StartModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartModuleInput.ProtoReflect.Descriptor instead.
func (*StartModuleInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{10}
}

func (x *StartModuleInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

type StartModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartModuleOutput) Reset() {
	*x = StartModuleOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartModuleOutput) ProtoMessage() {}

func (x *StartModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartModuleOutput.ProtoReflect.Descriptor instead.
func (*StartModuleOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{11}
}

type GradeModuleInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId string `protobuf:"bytes,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// Types that are assignable to Value:
	//
	//	*GradeModuleInput_Grade
	//	*GradeModuleInput_Excused
	Value isGradeModuleInput_Value `protobuf_oneof:"value"`
}

func (x *GradeModuleInput) Reset() {
	*x = GradeModuleInput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GradeModuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeModuleInput) ProtoMessage() {}

func (x *GradeModuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeModuleInput.ProtoReflect.Descriptor instead.
func (*GradeModuleInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{12}
}

func (x *GradeModuleInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *GradeModuleInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (m *GradeModuleInput) GetValue() isGradeModuleInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *GradeModuleInput) GetGrade() uint32 {
	if x, ok := x.GetValue().(*GradeModuleInput_Grade); ok {
		return x.Grade
	}
	return 0
}

func (x *GradeModuleInput) GetExcused() bool {
	if x, ok := x.GetValue().(*GradeModuleInput_Excused); ok {
		return x.Excused
	}
	return false
}

type isGradeModuleInput_Value interface {
	isGradeModuleInput_Value()
}

type GradeModuleInput_Grade struct {
	Grade uint32 `protobuf:"varint,3,opt,name=grade,proto3,oneof"`
}

type GradeModuleInput_Excused struct {
	Excused bool `protobuf:"varint,4,opt,name=excused,proto3,oneof"`
}

func (*GradeModuleInput_Grade) isGradeModuleInput_Value() {}

func (*GradeModuleInput_Excused) isGradeModuleInput_Value() {}

type GradeModuleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GradeModuleOutput) Reset() {
	*x = GradeModuleOutput{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GradeModuleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeModuleOutput) ProtoMessage() {}

func (x *GradeModuleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeModuleOutput.ProtoReflect.Descriptor instead.
func (*GradeModuleOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{13}
}

type ListModulesInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  string                      `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Draft  []*wellknown.ExpressionBool `protobuf:"bytes,2,rep,name=draft,proto3" json:"draft,omitempty"`
	Extra  []*wellknown.ExpressionBool `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty"`
	Graded []*wellknown.ExpressionBool `protobuf:"bytes,4,rep,name=graded,proto3" json:"graded,omitempty"`
	Weight []*wellknown.ExpressionInt  `protobuf:"bytes,5,rep,name=weight,proto3" json:"weight,omitempty"`
}

func (x *ListModulesInput_Filter) Reset() {
	*x = ListModulesInput_Filter{}
	mi := &file_eolymp_course_module_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModulesInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModulesInput_Filter) ProtoMessage() {}

func (x *ListModulesInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_module_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModulesInput_Filter.ProtoReflect.Descriptor instead.
func (*ListModulesInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_course_module_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListModulesInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListModulesInput_Filter) GetDraft() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Draft
	}
	return nil
}

func (x *ListModulesInput_Filter) GetExtra() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *ListModulesInput_Filter) GetGraded() []*wellknown.ExpressionBool {
	if x != nil {
		return x.Graded
	}
	return nil
}

func (x *ListModulesInput_Filter) GetWeight() []*wellknown.ExpressionInt {
	if x != nil {
		return x.Weight
	}
	return nil
}

var File_eolymp_course_module_service_proto protoreflect.FileDescriptor

var file_eolymp_course_module_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x86,
	0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x67,
	0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x58, 0x54, 0x52, 0x41, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45,
	0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x57,
	0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x07, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x30, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x22, 0x45, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2d,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x80, 0x05,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x81, 0x02,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77,
	0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x38,
	0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6c,
	0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x11, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x10, 0x00, 0x42, 0x0a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x22, 0x56, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x89,
	0x01, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x63, 0x75, 0x73, 0x65,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32,
	0xce, 0x08, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x8f, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3a, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x1a, 0x08, 0x2f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x46, 0xea, 0xe2, 0x0a, 0x0b, 0xf5,
	0xe2, 0x0a, 0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3,
	0x0a, 0x13, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x14, 0x2f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x46, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0xa0, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x45, 0xea, 0xe2, 0x0a,
	0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16,
	0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x39, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x9d, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x4b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40,
	0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x9d, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x4b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41,
	0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3b, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_course_module_service_proto_rawDescOnce sync.Once
	file_eolymp_course_module_service_proto_rawDescData = file_eolymp_course_module_service_proto_rawDesc
)

func file_eolymp_course_module_service_proto_rawDescGZIP() []byte {
	file_eolymp_course_module_service_proto_rawDescOnce.Do(func() {
		file_eolymp_course_module_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_course_module_service_proto_rawDescData)
	})
	return file_eolymp_course_module_service_proto_rawDescData
}

var file_eolymp_course_module_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_course_module_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_eolymp_course_module_service_proto_goTypes = []any{
	(UpdateModuleInput_Patch)(0),     // 0: eolymp.course.UpdateModuleInput.Patch
	(ListModulesInput_Sort)(0),       // 1: eolymp.course.ListModulesInput.Sort
	(*CreateModuleInput)(nil),        // 2: eolymp.course.CreateModuleInput
	(*CreateModuleOutput)(nil),       // 3: eolymp.course.CreateModuleOutput
	(*UpdateModuleInput)(nil),        // 4: eolymp.course.UpdateModuleInput
	(*UpdateModuleOutput)(nil),       // 5: eolymp.course.UpdateModuleOutput
	(*DeleteModuleInput)(nil),        // 6: eolymp.course.DeleteModuleInput
	(*DeleteModuleOutput)(nil),       // 7: eolymp.course.DeleteModuleOutput
	(*DescribeModuleInput)(nil),      // 8: eolymp.course.DescribeModuleInput
	(*DescribeModuleOutput)(nil),     // 9: eolymp.course.DescribeModuleOutput
	(*ListModulesInput)(nil),         // 10: eolymp.course.ListModulesInput
	(*ListModulesOutput)(nil),        // 11: eolymp.course.ListModulesOutput
	(*StartModuleInput)(nil),         // 12: eolymp.course.StartModuleInput
	(*StartModuleOutput)(nil),        // 13: eolymp.course.StartModuleOutput
	(*GradeModuleInput)(nil),         // 14: eolymp.course.GradeModuleInput
	(*GradeModuleOutput)(nil),        // 15: eolymp.course.GradeModuleOutput
	(*ListModulesInput_Filter)(nil),  // 16: eolymp.course.ListModulesInput.Filter
	(*Module)(nil),                   // 17: eolymp.course.Module
	(Module_Extra)(0),                // 18: eolymp.course.Module.Extra
	(wellknown.Direction)(0),         // 19: eolymp.wellknown.Direction
	(*wellknown.ExpressionBool)(nil), // 20: eolymp.wellknown.ExpressionBool
	(*wellknown.ExpressionInt)(nil),  // 21: eolymp.wellknown.ExpressionInt
}
var file_eolymp_course_module_service_proto_depIdxs = []int32{
	17, // 0: eolymp.course.CreateModuleInput.module:type_name -> eolymp.course.Module
	0,  // 1: eolymp.course.UpdateModuleInput.patch:type_name -> eolymp.course.UpdateModuleInput.Patch
	17, // 2: eolymp.course.UpdateModuleInput.module:type_name -> eolymp.course.Module
	18, // 3: eolymp.course.DescribeModuleInput.extra:type_name -> eolymp.course.Module.Extra
	17, // 4: eolymp.course.DescribeModuleOutput.module:type_name -> eolymp.course.Module
	16, // 5: eolymp.course.ListModulesInput.filters:type_name -> eolymp.course.ListModulesInput.Filter
	1,  // 6: eolymp.course.ListModulesInput.sort:type_name -> eolymp.course.ListModulesInput.Sort
	19, // 7: eolymp.course.ListModulesInput.order:type_name -> eolymp.wellknown.Direction
	18, // 8: eolymp.course.ListModulesInput.extra:type_name -> eolymp.course.Module.Extra
	17, // 9: eolymp.course.ListModulesOutput.items:type_name -> eolymp.course.Module
	20, // 10: eolymp.course.ListModulesInput.Filter.draft:type_name -> eolymp.wellknown.ExpressionBool
	20, // 11: eolymp.course.ListModulesInput.Filter.extra:type_name -> eolymp.wellknown.ExpressionBool
	20, // 12: eolymp.course.ListModulesInput.Filter.graded:type_name -> eolymp.wellknown.ExpressionBool
	21, // 13: eolymp.course.ListModulesInput.Filter.weight:type_name -> eolymp.wellknown.ExpressionInt
	2,  // 14: eolymp.course.ModuleService.CreateModule:input_type -> eolymp.course.CreateModuleInput
	4,  // 15: eolymp.course.ModuleService.UpdateModule:input_type -> eolymp.course.UpdateModuleInput
	6,  // 16: eolymp.course.ModuleService.DeleteModule:input_type -> eolymp.course.DeleteModuleInput
	8,  // 17: eolymp.course.ModuleService.DescribeModule:input_type -> eolymp.course.DescribeModuleInput
	10, // 18: eolymp.course.ModuleService.ListModules:input_type -> eolymp.course.ListModulesInput
	12, // 19: eolymp.course.ModuleService.StartModule:input_type -> eolymp.course.StartModuleInput
	14, // 20: eolymp.course.ModuleService.GradeModule:input_type -> eolymp.course.GradeModuleInput
	3,  // 21: eolymp.course.ModuleService.CreateModule:output_type -> eolymp.course.CreateModuleOutput
	5,  // 22: eolymp.course.ModuleService.UpdateModule:output_type -> eolymp.course.UpdateModuleOutput
	7,  // 23: eolymp.course.ModuleService.DeleteModule:output_type -> eolymp.course.DeleteModuleOutput
	9,  // 24: eolymp.course.ModuleService.DescribeModule:output_type -> eolymp.course.DescribeModuleOutput
	11, // 25: eolymp.course.ModuleService.ListModules:output_type -> eolymp.course.ListModulesOutput
	13, // 26: eolymp.course.ModuleService.StartModule:output_type -> eolymp.course.StartModuleOutput
	15, // 27: eolymp.course.ModuleService.GradeModule:output_type -> eolymp.course.GradeModuleOutput
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_eolymp_course_module_service_proto_init() }
func file_eolymp_course_module_service_proto_init() {
	if File_eolymp_course_module_service_proto != nil {
		return
	}
	file_eolymp_course_module_proto_init()
	file_eolymp_course_module_service_proto_msgTypes[6].OneofWrappers = []any{
		(*DescribeModuleInput_MemberId)(nil),
		(*DescribeModuleInput_GroupId)(nil),
	}
	file_eolymp_course_module_service_proto_msgTypes[8].OneofWrappers = []any{
		(*ListModulesInput_MemberId)(nil),
		(*ListModulesInput_GroupId)(nil),
	}
	file_eolymp_course_module_service_proto_msgTypes[12].OneofWrappers = []any{
		(*GradeModuleInput_Grade)(nil),
		(*GradeModuleInput_Excused)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_course_module_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_course_module_service_proto_goTypes,
		DependencyIndexes: file_eolymp_course_module_service_proto_depIdxs,
		EnumInfos:         file_eolymp_course_module_service_proto_enumTypes,
		MessageInfos:      file_eolymp_course_module_service_proto_msgTypes,
	}.Build()
	File_eolymp_course_module_service_proto = out.File
	file_eolymp_course_module_service_proto_rawDesc = nil
	file_eolymp_course_module_service_proto_goTypes = nil
	file_eolymp_course_module_service_proto_depIdxs = nil
}
