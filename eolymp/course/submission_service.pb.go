// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.4
// source: eolymp/course/submission_service.proto

package course

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	atlas "github.com/eolymp/go-sdk/eolymp/atlas"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaterialId    string                 `protobuf:"bytes,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	Runtime       string                 `protobuf:"bytes,2,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionInput) Reset() {
	*x = CreateSubmissionInput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionInput) ProtoMessage() {}

func (x *CreateSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionInput.ProtoReflect.Descriptor instead.
func (*CreateSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubmissionInput) GetMaterialId() string {
	if x != nil {
		return x.MaterialId
	}
	return ""
}

func (x *CreateSubmissionInput) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *CreateSubmissionInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type CreateSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionOutput) Reset() {
	*x = CreateSubmissionOutput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionOutput) ProtoMessage() {}

func (x *CreateSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionOutput.ProtoReflect.Descriptor instead.
func (*CreateSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubmissionOutput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type ListSubmissionsInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pagination
	After string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Size  int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters       *ListSubmissionsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsInput) Reset() {
	*x = ListSubmissionsInput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsInput) ProtoMessage() {}

func (x *ListSubmissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsInput.ProtoReflect.Descriptor instead.
func (*ListSubmissionsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListSubmissionsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListSubmissionsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSubmissionsInput) GetFilters() *ListSubmissionsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListSubmissionsOutput struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*atlas.Submission    `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string                 `protobuf:"bytes,4,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListSubmissionsOutput) Reset() {
	*x = ListSubmissionsOutput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsOutput) ProtoMessage() {}

func (x *ListSubmissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsOutput.ProtoReflect.Descriptor instead.
func (*ListSubmissionsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListSubmissionsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubmissionsOutput) GetItems() []*atlas.Submission {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListSubmissionsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type DescribeSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionInput) Reset() {
	*x = DescribeSubmissionInput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionInput) ProtoMessage() {}

func (x *DescribeSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionInput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type DescribeSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *atlas.Submission      `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSubmissionOutput) Reset() {
	*x = DescribeSubmissionOutput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSubmissionOutput) ProtoMessage() {}

func (x *DescribeSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSubmissionOutput.ProtoReflect.Descriptor instead.
func (*DescribeSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeSubmissionOutput) GetSubmission() *atlas.Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type WatchSubmissionInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchSubmissionInput) Reset() {
	*x = WatchSubmissionInput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchSubmissionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSubmissionInput) ProtoMessage() {}

func (x *WatchSubmissionInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSubmissionInput.ProtoReflect.Descriptor instead.
func (*WatchSubmissionInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{6}
}

func (x *WatchSubmissionInput) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type WatchSubmissionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *atlas.Submission      `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchSubmissionOutput) Reset() {
	*x = WatchSubmissionOutput{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchSubmissionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchSubmissionOutput) ProtoMessage() {}

func (x *WatchSubmissionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchSubmissionOutput.ProtoReflect.Descriptor instead.
func (*WatchSubmissionOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{7}
}

func (x *WatchSubmissionOutput) GetSubmission() *atlas.Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type ListSubmissionsInput_Filter struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Id            []*wellknown.ExpressionID        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	MemberId      []*wellknown.ExpressionID        `protobuf:"bytes,9,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	MaterialId    []*wellknown.ExpressionID        `protobuf:"bytes,11,rep,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	SubmittedAt   []*wellknown.ExpressionTimestamp `protobuf:"bytes,4,rep,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Runtime       []*wellknown.ExpressionEnum      `protobuf:"bytes,5,rep,name=runtime,proto3" json:"runtime,omitempty"`
	Status        []*wellknown.ExpressionEnum      `protobuf:"bytes,6,rep,name=status,proto3" json:"status,omitempty"`
	Verdict       []*wellknown.ExpressionEnum      `protobuf:"bytes,10,rep,name=verdict,proto3" json:"verdict,omitempty"`
	Score         []*wellknown.ExpressionFloat     `protobuf:"bytes,7,rep,name=score,proto3" json:"score,omitempty"`
	Percentage    []*wellknown.ExpressionFloat     `protobuf:"bytes,8,rep,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubmissionsInput_Filter) Reset() {
	*x = ListSubmissionsInput_Filter{}
	mi := &file_eolymp_course_submission_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubmissionsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubmissionsInput_Filter) ProtoMessage() {}

func (x *ListSubmissionsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_submission_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubmissionsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListSubmissionsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_course_submission_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListSubmissionsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetMaterialId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MaterialId
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetSubmittedAt() []*wellknown.ExpressionTimestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetRuntime() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetStatus() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetVerdict() []*wellknown.ExpressionEnum {
	if x != nil {
		return x.Verdict
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetScore() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *ListSubmissionsInput_Filter) GetPercentage() []*wellknown.ExpressionFloat {
	if x != nil {
		return x.Percentage
	}
	return nil
}

var File_eolymp_course_submission_service_proto protoreflect.FileDescriptor

const file_eolymp_course_submission_service_proto_rawDesc = "" +
	"\n" +
	"&eolymp/course/submission_service.proto\x12\reolymp.course\x1a\x1deolymp/annotations/http.proto\x1a\"eolymp/annotations/ratelimit.proto\x1a\x1eeolymp/annotations/scope.proto\x1a\x1deolymp/atlas/submission.proto\x1a!eolymp/wellknown/expression.proto\"j\n" +
	"\x15CreateSubmissionInput\x12\x1f\n" +
	"\vmaterial_id\x18\x01 \x01(\tR\n" +
	"materialId\x12\x18\n" +
	"\aruntime\x18\x02 \x01(\tR\aruntime\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\"=\n" +
	"\x16CreateSubmissionOutput\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"\xb7\x05\n" +
	"\x14ListSubmissionsInput\x12\x14\n" +
	"\x05after\x18\f \x01(\tR\x05after\x12\x12\n" +
	"\x04size\x18\v \x01(\x05R\x04size\x12D\n" +
	"\afilters\x18( \x01(\v2*.eolymp.course.ListSubmissionsInput.FilterR\afilters\x1a\xae\x04\n" +
	"\x06Filter\x12.\n" +
	"\x02id\x18\x01 \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\x02id\x12;\n" +
	"\tmember_id\x18\t \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\bmemberId\x12?\n" +
	"\vmaterial_id\x18\v \x03(\v2\x1e.eolymp.wellknown.ExpressionIDR\n" +
	"materialId\x12H\n" +
	"\fsubmitted_at\x18\x04 \x03(\v2%.eolymp.wellknown.ExpressionTimestampR\vsubmittedAt\x12:\n" +
	"\aruntime\x18\x05 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\aruntime\x128\n" +
	"\x06status\x18\x06 \x03(\v2 .eolymp.wellknown.ExpressionEnumR\x06status\x12:\n" +
	"\averdict\x18\n" +
	" \x03(\v2 .eolymp.wellknown.ExpressionEnumR\averdict\x127\n" +
	"\x05score\x18\a \x03(\v2!.eolymp.wellknown.ExpressionFloatR\x05score\x12A\n" +
	"\n" +
	"percentage\x18\b \x03(\v2!.eolymp.wellknown.ExpressionFloatR\n" +
	"percentage\"\x87\x01\n" +
	"\x15ListSubmissionsOutput\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.eolymp.atlas.SubmissionR\x05items\x12(\n" +
	"\x10next_page_cursor\x18\x04 \x01(\tR\x0enextPageCursor\">\n" +
	"\x17DescribeSubmissionInput\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"T\n" +
	"\x18DescribeSubmissionOutput\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.atlas.SubmissionR\n" +
	"submission\";\n" +
	"\x14WatchSubmissionInput\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"Q\n" +
	"\x15WatchSubmissionOutput\x128\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x18.eolymp.atlas.SubmissionR\n" +
	"submission2\x87\x05\n" +
	"\x11SubmissionService\x12\xa0\x01\n" +
	"\x10CreateSubmission\x12$.eolymp.course.CreateSubmissionInput\x1a%.eolymp.course.CreateSubmissionOutput\"?\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\n" +
	"\xd7#>\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x18\x8a\xe3\n" +
	"\x14course:course:submit\x82\xd3\xe4\x93\x02\x0e\"\f/submissions\x12\x9b\x01\n" +
	"\x0fListSubmissions\x12#.eolymp.course.ListSubmissionsInput\x1a$.eolymp.course.ListSubmissionsOutput\"=\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x80?\xf8\xe2\n" +
	"\x05\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12course:course:read\x82\xd3\xe4\x93\x02\x0e\x12\f/submissions\x12\xb4\x01\n" +
	"\x12DescribeSubmission\x12&.eolymp.course.DescribeSubmissionInput\x1a'.eolymp.course.DescribeSubmissionOutput\"M\xea\xe2\n" +
	"\v\xf5\xe2\n" +
	"\x00\x00\x00@\xf8\xe2\n" +
	"\n" +
	"\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12course:course:read\x82\xd3\xe4\x93\x02\x1e\x12\x1c/submissions/{submission_id}\x12z\n" +
	"\x0fWatchSubmission\x12#.eolymp.course.WatchSubmissionInput\x1a$.eolymp.course.WatchSubmissionOutput\"\x1a\x82\xe3\n" +
	"\x16\x8a\xe3\n" +
	"\x12course:course:read0\x01B/Z-github.com/eolymp/go-sdk/eolymp/course;courseb\x06proto3"

var (
	file_eolymp_course_submission_service_proto_rawDescOnce sync.Once
	file_eolymp_course_submission_service_proto_rawDescData []byte
)

func file_eolymp_course_submission_service_proto_rawDescGZIP() []byte {
	file_eolymp_course_submission_service_proto_rawDescOnce.Do(func() {
		file_eolymp_course_submission_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eolymp_course_submission_service_proto_rawDesc), len(file_eolymp_course_submission_service_proto_rawDesc)))
	})
	return file_eolymp_course_submission_service_proto_rawDescData
}

var file_eolymp_course_submission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_eolymp_course_submission_service_proto_goTypes = []any{
	(*CreateSubmissionInput)(nil),         // 0: eolymp.course.CreateSubmissionInput
	(*CreateSubmissionOutput)(nil),        // 1: eolymp.course.CreateSubmissionOutput
	(*ListSubmissionsInput)(nil),          // 2: eolymp.course.ListSubmissionsInput
	(*ListSubmissionsOutput)(nil),         // 3: eolymp.course.ListSubmissionsOutput
	(*DescribeSubmissionInput)(nil),       // 4: eolymp.course.DescribeSubmissionInput
	(*DescribeSubmissionOutput)(nil),      // 5: eolymp.course.DescribeSubmissionOutput
	(*WatchSubmissionInput)(nil),          // 6: eolymp.course.WatchSubmissionInput
	(*WatchSubmissionOutput)(nil),         // 7: eolymp.course.WatchSubmissionOutput
	(*ListSubmissionsInput_Filter)(nil),   // 8: eolymp.course.ListSubmissionsInput.Filter
	(*atlas.Submission)(nil),              // 9: eolymp.atlas.Submission
	(*wellknown.ExpressionID)(nil),        // 10: eolymp.wellknown.ExpressionID
	(*wellknown.ExpressionTimestamp)(nil), // 11: eolymp.wellknown.ExpressionTimestamp
	(*wellknown.ExpressionEnum)(nil),      // 12: eolymp.wellknown.ExpressionEnum
	(*wellknown.ExpressionFloat)(nil),     // 13: eolymp.wellknown.ExpressionFloat
}
var file_eolymp_course_submission_service_proto_depIdxs = []int32{
	8,  // 0: eolymp.course.ListSubmissionsInput.filters:type_name -> eolymp.course.ListSubmissionsInput.Filter
	9,  // 1: eolymp.course.ListSubmissionsOutput.items:type_name -> eolymp.atlas.Submission
	9,  // 2: eolymp.course.DescribeSubmissionOutput.submission:type_name -> eolymp.atlas.Submission
	9,  // 3: eolymp.course.WatchSubmissionOutput.submission:type_name -> eolymp.atlas.Submission
	10, // 4: eolymp.course.ListSubmissionsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	10, // 5: eolymp.course.ListSubmissionsInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	10, // 6: eolymp.course.ListSubmissionsInput.Filter.material_id:type_name -> eolymp.wellknown.ExpressionID
	11, // 7: eolymp.course.ListSubmissionsInput.Filter.submitted_at:type_name -> eolymp.wellknown.ExpressionTimestamp
	12, // 8: eolymp.course.ListSubmissionsInput.Filter.runtime:type_name -> eolymp.wellknown.ExpressionEnum
	12, // 9: eolymp.course.ListSubmissionsInput.Filter.status:type_name -> eolymp.wellknown.ExpressionEnum
	12, // 10: eolymp.course.ListSubmissionsInput.Filter.verdict:type_name -> eolymp.wellknown.ExpressionEnum
	13, // 11: eolymp.course.ListSubmissionsInput.Filter.score:type_name -> eolymp.wellknown.ExpressionFloat
	13, // 12: eolymp.course.ListSubmissionsInput.Filter.percentage:type_name -> eolymp.wellknown.ExpressionFloat
	0,  // 13: eolymp.course.SubmissionService.CreateSubmission:input_type -> eolymp.course.CreateSubmissionInput
	2,  // 14: eolymp.course.SubmissionService.ListSubmissions:input_type -> eolymp.course.ListSubmissionsInput
	4,  // 15: eolymp.course.SubmissionService.DescribeSubmission:input_type -> eolymp.course.DescribeSubmissionInput
	6,  // 16: eolymp.course.SubmissionService.WatchSubmission:input_type -> eolymp.course.WatchSubmissionInput
	1,  // 17: eolymp.course.SubmissionService.CreateSubmission:output_type -> eolymp.course.CreateSubmissionOutput
	3,  // 18: eolymp.course.SubmissionService.ListSubmissions:output_type -> eolymp.course.ListSubmissionsOutput
	5,  // 19: eolymp.course.SubmissionService.DescribeSubmission:output_type -> eolymp.course.DescribeSubmissionOutput
	7,  // 20: eolymp.course.SubmissionService.WatchSubmission:output_type -> eolymp.course.WatchSubmissionOutput
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_eolymp_course_submission_service_proto_init() }
func file_eolymp_course_submission_service_proto_init() {
	if File_eolymp_course_submission_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eolymp_course_submission_service_proto_rawDesc), len(file_eolymp_course_submission_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_course_submission_service_proto_goTypes,
		DependencyIndexes: file_eolymp_course_submission_service_proto_depIdxs,
		MessageInfos:      file_eolymp_course_submission_service_proto_msgTypes,
	}.Build()
	File_eolymp_course_submission_service_proto = out.File
	file_eolymp_course_submission_service_proto_goTypes = nil
	file_eolymp_course_submission_service_proto_depIdxs = nil
}
