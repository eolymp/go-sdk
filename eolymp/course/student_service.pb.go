// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: eolymp/course/student_service.proto

package course

import (
	_ "github.com/eolymp/go-sdk/eolymp/annotations"
	wellknown "github.com/eolymp/go-sdk/eolymp/wellknown"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateStudentInput_Patch int32

const (
	UpdateStudentInput_ALL        UpdateStudentInput_Patch = 0
	UpdateStudentInput_INACTIVE   UpdateStudentInput_Patch = 1
	UpdateStudentInput_ASSIGN_ALL UpdateStudentInput_Patch = 2
)

// Enum value maps for UpdateStudentInput_Patch.
var (
	UpdateStudentInput_Patch_name = map[int32]string{
		0: "ALL",
		1: "INACTIVE",
		2: "ASSIGN_ALL",
	}
	UpdateStudentInput_Patch_value = map[string]int32{
		"ALL":        0,
		"INACTIVE":   1,
		"ASSIGN_ALL": 2,
	}
)

func (x UpdateStudentInput_Patch) Enum() *UpdateStudentInput_Patch {
	p := new(UpdateStudentInput_Patch)
	*p = x
	return p
}

func (x UpdateStudentInput_Patch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStudentInput_Patch) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_course_student_service_proto_enumTypes[0].Descriptor()
}

func (UpdateStudentInput_Patch) Type() protoreflect.EnumType {
	return &file_eolymp_course_student_service_proto_enumTypes[0]
}

func (x UpdateStudentInput_Patch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateStudentInput_Patch.Descriptor instead.
func (UpdateStudentInput_Patch) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{2, 0}
}

type ListStudentsInput_Sortable int32

const (
	ListStudentsInput_DEFAULT ListStudentsInput_Sortable = 0
)

// Enum value maps for ListStudentsInput_Sortable.
var (
	ListStudentsInput_Sortable_name = map[int32]string{
		0: "DEFAULT",
	}
	ListStudentsInput_Sortable_value = map[string]int32{
		"DEFAULT": 0,
	}
)

func (x ListStudentsInput_Sortable) Enum() *ListStudentsInput_Sortable {
	p := new(ListStudentsInput_Sortable)
	*p = x
	return p
}

func (x ListStudentsInput_Sortable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListStudentsInput_Sortable) Descriptor() protoreflect.EnumDescriptor {
	return file_eolymp_course_student_service_proto_enumTypes[1].Descriptor()
}

func (ListStudentsInput_Sortable) Type() protoreflect.EnumType {
	return &file_eolymp_course_student_service_proto_enumTypes[1]
}

func (x ListStudentsInput_Sortable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListStudentsInput_Sortable.Descriptor instead.
func (ListStudentsInput_Sortable) EnumDescriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{8, 0}
}

type CreateStudentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
}

func (x *CreateStudentInput) Reset() {
	*x = CreateStudentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentInput) ProtoMessage() {}

func (x *CreateStudentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentInput.ProtoReflect.Descriptor instead.
func (*CreateStudentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateStudentInput) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

type CreateStudentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *CreateStudentOutput) Reset() {
	*x = CreateStudentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentOutput) ProtoMessage() {}

func (x *CreateStudentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentOutput.ProtoReflect.Descriptor instead.
func (*CreateStudentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStudentOutput) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type UpdateStudentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// specify list of fields to update, if empty all fields are updated
	Patch    []UpdateStudentInput_Patch `protobuf:"varint,1,rep,packed,name=patch,proto3,enum=eolymp.course.UpdateStudentInput_Patch" json:"patch,omitempty"`
	MemberId string                     `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Student  *Student                   `protobuf:"bytes,3,opt,name=student,proto3" json:"student,omitempty"`
}

func (x *UpdateStudentInput) Reset() {
	*x = UpdateStudentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentInput) ProtoMessage() {}

func (x *UpdateStudentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentInput.ProtoReflect.Descriptor instead.
func (*UpdateStudentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateStudentInput) GetPatch() []UpdateStudentInput_Patch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *UpdateStudentInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *UpdateStudentInput) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

type UpdateStudentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudentOutput) Reset() {
	*x = UpdateStudentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentOutput) ProtoMessage() {}

func (x *UpdateStudentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentOutput.ProtoReflect.Descriptor instead.
func (*UpdateStudentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{3}
}

type DeleteStudentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *DeleteStudentInput) Reset() {
	*x = DeleteStudentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentInput) ProtoMessage() {}

func (x *DeleteStudentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentInput.ProtoReflect.Descriptor instead.
func (*DeleteStudentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteStudentInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type DeleteStudentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStudentOutput) Reset() {
	*x = DeleteStudentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentOutput) ProtoMessage() {}

func (x *DeleteStudentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentOutput.ProtoReflect.Descriptor instead.
func (*DeleteStudentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{5}
}

type DescribeStudentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string          `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Extra    []Student_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.course.Student_Extra" json:"extra,omitempty"`
}

func (x *DescribeStudentInput) Reset() {
	*x = DescribeStudentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeStudentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeStudentInput) ProtoMessage() {}

func (x *DescribeStudentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeStudentInput.ProtoReflect.Descriptor instead.
func (*DescribeStudentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeStudentInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *DescribeStudentInput) GetExtra() []Student_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeStudentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
}

func (x *DescribeStudentOutput) Reset() {
	*x = DescribeStudentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeStudentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeStudentOutput) ProtoMessage() {}

func (x *DescribeStudentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeStudentOutput.ProtoReflect.Descriptor instead.
func (*DescribeStudentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeStudentOutput) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

type ListStudentsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination
	After  string `protobuf:"bytes,12,opt,name=after,proto3" json:"after,omitempty"`
	Offset int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListStudentsInput_Filter  `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort    ListStudentsInput_Sortable `protobuf:"varint,50,opt,name=sort,proto3,enum=eolymp.course.ListStudentsInput_Sortable" json:"sort,omitempty"`
	Order   wellknown.Direction        `protobuf:"varint,51,opt,name=order,proto3,enum=eolymp.wellknown.Direction" json:"order,omitempty"`
	Extra   []Student_Extra            `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.course.Student_Extra" json:"extra,omitempty"`
}

func (x *ListStudentsInput) Reset() {
	*x = ListStudentsInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentsInput) ProtoMessage() {}

func (x *ListStudentsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentsInput.ProtoReflect.Descriptor instead.
func (*ListStudentsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListStudentsInput) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListStudentsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListStudentsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListStudentsInput) GetFilters() *ListStudentsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListStudentsInput) GetSort() ListStudentsInput_Sortable {
	if x != nil {
		return x.Sort
	}
	return ListStudentsInput_DEFAULT
}

func (x *ListStudentsInput) GetOrder() wellknown.Direction {
	if x != nil {
		return x.Order
	}
	return wellknown.Direction(0)
}

func (x *ListStudentsInput) GetExtra() []Student_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ListStudentsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          int32      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items          []*Student `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextPageCursor string     `protobuf:"bytes,3,opt,name=next_page_cursor,json=nextPageCursor,proto3" json:"next_page_cursor,omitempty"`
	PrevPageCursor string     `protobuf:"bytes,4,opt,name=prev_page_cursor,json=prevPageCursor,proto3" json:"prev_page_cursor,omitempty"`
}

func (x *ListStudentsOutput) Reset() {
	*x = ListStudentsOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentsOutput) ProtoMessage() {}

func (x *ListStudentsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentsOutput.ProtoReflect.Descriptor instead.
func (*ListStudentsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListStudentsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStudentsOutput) GetItems() []*Student {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListStudentsOutput) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

func (x *ListStudentsOutput) GetPrevPageCursor() string {
	if x != nil {
		return x.PrevPageCursor
	}
	return ""
}

type WatchStudentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string          `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Extra    []Student_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.course.Student_Extra" json:"extra,omitempty"`
}

func (x *WatchStudentInput) Reset() {
	*x = WatchStudentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchStudentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStudentInput) ProtoMessage() {}

func (x *WatchStudentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStudentInput.ProtoReflect.Descriptor instead.
func (*WatchStudentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{10}
}

func (x *WatchStudentInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *WatchStudentInput) GetExtra() []Student_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WatchStudentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
}

func (x *WatchStudentOutput) Reset() {
	*x = WatchStudentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchStudentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStudentOutput) ProtoMessage() {}

func (x *WatchStudentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStudentOutput.ProtoReflect.Descriptor instead.
func (*WatchStudentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{11}
}

func (x *WatchStudentOutput) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

type JoinCourseInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinCourseInput) Reset() {
	*x = JoinCourseInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinCourseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCourseInput) ProtoMessage() {}

func (x *JoinCourseInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCourseInput.ProtoReflect.Descriptor instead.
func (*JoinCourseInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{12}
}

type JoinCourseOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinCourseOutput) Reset() {
	*x = JoinCourseOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinCourseOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinCourseOutput) ProtoMessage() {}

func (x *JoinCourseOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinCourseOutput.ProtoReflect.Descriptor instead.
func (*JoinCourseOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{13}
}

type DescribeViewerInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra []Student_Extra `protobuf:"varint,1123,rep,packed,name=extra,proto3,enum=eolymp.course.Student_Extra" json:"extra,omitempty"`
}

func (x *DescribeViewerInput) Reset() {
	*x = DescribeViewerInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeViewerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeViewerInput) ProtoMessage() {}

func (x *DescribeViewerInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeViewerInput.ProtoReflect.Descriptor instead.
func (*DescribeViewerInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeViewerInput) GetExtra() []Student_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DescribeViewerOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
}

func (x *DescribeViewerOutput) Reset() {
	*x = DescribeViewerOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeViewerOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeViewerOutput) ProtoMessage() {}

func (x *DescribeViewerOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeViewerOutput.ProtoReflect.Descriptor instead.
func (*DescribeViewerOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeViewerOutput) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

type ListStudentAssignmentsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// pagination
	Offset int32 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int32 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	// data filters
	Filters *ListStudentAssignmentsInput_Filter `protobuf:"bytes,40,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListStudentAssignmentsInput) Reset() {
	*x = ListStudentAssignmentsInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentAssignmentsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentAssignmentsInput) ProtoMessage() {}

func (x *ListStudentAssignmentsInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentAssignmentsInput.ProtoReflect.Descriptor instead.
func (*ListStudentAssignmentsInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListStudentAssignmentsInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ListStudentAssignmentsInput) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListStudentAssignmentsInput) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListStudentAssignmentsInput) GetFilters() *ListStudentAssignmentsInput_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListStudentAssignmentsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*Assignment `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListStudentAssignmentsOutput) Reset() {
	*x = ListStudentAssignmentsOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentAssignmentsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentAssignmentsOutput) ProtoMessage() {}

func (x *ListStudentAssignmentsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentAssignmentsOutput.ProtoReflect.Descriptor instead.
func (*ListStudentAssignmentsOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListStudentAssignmentsOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStudentAssignmentsOutput) GetItems() []*Assignment {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateStudentAssignmentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId       string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	ModuleId       string                 `protobuf:"bytes,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	StartAfter     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`             // optionally, time by when assignment should be complete
	CompleteBefore *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=complete_before,json=completeBefore,proto3" json:"complete_before,omitempty"` // optionally, time by when assignment should be complete
	Duration       uint32                 `protobuf:"varint,13,opt,name=duration,proto3" json:"duration,omitempty"`                                  // optionally, duration of the assignment in seconds
	Upsolve        bool                   `protobuf:"varint,30,opt,name=upsolve,proto3" json:"upsolve,omitempty"`                                    // allow student to upsolve
}

func (x *UpdateStudentAssignmentInput) Reset() {
	*x = UpdateStudentAssignmentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentAssignmentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentAssignmentInput) ProtoMessage() {}

func (x *UpdateStudentAssignmentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentAssignmentInput.ProtoReflect.Descriptor instead.
func (*UpdateStudentAssignmentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateStudentAssignmentInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *UpdateStudentAssignmentInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *UpdateStudentAssignmentInput) GetStartAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAfter
	}
	return nil
}

func (x *UpdateStudentAssignmentInput) GetCompleteBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteBefore
	}
	return nil
}

func (x *UpdateStudentAssignmentInput) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateStudentAssignmentInput) GetUpsolve() bool {
	if x != nil {
		return x.Upsolve
	}
	return false
}

type UpdateStudentAssignmentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudentAssignmentOutput) Reset() {
	*x = UpdateStudentAssignmentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentAssignmentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentAssignmentOutput) ProtoMessage() {}

func (x *UpdateStudentAssignmentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentAssignmentOutput.ProtoReflect.Descriptor instead.
func (*UpdateStudentAssignmentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{19}
}

type DeleteStudentAssignmentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	ModuleId string `protobuf:"bytes,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *DeleteStudentAssignmentInput) Reset() {
	*x = DeleteStudentAssignmentInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentAssignmentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentAssignmentInput) ProtoMessage() {}

func (x *DeleteStudentAssignmentInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentAssignmentInput.ProtoReflect.Descriptor instead.
func (*DeleteStudentAssignmentInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteStudentAssignmentInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *DeleteStudentAssignmentInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

type DeleteStudentAssignmentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStudentAssignmentOutput) Reset() {
	*x = DeleteStudentAssignmentOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentAssignmentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentAssignmentOutput) ProtoMessage() {}

func (x *DeleteStudentAssignmentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentAssignmentOutput.ProtoReflect.Descriptor instead.
func (*DeleteStudentAssignmentOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{21}
}

type ListStudentGradesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *ListStudentGradesInput) Reset() {
	*x = ListStudentGradesInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentGradesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentGradesInput) ProtoMessage() {}

func (x *ListStudentGradesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentGradesInput.ProtoReflect.Descriptor instead.
func (*ListStudentGradesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListStudentGradesInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type ListStudentGradesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Module_Progress `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListStudentGradesOutput) Reset() {
	*x = ListStudentGradesOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentGradesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentGradesOutput) ProtoMessage() {}

func (x *ListStudentGradesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentGradesOutput.ProtoReflect.Descriptor instead.
func (*ListStudentGradesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListStudentGradesOutput) GetItems() []*Module_Progress {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListModuleGradesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	ModuleId string `protobuf:"bytes,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *ListModuleGradesInput) Reset() {
	*x = ListModuleGradesInput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModuleGradesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModuleGradesInput) ProtoMessage() {}

func (x *ListModuleGradesInput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModuleGradesInput.ProtoReflect.Descriptor instead.
func (*ListModuleGradesInput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListModuleGradesInput) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ListModuleGradesInput) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

type ListModuleGradesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Material_Progress `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListModuleGradesOutput) Reset() {
	*x = ListModuleGradesOutput{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModuleGradesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModuleGradesOutput) ProtoMessage() {}

func (x *ListModuleGradesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModuleGradesOutput.ProtoReflect.Descriptor instead.
func (*ListModuleGradesOutput) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListModuleGradesOutput) GetItems() []*Material_Progress {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListStudentsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    string                    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id       []*wellknown.ExpressionID `protobuf:"bytes,10,rep,name=id,proto3" json:"id,omitempty"`
	MemberId []*wellknown.ExpressionID `protobuf:"bytes,11,rep,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	GroupId  []*wellknown.ExpressionID `protobuf:"bytes,12,rep,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *ListStudentsInput_Filter) Reset() {
	*x = ListStudentsInput_Filter{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentsInput_Filter) ProtoMessage() {}

func (x *ListStudentsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListStudentsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListStudentsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListStudentsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListStudentsInput_Filter) GetMemberId() []*wellknown.ExpressionID {
	if x != nil {
		return x.MemberId
	}
	return nil
}

func (x *ListStudentsInput_Filter) GetGroupId() []*wellknown.ExpressionID {
	if x != nil {
		return x.GroupId
	}
	return nil
}

type ListStudentAssignmentsInput_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query    string                    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Id       []*wellknown.ExpressionID `protobuf:"bytes,10,rep,name=id,proto3" json:"id,omitempty"`
	ModuleId []*wellknown.ExpressionID `protobuf:"bytes,11,rep,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *ListStudentAssignmentsInput_Filter) Reset() {
	*x = ListStudentAssignmentsInput_Filter{}
	mi := &file_eolymp_course_student_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentAssignmentsInput_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentAssignmentsInput_Filter) ProtoMessage() {}

func (x *ListStudentAssignmentsInput_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_eolymp_course_student_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentAssignmentsInput_Filter.ProtoReflect.Descriptor instead.
func (*ListStudentAssignmentsInput_Filter) Descriptor() ([]byte, []int) {
	return file_eolymp_course_student_service_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ListStudentAssignmentsInput_Filter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListStudentAssignmentsInput_Filter) GetId() []*wellknown.ExpressionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListStudentAssignmentsInput_Filter) GetModuleId() []*wellknown.ExpressionID {
	if x != nil {
		return x.ModuleId
	}
	return nil
}

var File_eolymp_course_student_service_proto protoreflect.FileDescriptor

var file_eolymp_course_student_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x1a, 0x1d, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x53, 0x53, 0x49, 0x47,
	0x4e, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x31,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x68, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x49, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0xa1, 0x04,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0xc6, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c,
	0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x22, 0x65, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x46, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22,
	0x11, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4a, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x33, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xe3, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x48, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0xc1, 0x02, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x1a, 0x8b, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x65, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12,
	0x43, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x75, 0x70, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x58, 0x0a, 0x1c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x35, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x51,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x50, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x32, 0x8b, 0x11, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x3b, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14,
	0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x22, 0x09, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x9f, 0x01, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x47, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0xa0, 0x40, 0xf8, 0xe2, 0x0a, 0x14, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x15, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9f,
	0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x47, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a,
	0x00, 0x00, 0x80, 0x3f, 0xf8, 0xe2, 0x0a, 0x05, 0x82, 0xe3, 0x0a, 0x17, 0x8a, 0xe3, 0x0a, 0x13,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xa4, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x46, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64,
	0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x12, 0x15, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d,
	0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x6c,
	0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x3a, 0xea,
	0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3,
	0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x0c, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x1a,
	0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x30, 0x01, 0x12, 0x85, 0x01, 0x0a,
	0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x36, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0x00, 0x40, 0xf8, 0xe2, 0x0a, 0x0a, 0x82, 0xe3, 0x0a,
	0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x22, 0x05, 0x2f,
	0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x9b, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x40, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a,
	0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x12, 0xc5, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x52, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x52, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2,
	0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x22, 0x21, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2c,
	0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x52, 0xea, 0xe2,
	0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a,
	0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0xb1, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4d, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00, 0x00,
	0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x6c, 0x79,
	0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x25, 0x2e, 0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x59, 0xea, 0xe2, 0x0a, 0x0b, 0xf5, 0xe2, 0x0a, 0x00,
	0x00, 0xa0, 0x41, 0xf8, 0xe2, 0x0a, 0x64, 0x82, 0xe3, 0x0a, 0x16, 0x8a, 0xe3, 0x0a, 0x12, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3a, 0x72, 0x65, 0x61,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x65, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x65, 0x6f,
	0x6c, 0x79, 0x6d, 0x70, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3b, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eolymp_course_student_service_proto_rawDescOnce sync.Once
	file_eolymp_course_student_service_proto_rawDescData = file_eolymp_course_student_service_proto_rawDesc
)

func file_eolymp_course_student_service_proto_rawDescGZIP() []byte {
	file_eolymp_course_student_service_proto_rawDescOnce.Do(func() {
		file_eolymp_course_student_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eolymp_course_student_service_proto_rawDescData)
	})
	return file_eolymp_course_student_service_proto_rawDescData
}

var file_eolymp_course_student_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eolymp_course_student_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_eolymp_course_student_service_proto_goTypes = []any{
	(UpdateStudentInput_Patch)(0),              // 0: eolymp.course.UpdateStudentInput.Patch
	(ListStudentsInput_Sortable)(0),            // 1: eolymp.course.ListStudentsInput.Sortable
	(*CreateStudentInput)(nil),                 // 2: eolymp.course.CreateStudentInput
	(*CreateStudentOutput)(nil),                // 3: eolymp.course.CreateStudentOutput
	(*UpdateStudentInput)(nil),                 // 4: eolymp.course.UpdateStudentInput
	(*UpdateStudentOutput)(nil),                // 5: eolymp.course.UpdateStudentOutput
	(*DeleteStudentInput)(nil),                 // 6: eolymp.course.DeleteStudentInput
	(*DeleteStudentOutput)(nil),                // 7: eolymp.course.DeleteStudentOutput
	(*DescribeStudentInput)(nil),               // 8: eolymp.course.DescribeStudentInput
	(*DescribeStudentOutput)(nil),              // 9: eolymp.course.DescribeStudentOutput
	(*ListStudentsInput)(nil),                  // 10: eolymp.course.ListStudentsInput
	(*ListStudentsOutput)(nil),                 // 11: eolymp.course.ListStudentsOutput
	(*WatchStudentInput)(nil),                  // 12: eolymp.course.WatchStudentInput
	(*WatchStudentOutput)(nil),                 // 13: eolymp.course.WatchStudentOutput
	(*JoinCourseInput)(nil),                    // 14: eolymp.course.JoinCourseInput
	(*JoinCourseOutput)(nil),                   // 15: eolymp.course.JoinCourseOutput
	(*DescribeViewerInput)(nil),                // 16: eolymp.course.DescribeViewerInput
	(*DescribeViewerOutput)(nil),               // 17: eolymp.course.DescribeViewerOutput
	(*ListStudentAssignmentsInput)(nil),        // 18: eolymp.course.ListStudentAssignmentsInput
	(*ListStudentAssignmentsOutput)(nil),       // 19: eolymp.course.ListStudentAssignmentsOutput
	(*UpdateStudentAssignmentInput)(nil),       // 20: eolymp.course.UpdateStudentAssignmentInput
	(*UpdateStudentAssignmentOutput)(nil),      // 21: eolymp.course.UpdateStudentAssignmentOutput
	(*DeleteStudentAssignmentInput)(nil),       // 22: eolymp.course.DeleteStudentAssignmentInput
	(*DeleteStudentAssignmentOutput)(nil),      // 23: eolymp.course.DeleteStudentAssignmentOutput
	(*ListStudentGradesInput)(nil),             // 24: eolymp.course.ListStudentGradesInput
	(*ListStudentGradesOutput)(nil),            // 25: eolymp.course.ListStudentGradesOutput
	(*ListModuleGradesInput)(nil),              // 26: eolymp.course.ListModuleGradesInput
	(*ListModuleGradesOutput)(nil),             // 27: eolymp.course.ListModuleGradesOutput
	(*ListStudentsInput_Filter)(nil),           // 28: eolymp.course.ListStudentsInput.Filter
	(*ListStudentAssignmentsInput_Filter)(nil), // 29: eolymp.course.ListStudentAssignmentsInput.Filter
	(*Student)(nil),                            // 30: eolymp.course.Student
	(Student_Extra)(0),                         // 31: eolymp.course.Student.Extra
	(wellknown.Direction)(0),                   // 32: eolymp.wellknown.Direction
	(*Assignment)(nil),                         // 33: eolymp.course.Assignment
	(*timestamppb.Timestamp)(nil),              // 34: google.protobuf.Timestamp
	(*Module_Progress)(nil),                    // 35: eolymp.course.Module.Progress
	(*Material_Progress)(nil),                  // 36: eolymp.course.Material.Progress
	(*wellknown.ExpressionID)(nil),             // 37: eolymp.wellknown.ExpressionID
}
var file_eolymp_course_student_service_proto_depIdxs = []int32{
	30, // 0: eolymp.course.CreateStudentInput.student:type_name -> eolymp.course.Student
	0,  // 1: eolymp.course.UpdateStudentInput.patch:type_name -> eolymp.course.UpdateStudentInput.Patch
	30, // 2: eolymp.course.UpdateStudentInput.student:type_name -> eolymp.course.Student
	31, // 3: eolymp.course.DescribeStudentInput.extra:type_name -> eolymp.course.Student.Extra
	30, // 4: eolymp.course.DescribeStudentOutput.student:type_name -> eolymp.course.Student
	28, // 5: eolymp.course.ListStudentsInput.filters:type_name -> eolymp.course.ListStudentsInput.Filter
	1,  // 6: eolymp.course.ListStudentsInput.sort:type_name -> eolymp.course.ListStudentsInput.Sortable
	32, // 7: eolymp.course.ListStudentsInput.order:type_name -> eolymp.wellknown.Direction
	31, // 8: eolymp.course.ListStudentsInput.extra:type_name -> eolymp.course.Student.Extra
	30, // 9: eolymp.course.ListStudentsOutput.items:type_name -> eolymp.course.Student
	31, // 10: eolymp.course.WatchStudentInput.extra:type_name -> eolymp.course.Student.Extra
	30, // 11: eolymp.course.WatchStudentOutput.student:type_name -> eolymp.course.Student
	31, // 12: eolymp.course.DescribeViewerInput.extra:type_name -> eolymp.course.Student.Extra
	30, // 13: eolymp.course.DescribeViewerOutput.student:type_name -> eolymp.course.Student
	29, // 14: eolymp.course.ListStudentAssignmentsInput.filters:type_name -> eolymp.course.ListStudentAssignmentsInput.Filter
	33, // 15: eolymp.course.ListStudentAssignmentsOutput.items:type_name -> eolymp.course.Assignment
	34, // 16: eolymp.course.UpdateStudentAssignmentInput.start_after:type_name -> google.protobuf.Timestamp
	34, // 17: eolymp.course.UpdateStudentAssignmentInput.complete_before:type_name -> google.protobuf.Timestamp
	35, // 18: eolymp.course.ListStudentGradesOutput.items:type_name -> eolymp.course.Module.Progress
	36, // 19: eolymp.course.ListModuleGradesOutput.items:type_name -> eolymp.course.Material.Progress
	37, // 20: eolymp.course.ListStudentsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	37, // 21: eolymp.course.ListStudentsInput.Filter.member_id:type_name -> eolymp.wellknown.ExpressionID
	37, // 22: eolymp.course.ListStudentsInput.Filter.group_id:type_name -> eolymp.wellknown.ExpressionID
	37, // 23: eolymp.course.ListStudentAssignmentsInput.Filter.id:type_name -> eolymp.wellknown.ExpressionID
	37, // 24: eolymp.course.ListStudentAssignmentsInput.Filter.module_id:type_name -> eolymp.wellknown.ExpressionID
	2,  // 25: eolymp.course.StudentService.CreateStudent:input_type -> eolymp.course.CreateStudentInput
	4,  // 26: eolymp.course.StudentService.UpdateStudent:input_type -> eolymp.course.UpdateStudentInput
	6,  // 27: eolymp.course.StudentService.DeleteStudent:input_type -> eolymp.course.DeleteStudentInput
	8,  // 28: eolymp.course.StudentService.DescribeStudent:input_type -> eolymp.course.DescribeStudentInput
	10, // 29: eolymp.course.StudentService.ListStudents:input_type -> eolymp.course.ListStudentsInput
	12, // 30: eolymp.course.StudentService.WatchStudent:input_type -> eolymp.course.WatchStudentInput
	14, // 31: eolymp.course.StudentService.JoinCourse:input_type -> eolymp.course.JoinCourseInput
	16, // 32: eolymp.course.StudentService.DescribeViewer:input_type -> eolymp.course.DescribeViewerInput
	18, // 33: eolymp.course.StudentService.ListStudentAssignments:input_type -> eolymp.course.ListStudentAssignmentsInput
	20, // 34: eolymp.course.StudentService.UpdateStudentAssignment:input_type -> eolymp.course.UpdateStudentAssignmentInput
	22, // 35: eolymp.course.StudentService.DeleteStudentAssignment:input_type -> eolymp.course.DeleteStudentAssignmentInput
	24, // 36: eolymp.course.StudentService.ListStudentGrades:input_type -> eolymp.course.ListStudentGradesInput
	26, // 37: eolymp.course.StudentService.ListModuleGrades:input_type -> eolymp.course.ListModuleGradesInput
	3,  // 38: eolymp.course.StudentService.CreateStudent:output_type -> eolymp.course.CreateStudentOutput
	5,  // 39: eolymp.course.StudentService.UpdateStudent:output_type -> eolymp.course.UpdateStudentOutput
	7,  // 40: eolymp.course.StudentService.DeleteStudent:output_type -> eolymp.course.DeleteStudentOutput
	9,  // 41: eolymp.course.StudentService.DescribeStudent:output_type -> eolymp.course.DescribeStudentOutput
	11, // 42: eolymp.course.StudentService.ListStudents:output_type -> eolymp.course.ListStudentsOutput
	13, // 43: eolymp.course.StudentService.WatchStudent:output_type -> eolymp.course.WatchStudentOutput
	15, // 44: eolymp.course.StudentService.JoinCourse:output_type -> eolymp.course.JoinCourseOutput
	17, // 45: eolymp.course.StudentService.DescribeViewer:output_type -> eolymp.course.DescribeViewerOutput
	19, // 46: eolymp.course.StudentService.ListStudentAssignments:output_type -> eolymp.course.ListStudentAssignmentsOutput
	21, // 47: eolymp.course.StudentService.UpdateStudentAssignment:output_type -> eolymp.course.UpdateStudentAssignmentOutput
	23, // 48: eolymp.course.StudentService.DeleteStudentAssignment:output_type -> eolymp.course.DeleteStudentAssignmentOutput
	25, // 49: eolymp.course.StudentService.ListStudentGrades:output_type -> eolymp.course.ListStudentGradesOutput
	27, // 50: eolymp.course.StudentService.ListModuleGrades:output_type -> eolymp.course.ListModuleGradesOutput
	38, // [38:51] is the sub-list for method output_type
	25, // [25:38] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_eolymp_course_student_service_proto_init() }
func file_eolymp_course_student_service_proto_init() {
	if File_eolymp_course_student_service_proto != nil {
		return
	}
	file_eolymp_course_assignment_proto_init()
	file_eolymp_course_material_proto_init()
	file_eolymp_course_module_proto_init()
	file_eolymp_course_student_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eolymp_course_student_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eolymp_course_student_service_proto_goTypes,
		DependencyIndexes: file_eolymp_course_student_service_proto_depIdxs,
		EnumInfos:         file_eolymp_course_student_service_proto_enumTypes,
		MessageInfos:      file_eolymp_course_student_service_proto_msgTypes,
	}.Build()
	File_eolymp_course_student_service_proto = out.File
	file_eolymp_course_student_service_proto_rawDesc = nil
	file_eolymp_course_student_service_proto_goTypes = nil
	file_eolymp_course_student_service_proto_depIdxs = nil
}
