// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.18.1
// source: eolymp/course/grade_service.proto

package course

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GradeService_DescribeGrade_FullMethodName   = "/eolymp.course.GradeService/DescribeGrade"
	GradeService_IntrospectGrade_FullMethodName = "/eolymp.course.GradeService/IntrospectGrade"
	GradeService_ListGrades_FullMethodName      = "/eolymp.course.GradeService/ListGrades"
)

// GradeServiceClient is the client API for GradeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GradeServiceClient interface {
	DescribeGrade(ctx context.Context, in *DescribeGradeInput, opts ...grpc.CallOption) (*DescribeGradeOutput, error)
	IntrospectGrade(ctx context.Context, in *IntrospectGradeInput, opts ...grpc.CallOption) (*IntrospectGradeOutput, error)
	ListGrades(ctx context.Context, in *ListGradesInput, opts ...grpc.CallOption) (*ListGradesOutput, error)
}

type gradeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGradeServiceClient(cc grpc.ClientConnInterface) GradeServiceClient {
	return &gradeServiceClient{cc}
}

func (c *gradeServiceClient) DescribeGrade(ctx context.Context, in *DescribeGradeInput, opts ...grpc.CallOption) (*DescribeGradeOutput, error) {
	out := new(DescribeGradeOutput)
	err := c.cc.Invoke(ctx, GradeService_DescribeGrade_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gradeServiceClient) IntrospectGrade(ctx context.Context, in *IntrospectGradeInput, opts ...grpc.CallOption) (*IntrospectGradeOutput, error) {
	out := new(IntrospectGradeOutput)
	err := c.cc.Invoke(ctx, GradeService_IntrospectGrade_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gradeServiceClient) ListGrades(ctx context.Context, in *ListGradesInput, opts ...grpc.CallOption) (*ListGradesOutput, error) {
	out := new(ListGradesOutput)
	err := c.cc.Invoke(ctx, GradeService_ListGrades_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GradeServiceServer is the server API for GradeService service.
// All implementations should embed UnimplementedGradeServiceServer
// for forward compatibility
type GradeServiceServer interface {
	DescribeGrade(context.Context, *DescribeGradeInput) (*DescribeGradeOutput, error)
	IntrospectGrade(context.Context, *IntrospectGradeInput) (*IntrospectGradeOutput, error)
	ListGrades(context.Context, *ListGradesInput) (*ListGradesOutput, error)
}

// UnimplementedGradeServiceServer should be embedded to have forward compatible implementations.
type UnimplementedGradeServiceServer struct {
}

func (UnimplementedGradeServiceServer) DescribeGrade(context.Context, *DescribeGradeInput) (*DescribeGradeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeGrade not implemented")
}
func (UnimplementedGradeServiceServer) IntrospectGrade(context.Context, *IntrospectGradeInput) (*IntrospectGradeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntrospectGrade not implemented")
}
func (UnimplementedGradeServiceServer) ListGrades(context.Context, *ListGradesInput) (*ListGradesOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGrades not implemented")
}

// UnsafeGradeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GradeServiceServer will
// result in compilation errors.
type UnsafeGradeServiceServer interface {
	mustEmbedUnimplementedGradeServiceServer()
}

func RegisterGradeServiceServer(s grpc.ServiceRegistrar, srv GradeServiceServer) {
	s.RegisterService(&GradeService_ServiceDesc, srv)
}

func _GradeService_DescribeGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeGradeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradeServiceServer).DescribeGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GradeService_DescribeGrade_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradeServiceServer).DescribeGrade(ctx, req.(*DescribeGradeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _GradeService_IntrospectGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntrospectGradeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradeServiceServer).IntrospectGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GradeService_IntrospectGrade_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradeServiceServer).IntrospectGrade(ctx, req.(*IntrospectGradeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _GradeService_ListGrades_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGradesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradeServiceServer).ListGrades(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GradeService_ListGrades_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradeServiceServer).ListGrades(ctx, req.(*ListGradesInput))
	}
	return interceptor(ctx, in, info, handler)
}

// GradeService_ServiceDesc is the grpc.ServiceDesc for GradeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GradeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eolymp.course.GradeService",
	HandlerType: (*GradeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DescribeGrade",
			Handler:    _GradeService_DescribeGrade_Handler,
		},
		{
			MethodName: "IntrospectGrade",
			Handler:    _GradeService_IntrospectGrade_Handler,
		},
		{
			MethodName: "ListGrades",
			Handler:    _GradeService_ListGrades_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eolymp/course/grade_service.proto",
}
